<?xml version="1.0" encoding="utf-8"?>
<com_servlet id="msr" name="ORMS 측정" commkind="msr" connname="tpFGTE01">
	<lib id="lib1" name="라이브러리정의" value="com.dgfg.orms.comm.util"/>
	<process id="ORMR010101" name="개별 재무제표 매핑관리" forward="/msr/ORMR0101" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
	</process>
	
	<process id="ORMR010102" name="개별 재무제표 매핑관리" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_st_bas_ym" name="시작기준년월" parmid="sch_st_bas_ym" attr="S" default_value=""/>
		<parm id="sch_ed_bas_ym" name="종료기준년월" parmid="sch_ed_bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="업로드데이터 목록 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 
       A.BAS_YM
     , B.APFLNM
     , B.RG_ENO 
     , B.CHRG_EMPNM  
     , B.RG_DT 
     , DECODE(B.APFLNM, NULL, '미등록', '등록완료') AS RG_YNNM  
     , B.UPLOAD_SQNO 
  FROM ( 
            --SELECT TRIM(#sch_ed_bas_ym#) AS BAS_YM FROM DUAL 
            --UNION ALL 
            SELECT TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_st_bas_ym# - 1),'YYYYMM'),LEVEL),'YYYYMM') BAS_YM  /*1분기까지 표시 하기 위해 SCH_ST_BAS_YM 값에 -1을 합니다*/
            FROM DUAL 
            CONNECT BY TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_st_bas_ym#),'YYYYMM'),LEVEL),'YYYYMM') &lt;= TRIM(#sch_ed_bas_ym#) 
       ) A 
   LEFT JOIN ( 
           SELECT A.BAS_YM, A.APFLNM, A.RG_ENO, B.CHRG_EMPNM, A.RG_DT, A.UPLOAD_SQNO    			
             FROM TB_OR_GA_FNASTM_UPLOAD A               			
             LEFT JOIN TB_OR_OM_EMP B                                           			
               ON A.GRP_ORG_C = B.GRP_ORG_C                                             			
              AND A.RG_ENO = B.ENO                                                      			
            WHERE A.VLD_YN = 'Y'                                                        			
              AND A.UPLOAD_SQNO = (                                                     			
                   SELECT MAX(UPLOAD_SQNO)                                              			
                     FROM TB_OR_GA_FNASTM_UPLOAD                                			
                    WHERE BAS_YM = A.BAS_YM                                             			
                      AND VLD_YN = 'Y'                                                  			
              )                                                                         			
              AND A.GRP_ORG_C = TRIM(#grp_org_c#) 											   	   			
       ) B 
    ON A.BAS_YM = B.BAS_YM 
 WHERE SUBSTR(A.BAS_YM,5,2) IN ('03','06','09','12') 
 ORDER BY A.BAS_YM DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010103" name="개별 재무제표 매핑관리" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="acc_tpc" name="BS/PL구분명" parmid="acc_tpc" attr="S" default_value=""/>
		<parm id="upload_sqno" name="업로드일련번호" parmid="upload_sqno" attr="S" default_value=""/>
		<parm id="mapping_yn" name="매핑여부" parmid="mapping_yn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="재무제표 입력결과 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT  
       A.BAS_YM   
     , B.ACC_TPC   
     , C.INTG_IDVD_CNM AS ACC_TPC_NM   
     , B.SACCT_SQNO AS ACC_SQNO
     , B1.HD_INP_DSC AS HD_INP_DSNM
     , B.UP_ACC_SBJ_CNM   
     , B.ACC_SBJ_CNM   
     , B.ACC_SBJNM
     , B.UP_ACC_SBJ_CNM   
     , B.LVL_NO   
     , NVL(B2.ACC_AM,0) ACC_AM1
     , NVL(B3.ACC_AM,0) ACC_AM2
     , NVL(B4.ACC_AM,0) ACC_AM3
     , B11.INTG_IDVD_CNM AS ACC_DSNM 
     , B12.INTG_IDVD_CNM AS HD_INP_DSNM 
     , B1.BIZ_IX_LV1_NM
     , B1.BIZ_IX_LV2_NM  
 FROM TB_OR_GA_FNASTM_UPLOAD A   
 INNER JOIN TB_OR_GA_FNASTM_DTL B   
    ON A.GRP_ORG_C = B.GRP_ORG_C   
   AND A.BAS_YM = B.BAS_YM   
   AND A.UPLOAD_SQNO = B.UPLOAD_SQNO					
					</data>
				</sql>
				<sql id="sql01" name="sql01">
					<condition id="con01" name="con01" variable="#acc_tpc#" comparison="ne" value="" />
					<data id="data01" name="data01">
   AND B.ACC_TPC = TRIM(#acc_tpc#)					
					</data>					
				</sql>
				<sql id="sql02" name="sql02">
					<data id="data02" name="data02">
 INNER JOIN TB_OR_GA_FNASTM_UPDTL B1   
    ON B.GRP_ORG_C = B1.GRP_ORG_C   
   AND B.BAS_YM = B1.BAS_YM   
   AND B.UPLOAD_SQNO = B1.UPLOAD_SQNO  
   AND B.SACCT_SQNO = B1.SACCT_SQNO					
 INNER JOIN TB_OR_OM_CODE B11       
    ON B1.GRP_ORG_C = B11.GRP_ORG_C          
   AND B1.ACC_TPC = B11.IDVDC_VAL            
   AND B11.INTG_GRP_C='FILL_YN_DSC'					
  LEFT JOIN TB_OR_OM_CODE B12       
    ON B1.GRP_ORG_C = B12.GRP_ORG_C          
   AND B1.HD_INP_DSC = B12.IDVDC_VAL            
   AND B12.INTG_GRP_C='HD_INP_DSC'					
  LEFT JOIN TB_OR_GA_ACCAM B2   
    ON B.GRP_ORG_C = B2.GRP_ORG_C   
   AND B.BAS_YM = B2.BAS_YM   
   AND B.UPLOAD_SQNO = B2.UPLOAD_SQNO  
   AND B.ACC_SBJ_CNM = B2.ACC_SBJ_CNM
   AND B2.RGO_IN_DSC = '1'
   AND B2.SBDR_C = 	'00'				
  LEFT JOIN TB_OR_GA_ACCAM B3   
    ON B.GRP_ORG_C = B3.GRP_ORG_C   
   AND B.BAS_YM = B3.BAS_YM   
   AND B.UPLOAD_SQNO = B3.UPLOAD_SQNO  
   AND B.ACC_SBJ_CNM = B3.ACC_SBJ_CNM
   AND B3.RGO_IN_DSC = '2'
   AND B3.SBDR_C = 	'01'				
  LEFT JOIN TB_OR_GA_ACCAM B4   
    ON B.GRP_ORG_C = B4.GRP_ORG_C   
   AND B.BAS_YM = B4.BAS_YM   
   AND B.UPLOAD_SQNO = B4.UPLOAD_SQNO  
   AND B.ACC_SBJ_CNM = B4.ACC_SBJ_CNM
   AND B4.RGO_IN_DSC = '2'
   AND B4.SBDR_C = 	'02'				
					</data>					
				</sql>
				<sql id="sql03" name="sql03">
					<data id="data03" name="data03">
  INNER JOIN TB_OR_OM_CODE C       
    ON B.GRP_ORG_C = C.GRP_ORG_C          
   AND B.ACC_TPC = C.IDVDC_VAL            
   AND C.INTG_GRP_C='ACC_TPC'					
					</data>
				</sql>
				<sql id="sql04" name="sql04">
					<condition id="con04" name="con04" variable="#mapping_yn#" comparison="ne" value="" />
					<data id="data04" name="data04">
   LEFT JOIN TB_OR_GA_MSRACC D   
    ON B.GRP_ORG_C = D.GRP_ORG_C   
   AND B.ACC_SBJ_CNM = D.ACC_SBJ_CNM   
   AND D.VLD_YN='Y'					
					</data>
				</sql>
				<sql id="sql05" name="sql05">
					<data id="data05" name="data05">
   WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)  
   AND A.BAS_YM = TRIM(#bas_ym#)        
   AND A.VLD_YN = 'Y'					
   AND A.UPLOAD_SQNO = TRIM(#upload_sqno#)					
					</data>
				</sql>
				<sql id="sql06" name="sql06">
					<condition id="con06" name="con06" variable="#mapping_yn#" comparison="eq" value="Y" />
					<data id="data06" name="data06">
   AND D.ACC_SBJ_CNM IS NOT NULL					
					</data>
				</sql>
				<sql id="sql07" name="sql07">
					<condition id="con07" name="con07" variable="#mapping_yn#" comparison="eq" value="N" />
					<data id="data07" name="data06">
   AND D.ACC_SBJ_CNM IS NULL					
					</data>
				</sql>
 				<sql id="sql08" name="sql08">
					<data id="data08" name="data08">
 ORDER BY A.BAS_YM, B.ACC_TPC, B.SACCT_SQNO			
 					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010104" name="개별 재무제표 매핑관리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="status" name="상태" parmid="status" attr="A" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="업로드데이터삭제" type="M" mode="update" multiid="bas_ym">
				<sql id="sql11" name="sql11">
					<condition id="con11" name="con11" variable="#status#" comparison="eq" value="D" />
					<data id="data11" name="data11">
UPDATE TB_OR_GA_FNASTM_UPLOAD
SET VLD_ED_DT = TO_CHAR(SYSDATE, 'YYYYMMDD') ,
       VLD_YN = 'N'
WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
AND BAS_YM = TRIM(#bas_ym#)					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<!-- <unit id="unit99" name="업로드데이터삭제" type="M" mode="delete" multiid="bas_ym">
				<sql id="sql11" name="sql11">
					<condition id="con11" name="con11" variable="#status#" comparison="eq" value="D" />
					<data id="data11" name="data11">
					
					</data>				
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit> -->
		</group>
	</process>
	
	<process id="ORMR010201" name="계정과목 신규 매핑 및 수정(공통)" forward="/msr/ORMR0102" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="acc_sbj_cnm" name="계정과목코드명" parmid="acc_sbj_cnm" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="계정과목 등록 정보 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT   
	    A.ACC_SBJ_CNM   
	  , A.ACC_SBJNM 
	  , A.UP_ACC_SBJ_CNM    
	  , A.LVL_NO 
	  , SUBSTR(A.LV2_BIZ_IX_C,1,2) AS LV1_BIZ_IX_C
      , C.INTG_IDVD_CNM AS BIZ_IX_LV1_NM
	  , A.LV2_BIZ_IX_C 
      , C1.INTG_IDVD_CNM AS BIZ_IX_LV2_NM
	  , A.ACC_TPC
	  , A.SORT_SQ
	  , A.FILL_YN_DSC
	  , A.MPP_BAS_CNTN
	  , A.REV_OPN_CNTN   
 FROM TB_OR_GA_MSRACC A
 LEFT JOIN  TB_OR_GA_MSRACC_TMP B
   ON A.GRP_ORG_C = B.GRP_ORG_C
   AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM

 LEFT JOIN TB_OR_OM_CODE C
        ON A.GRP_ORG_C = C.GRP_ORG_C
        AND SUBSTR(A.LV2_BIZ_IX_C,1,2) = C.IDVDC_VAL
        AND C.INTG_GRP_C = 'LV1_BIZ_IX_C'
 LEFT JOIN TB_OR_OM_CODE C1
        ON A.GRP_ORG_C = C1.GRP_ORG_C
        AND A.LV2_BIZ_IX_C = C1.IDVDC_VAL
        AND C1.INTG_GRP_C = 'LV2_BIZ_IX_C'
 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 
   AND A.VLD_YN = 'Y'   
   AND A.ACC_SBJ_CNM = TRIM(#acc_sbj_cnm#)					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010202" name="계정과목 신규 매핑 및 수정(공통)" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="mode" name="모드" parmid="mode" attr="S" default_value=""/>
		<parm id="acc_sbj_cnm" name="계정과목코드" parmid="acc_sbj_cnm" attr="S" default_value=""/>
		<parm id="acc_sbjnm" name="계정과목명" parmid="acc_sbjnm" attr="S" default_value=""/>
		<parm id="lvl_no" name="계정레벨" parmid="lvl_no" attr="S" default_value=""/>
		<parm id="up_acc_sbj_cnm" name="상위계정과목코드" parmid="up_acc_sbj_cnm" attr="S" default_value=""/>
		<parm id="lv2_biz_ix_c" name="2레벨영업지수코드" parmid="lv2_biz_ix_c" attr="S" default_value=""/>
		<parm id="acc_tpc" name="계정유형코드" parmid="acc_tpc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="신규계정과목등록-삭제(I일경우)" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<condition id="con11" name="con11" variable="#mode#" comparison="eq" value="I" />
					<data id="data11" name="data11">
DELETE TB_OR_GA_MSRACC_TMP 
WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
  AND ACC_SBJ_CNM = TRIM(#acc_sbj_cnm#)					
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="신규계정과목등록" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<condition id="con11" name="con11" variable="#mode#" comparison="eq" value="I" />
					<data id="data11" name="data11">
INSERT 
  INTO TB_OR_GA_MSRACC_TMP 
	 ( GRP_ORG_C 
	 , ACC_SBJNM 
	 , UP_ACC_SBJ_CNM
	 , LVL_NO  
	 , LV2_BIZ_IX_C  
	 , VLD_YN 
	 , VLD_ST_DT 
	 , VLD_ED_DT 
	 , FIR_INP_DTM 
	 , FIR_INPMN_ENO
	 , LSCHG_DTM 
	 , LS_WKR_ENO  
	 , ACC_SBJ_CNM
	 , ACC_TPC
	 , FILL_YN_DSC
	 , NOTE_CNTN
	 , MPP_BAS_CNTN
	 , REV_OPN_CNTN
	 ) 
VALUES 
	 ( TRIM(#grp_org_c#)
	 , TRIM(#acc_sbjnm#)
	 , TRIM(#up_acc_sbj_cnm#)
	 , TRIM(#lvl_no#)
	 , TRIM(#lv2_biz_ix_c#)
	 , 'Y' 
	 , TO_CHAR(SYSDATE,'YYYYMMDD')
	 , '99991231'
	 , SYSDATE
	 , TRIM(#userid#) 
	 , SYSDATE 
	 , TRIM(#userid#) 
	 , TRIM(#acc_sbj_cnm#) 
	 , TRIM(#acc_tpc#)
	 , TRIM(#fill_yn_dsc#)
	 , TRIM(#note_cntn#)
	 , TRIM(#mpp_bas_cntn#)
	 , TRIM(#rev_opn_cntn#)
	 )					
					</data>
				</sql>
				<sql id="sql12" name="sql12">
					<condition id="con11" name="con11" variable="#mode#" comparison="ne" value="I" />
					<data id="data12" name="data12">
INSERT 
  INTO TB_OR_GA_MSRACC_TMP 
	 ( GRP_ORG_C 
	 , ACC_SBJNM 
	 , UP_ACC_SBJ_CNM
	 , LVL_NO  
	 , LV2_BIZ_IX_C  
	 , VLD_YN 
	 , VLD_ST_DT 
	 , VLD_ED_DT 
	 , FIR_INP_DTM 
	 , FIR_INPMN_ENO
	 , LSCHG_DTM 
	 , LS_WKR_ENO  
	 , ACC_SBJ_CNM
	 , ACC_TPC
	 , FILL_YN_DSC
	 , NOTE_CNTN
	 , MPP_BAS_CNTN
	 , REV_OPN_CNTN
	 ) 
VALUES 
	 ( TRIM(#grp_org_c#)
	 , TRIM(#acc_sbjnm#)
	 , TRIM(#up_acc_sbj_cnm#)
	 , TRIM(#lvl_no#)
	 , TRIM(#lv2_biz_ix_c#)
	 , 'Y' 
	 , TO_CHAR(SYSDATE,'YYYYMMDD')
	 , '99991231'
	 , SYSDATE
	 , TRIM(#userid#) 
	 , SYSDATE 
	 , TRIM(#userid#) 
	 , TRIM(#acc_sbj_cnm#) 
	 , TRIM(#acc_tpc#)
	 , TRIM(#fill_yn_dsc#)
	 , TRIM(#note_cntn#)
	 , TRIM(#mpp_bas_cntn#)
	 , TRIM(#rev_opn_cntn#)
	 )					
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	<process id="ORMR010203" name="계정과목 수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="mode" name="모드" parmid="mode" attr="S" default_value=""/>
		<parm id="acc_sbj_cnm" name="계정과목코드" parmid="acc_sbj_cnm" attr="S" default_value=""/>
		<parm id="acc_sbjnm" name="계정과목명" parmid="acc_sbjnm" attr="S" default_value=""/>
		<parm id="lvl_no" name="계정레벨" parmid="lvl_no" attr="S" default_value=""/>
		<parm id="up_acc_sbj_cnm" name="상위계정과목코드" parmid="up_acc_sbj_cnm" attr="S" default_value=""/>
		<parm id="lv2_biz_ix_c" name="2레벨영업지수코드" parmid="lv2_biz_ix_c" attr="S" default_value=""/>
		<parm id="acc_tpc" name="계정유형코드" parmid="acc_tpc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="계정과목수정" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<condition id="con11" name="con11" variable="#mode#" comparison="eq" value="I" />
					<data id="data11" name="data11">
INSERT 
  INTO TB_OR_GA_MSRACC_TMP
	 ( GRP_ORG_C 
	 , ACC_SBJNM 
	 , UP_ACC_SBJ_CNM
	 , LVL_NO  
	 , LV2_BIZ_IX_C  
	 , VLD_YN 
	 , VLD_ST_DT 
	 , VLD_ED_DT 
	 , FIR_INP_DTM 
	 , FIR_INPMN_ENO
	 , LSCHG_DTM 
	 , LS_WKR_ENO  
	 , ACC_SBJ_CNM
	 , ACC_TPC  
	 , FILL_YN_DSC
	 , NOTE_CNTN
	 , MPP_BAS_CNTN
	 , REV_OPN_CNTN
	 ) 
VALUES 
	 ( TRIM(#grp_org_c#)
	 , TRIM(#acc_sbjnm#)
	 , TRIM(#up_acc_sbj_cnm#)
	 , TRIM(#lvl_no#)
	 , TRIM(#lv2_biz_ix_c#)
	 , 'Y' 
	 , TO_CHAR(SYSDATE,'YYYYMMDD')
	 , '99991231'
	 , SYSDATE 
	 , TRIM(#userid#) 
	 , SYSDATE 
	 , TRIM(#userid#) 
	 , TRIM(#acc_sbj_cnm#) 
	 , TRIM(#acc_tpc#) 
	 , TRIM(#fill_yn_dsc#)
	 , TRIM(#note_cntn#)
	 , TRIM(#mpp_bas_cntn#)
	 , TRIM(#rev_opn_cntn#)
	 )					
					</data>
				</sql>
				<sql id="sql12" name="sql12">
					<condition id="con11" name="con11" variable="#mode#" comparison="ne" value="I" />
					<data id="data12" name="data12">
INSERT 
  INTO TB_OR_GA_MSRACC_TMP 
	 ( GRP_ORG_C 
	 , ACC_SBJNM 
	 , UP_ACC_SBJ_CNM
	 , LVL_NO  
	 , LV2_BIZ_IX_C  
	 , VLD_YN 
	 , VLD_ST_DT 
	 , VLD_ED_DT 
	 , FIR_INP_DTM 
	 , FIR_INPMN_ENO
	 , LSCHG_DTM 
	 , LS_WKR_ENO  
	 , ACC_SBJ_CNM
	 , ACC_TPC
	 , FILL_YN_DSC
	 , NOTE_CNTN
	 , MPP_BAS_CNTN
	 , REV_OPN_CNTN
	 ) 
VALUES 
	 ( TRIM(#grp_org_c#)
	 , TRIM(#acc_sbjnm#)
	 , TRIM(#up_acc_sbj_cnm#)
	 , TRIM(#lvl_no#)
	 , TRIM(#lv2_biz_ix_c#)
	 , 'Y' 
	 , TO_CHAR(SYSDATE,'YYYYMMDD')
	 , '99991231'
	 , SYSDATE
	 , TRIM(#userid#) 
	 , SYSDATE 
	 , TRIM(#userid#) 
	 , TRIM(#acc_sbj_cnm#) 
	 , TRIM(#acc_tpc#)
	 , TRIM(#fill_yn_dsc#)
	 , TRIM(#note_cntn#)
	 , TRIM(#mpp_bas_cntn#)
	 , TRIM(#rev_opn_cntn#)
	 )					
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010204" name="계정과목 신규 매핑 및 수정(공통)" forward="/msr/ORMR0102" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="acc_sbj_cnm" name="계정과목코드명" parmid="acc_sbj_cnm" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="계정과목 등록 정보 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT   
	    DECODE(B.ACC_SBJ_CNM, NULL, A.ACC_SBJ_CNM, B.ACC_SBJ_CNM) AS ACC_SBJ_CNM
	  , DECODE(B.ACC_SBJNM, NULL, A.ACC_SBJNM, B.ACC_SBJNM) AS ACC_SBJNM
	  , DECODE(B.UP_ACC_SBJ_CNM, NULL, A.UP_ACC_SBJ_CNM, B.UP_ACC_SBJ_CNM) AS UP_ACC_SBJ_CNM   
	  , DECODE(B.LVL_NO, NULL, A.LVL_NO, B.LVL_NO) AS LVL_NO
	  , SUBSTR(A.LV2_BIZ_IX_C,1,2) AS LV1_BIZ_IX_C
      , C.INTG_IDVD_CNM AS BIZ_IX_LV1_NM
	  , DECODE(B.LV2_BIZ_IX_C, NULL, A.LV2_BIZ_IX_C, B.LV2_BIZ_IX_C) AS LV2_BIZ_IX_C
      , C1.INTG_IDVD_CNM AS BIZ_IX_LV2_NM
	  , DECODE(B.ACC_TPC, NULL, A.ACC_TPC, B.ACC_TPC) AS ACC_TPC
	  , DECODE(B.SORT_SQ, NULL, A.SORT_SQ, B.SORT_SQ) AS SORT_SQ
	  , DECODE(B.FILL_YN_DSC, NULL, A.FILL_YN_DSC, B.FILL_YN_DSC) AS FILL_YN_DSC
	  , DECODE(B.MPP_BAS_CNTN, NULL, A.MPP_BAS_CNTN, B.MPP_BAS_CNTN) AS MPP_BAS_CNTN
	  , DECODE(B.REV_OPN_CNTN, NULL, A.REV_OPN_CNTN, B.REV_OPN_CNTN) AS REV_OPN_CNTN     
 FROM TB_OR_GA_MSRACC A
 LEFT JOIN  TB_OR_GA_MSRACC_TMP B
   ON A.GRP_ORG_C = B.GRP_ORG_C
   AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM

 LEFT JOIN TB_OR_OM_CODE C
        ON A.GRP_ORG_C = C.GRP_ORG_C
        AND SUBSTR(A.LV2_BIZ_IX_C,1,2) = C.IDVDC_VAL
        AND C.INTG_GRP_C = 'LV1_BIZ_IX_C'
 LEFT JOIN TB_OR_OM_CODE C1
        ON A.GRP_ORG_C = C1.GRP_ORG_C
        AND A.LV2_BIZ_IX_C = C1.IDVDC_VAL
        AND C1.INTG_GRP_C = 'LV2_BIZ_IX_C'
 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 
   AND A.VLD_YN = 'Y'   
   AND A.ACC_SBJ_CNM = TRIM(#acc_sbj_cnm#)					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010301" name="영업지수 매핑 가이드라인" forward="/msr/ORMR0103" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
	</process>
	
	<process id="ORMR010401" name="계정과목 영업지수 매핑관리" forward="/msr/ORMR0104" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010402" name="영업지수 매핑현황" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="기준년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_lv1_biz_ix_c" name="1레벨영업지수코드" parmid="sch_lv1_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_lv2_biz_ix_c" name="2레벨영업지수코드" parmid="sch_lv2_biz_ix_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="실데이터 개월 갯수" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT COUNT(*) ICNT                                                                                                                                                    
FROM (                                                                                                                                                                 
  SELECT BAS_YY                                                                                                                                                        
   FROM (                                                                                                                                                              
	SELECT BAS_YM,                                                                                                                                                      
		   CASE WHEN BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM') THEN SUBSTR(TRIM(#sch_bas_ym#),1,4)                                                     	
				WHEN BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM') THEN SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM'),1,4) 	
				WHEN BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYYMM') THEN SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM'),1,4) 	
				ELSE NULL END BAS_YY                                                                                                                                    
	  FROM TB_OR_GA_FNASTM_DTL                                                                                                                                  
	 WHERE GRP_ORG_C = TRIM(#grp_org_c#)                                                                                                                             				
	 GROUP BY BAS_YM                                                                                                                                                    
   )                                                                                                                                                                   
   WHERE BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYYMM')                                                                            				
	 AND BAS_YM &lt;= TRIM(#sch_bas_ym#)                                                                                                                                				
   GROUP BY  BAS_YY                                                                                                                                                    
	)					
					</data>
				</sql>	
				<result id="icnt" name="icnt" attrname="icnt" type="single_string"/>		
			</unit>
			<unit id="unit99" name="영업지수 잔액 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT A.BIZ_IX_LV1_NM, A.BIZ_IX_LV2_NM, A.LV2_BIZ_IX_C, A.CNT1, NVL(C.CNT2,0) CNT2, NVL(B.CNT3,0) CNT3
  FROM (
    SELECT C2.GRP_ORG_C
            ,C1.INTG_IDVD_CNM AS BIZ_IX_LV1_NM
            ,C2.INTG_IDVD_CNM AS BIZ_IX_LV2_NM
            ,C2.IDVDC_VAL AS LV2_BIZ_IX_C
           , C1.SORT_SQ SORT_SQ1
           , C2.SORT_SQ SORT_SQ2
           , COUNT(A.LV2_BIZ_IX_C) AS CNT1
        FROM (SELECT GRP_ORG_C, LV2_BIZ_IX_C, ACC_SBJ_CNM  FROM TB_OR_GA_MSRACC MINUS SELECT GRP_ORG_C, LV2_BIZ_IX_C, ACC_SBJ_CNM FROM TB_OR_GA_MSRACC_TMP) A
            ,(SELECT GRP_ORG_C,IDVDC_VAL,INTG_IDVD_CNM,SORT_SQ FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'LV1_BIZ_IX_C') C1
            ,(SELECT GRP_ORG_C,IDVDC_VAL,INTG_IDVD_CNM,SORT_SQ FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'LV2_BIZ_IX_C') C2
       WHERE A.GRP_ORG_C(+) = C2.GRP_ORG_C
         AND SUBSTR(C2.IDVDC_VAL,1,2) = C1.IDVDC_VAL
         AND A.LV2_BIZ_IX_C(+) = C2.IDVDC_VAL
         AND A.ACC_SBJ_CNM(+) != '00000000'
       GROUP BY C2.GRP_ORG_C, C1.INTG_IDVD_CNM,C2.IDVDC_VAL, C2.INTG_IDVD_CNM, C1.SORT_SQ, C2.SORT_SQ
       
    ) A
 LEFT JOIN (SELECT A.GRP_ORG_C,C1.INTG_IDVD_CNM AS BIZ_IX_LV1_NM, C2.INTG_IDVD_CNM AS BIZ_IX_LV2_NM, A.LV2_BIZ_IX_C, C1.SORT_SQ SORT_SQ1, C2.SORT_SQ SORT_SQ2, COUNT(*) AS CNT2
      FROM TB_OR_GA_MSRACC_TMP A
     INNER JOIN TB_OR_OM_CODE C2
        ON A.GRP_ORG_C = C2.GRP_ORG_C
        AND A.LV2_BIZ_IX_C = C2.IDVDC_VAL
        AND C2.INTG_GRP_C = 'LV2_BIZ_IX_C'
     INNER JOIN TB_OR_OM_CODE C1
        ON A.GRP_ORG_C = C1.GRP_ORG_C
        AND SUBSTR(A.LV2_BIZ_IX_C,1,2) = C1.IDVDC_VAL
        AND C1.INTG_GRP_C = 'LV1_BIZ_IX_C'
    WHERE A.GRP_ORG_C = #grp_org_c#
      AND A.ACC_SBJ_CNM != '00000000'
        GROUP BY A.GRP_ORG_C, C1.INTG_IDVD_CNM, A.LV2_BIZ_IX_C, C2.INTG_IDVD_CNM, C1.SORT_SQ, C2.SORT_SQ
) C
    ON A.GRP_ORG_C = C.GRP_ORG_C
    AND A.LV2_BIZ_IX_C = C.LV2_BIZ_IX_C
 LEFT JOIN (
   SELECT GRP_ORG_C, SUBSTR(LV2_BIZ_IX_C,1,2) BIZ_IX_C_1LV , COUNT(*)  AS CNT3
     FROM (SELECT GRP_ORG_C, LV2_BIZ_IX_C, ACC_SBJ_CNM  FROM TB_OR_GA_MSRACC UNION SELECT GRP_ORG_C, LV2_BIZ_IX_C, ACC_SBJ_CNM FROM TB_OR_GA_MSRACC_TMP)A
    WHERE ACC_SBJ_CNM != '00000000'
    GROUP BY GRP_ORG_C, SUBSTR(LV2_BIZ_IX_C,1,2)
 ) B
    ON A.GRP_ORG_C = B.GRP_ORG_C
    AND SUBSTR(A.LV2_BIZ_IX_C,1,2) = B.BIZ_IX_C_1LV
    UNION ALL
       SELECT 
            '합계' AS BIZ_IX_LV1_NM
            , '합계' AS BIZ_IX_LV2_NM
            , '9999' AS LV2_BIZ_IX_C
            , A.CNT1 
            , C.CNT2  
            , B.CNT3  
       FROM DUAL
       ,(SELECT COUNT(*)  AS CNT3
            FROM (SELECT GRP_ORG_C, LV2_BIZ_IX_C, ACC_SBJ_CNM  FROM TB_OR_GA_MSRACC UNION SELECT GRP_ORG_C, LV2_BIZ_IX_C, ACC_SBJ_CNM FROM TB_OR_GA_MSRACC_TMP)A
            WHERE ACC_SBJ_CNM != '00000000') B
       ,(SELECT COUNT(*)  AS CNT2
            FROM (SELECT GRP_ORG_C, LV2_BIZ_IX_C, ACC_SBJ_CNM  FROM TB_OR_GA_MSRACC_TMP UNION SELECT GRP_ORG_C, LV2_BIZ_IX_C, ACC_SBJ_CNM FROM TB_OR_GA_MSRACC_TMP)A
            WHERE ACC_SBJ_CNM != '00000000') C
       ,(SELECT COUNT(*) AS CNT1 FROM (SELECT * FROM TB_OR_GA_MSRACC WHERE ACC_SBJ_CNM != '00000000' MINUS SELECT * FROM TB_OR_GA_MSRACC_TMP WHERE ACC_SBJ_CNM != '00000000')) A
    ORDER BY LV2_BIZ_IX_C

					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010403" name="영업지수 변경 이력" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="st_acc_tpc" name="계정유형" parmid="st_acc_tpc" attr="S" default_value=""/>
		<parm id="sch_mapping_yn" name="매핑여부" parmid="sch_mapping_yn" attr="S" default_value=""/>
		<parm id="sch_lv1_biz_ix_c" name="1레벨영업지수코드" parmid="sch_lv1_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_lv2_biz_ix_c" name="2레벨영업지수코드" parmid="sch_lv2_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_acc_sbjnm" name="계정과목명" parmid="sch_acc_sbjnm" attr="S" default_value=""/>
		<parm id="sch_acc_sbj_cnm" name="계정과목코드" parmid="sch_acc_sbj_cnm" attr="S" default_value=""/>
 		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="영업지수 변경 이력" type="S">
 				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
SELECT 
    DECODE(A.ACC_SBJNM,B.ACC_SBJNM, '변경','신규') STATUS,
    A.LVL_NO,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='FILL_YN_DSC' AND IDVDC_VAL=A.FILL_YN_DSC) AS FILL_YN_DSCNM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='ACC_TPC' AND IDVDC_VAL=A.ACC_TPC) AS ACC_TPCNM,
    A.ACC_SBJ_CNM,
    A.ACC_SBJNM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV1_BIZ_IX_C' AND IDVDC_VAL=SUBSTR(A.LV2_BIZ_IX_C,1,2)) AS AF_LV1_BIZ_IX_NM ,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV2_BIZ_IX_C' AND IDVDC_VAL=A.LV2_BIZ_IX_C) AS AF_LV2_BIZ_IX_NM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV1_BIZ_IX_C' AND IDVDC_VAL=SUBSTR(B.LV2_BIZ_IX_C,1,2)) AS BF_LV1_BIZ_IX_NM , 
  	(SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV2_BIZ_IX_C' AND IDVDC_VAL=B.LV2_BIZ_IX_C) AS BF_LV2_BIZ_IX_NM,
    B.LSCHG_DTM
    FROM TB_OR_GA_MSRACC_TMP A
    INNER JOIN TB_OR_GA_MSRACC B
    ON A.GRP_ORG_C = B.GRP_ORG_C
    AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
    WHERE A.ACC_SBJNM IS NOT NULL
 					</data>
				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR010404" name="계정과목 영업지수 매핑 관리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="status" name="상태" parmid="status" attr="A" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="업로드데이터삭제" type="M" mode="update" multiid="bas_ym">
				<sql id="sql11" name="sql11">
					<condition id="con11" name="con11" variable="#status#" comparison="eq" value="D" />
					<data id="data11" name="data11">
UPDATE TB_OR_GA_MSRACC A
SET VLD_ED_DT = TO_CHAR(SYSDATE, 'YYYYMMDD') ,
       VLD_YN = 'N'
WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
AND BAS_YM = TRIM(#bas_ym#)					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	
	<process id="ORMR010405" name="산출값 계산" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_st_bas_ym" name="시작기준년월" parmid="sch_st_bas_ym" attr="S" default_value=""/>
		<parm id="sch_ed_bas_ym" name="종료기준년월" parmid="sch_ed_bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="업로드데이터 목록 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 									
	SUBSTR(BAS_YM,1,4) AS BAS_YY,  SUBSTR(BAS_YM,5,2) AS BAS_MM	, APFLNM
 FROM TB_OR_GA_FNASTM_UPLOAD  		
 WHERE GRP_ORG_C=TRIM(#grp_org_c#) 				
 GROUP BY SUBSTR(BAS_YM,1,4), SUBSTR(BAS_YM,5,2) , APFLNM			
 ORDER BY SUBSTR(BAS_YM,1,4) DESC , SUBSTR(BAS_YM,5,2) DESC						
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010406" name="영업지수 등록/변경 관리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="계정이력테이블" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_MSRACC_HIST(
    GRP_ORG_C       ,
    ACC_SBJ_CNM     ,
    HIST_SQNO       ,
    ACC_SBJNM       ,
    ACC_TPC         ,
    UP_ACC_SBJ_CNM  ,
    LVL_NO          ,
    LV2_BIZ_IX_C    ,
    FILL_YN_DSC     ,
    MPP_BAS_CNTN    ,
    REV_OPN_CNTN    ,
    NOTE_CNTN       ,
    SORT_SQ         ,
    VLD_YN          ,
    VLD_ST_DT       ,
    VLD_ED_DT       ,
    FIR_INP_DTM     ,
    FIR_INPMN_ENO   ,
    LSCHG_DTM       , 
    LS_WKR_ENO      )
SELECT 
    A.GRP_ORG_C       ,
    A.ACC_SBJ_CNM     ,
    DECODE(C.HIST_SQNO,NULL,1, C.HIST_SQNO+1),
    A.ACC_SBJNM       ,
    A.ACC_TPC         ,
    A.UP_ACC_SBJ_CNM  ,
    A.LVL_NO          ,
    A.LV2_BIZ_IX_C    ,
    A.FILL_YN_DSC     ,
    A.MPP_BAS_CNTN    ,
    A.REV_OPN_CNTN    ,
    A.NOTE_CNTN       ,
    A.SORT_SQ         ,
    A.VLD_YN          ,
    A.VLD_ST_DT       ,
    A.VLD_ED_DT       ,
    A.FIR_INP_DTM     ,
    A.FIR_INPMN_ENO   ,
    SYSDATE       , 
    A.LS_WKR_ENO      
FROM TB_OR_GA_MSRACC A
LEFT JOIN TB_OR_GA_MSRACC_TMP B
    ON A.GRP_ORG_C = B.GRP_ORG_C
    AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
LEFT JOIN (
    SELECT A.GRP_ORG_C, A.ACC_SBJ_CNM, MAX(HIST_SQNO) AS HIST_SQNO 
    FROM TB_OR_GA_MSRACC_HIST A
        LEFT JOIN TB_OR_GA_MSRACC_TMP B 
        ON  A.GRP_ORG_C = B.GRP_ORG_C
        AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
        WHERE A.ACC_SBJ_CNM = B.ACC_SBJ_CNM AND A.GRP_ORG_C = TRIM(#grp_org_c#) GROUP BY A.GRP_ORG_C,A.ACC_SBJ_CNM) C
    ON A.GRP_ORG_C = C.GRP_ORG_C
    AND A.ACC_SBJ_CNM = C.ACC_SBJ_CNM
WHERE A.GRP_ORG_C = B.GRP_ORG_C
    AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM					
					</data>
				</sql>
			</unit>
			<unit id="unit99" name="계정이력테이블" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
MERGE INTO TB_OR_GA_MSRACC A
    USING TB_OR_GA_MSRACC_TMP B
        ON (A.GRP_ORG_C = B.GRP_ORG_C
        AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM)
    WHEN MATCHED THEN
        UPDATE SET 
            A.LV2_BIZ_IX_C = B.LV2_BIZ_IX_C,
            A.MPP_BAS_CNTN = B.MPP_BAS_CNTN,
            A.REV_OPN_CNTN = B.REV_OPN_CNTN
    WHEN NOT MATCHED THEN
        INSERT (
    A.GRP_ORG_C       ,
    A.ACC_SBJ_CNM     ,
    A.ACC_SBJNM       ,
    A.ACC_TPC         ,
    A.UP_ACC_SBJ_CNM  ,
    A.LVL_NO          ,
    A.LV2_BIZ_IX_C    ,
    A.FILL_YN_DSC     ,
    A.MPP_BAS_CNTN    ,
    A.REV_OPN_CNTN    ,
    A.NOTE_CNTN       ,
    A.SORT_SQ         ,
    A.VLD_YN          ,
    A.VLD_ST_DT       ,
    A.VLD_ED_DT       ,
    A.FIR_INP_DTM     ,
    A.FIR_INPMN_ENO   ,
    A.LSCHG_DTM       , 
    A.LS_WKR_ENO      )
        VALUES (
    B.GRP_ORG_C       ,
    B.ACC_SBJ_CNM     ,
    B.ACC_SBJNM       ,
    B.ACC_TPC         ,
    B.UP_ACC_SBJ_CNM  ,
    B.LVL_NO          ,
    B.LV2_BIZ_IX_C    ,
    B.FILL_YN_DSC     ,
    B.MPP_BAS_CNTN    ,
    B.REV_OPN_CNTN    ,
    B.NOTE_CNTN       ,
    B.SORT_SQ         ,
    B.VLD_YN          ,
    B.VLD_ST_DT       ,
    B.VLD_ED_DT       ,
    B.FIR_INP_DTM     ,
    B.FIR_INPMN_ENO   ,
    B.LSCHG_DTM       , 
    B.LS_WKR_ENO      )				
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="계정임시 테이블 삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE FROM TB_OR_GA_MSRACC_TMP WHERE GRP_ORG_C = TRIM(#grp_org_c#)				
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010407" name="산출값 저장" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="영업지수요소산출계정별" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE FROM TB_OR_GA_BICACC 
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
    AND BAS_YM = TRIM(#sch_bas_ym#)				
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
<unit id="unit01" name="내부한도설정삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE TB_OR_GA_LMT_EXRAT            
 WHERE GRP_ORG_C = #grp_org_c#
   AND BASYY = #sch_bas_yy#
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="영업지수요소산출계정별" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_BICACC (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, LV2_BIZ_IX_C, 
   MSR_YY, ACC_SBJ_CNM, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO)
SELECT 
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, LV2_BIZ_IX_C, 
   MSR_YY, ACC_SBJ_CNM, MSR_AM, 
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM (
       SELECT A.GRP_ORG_C, TRIM(#sch_bas_ym#) BAS_YM, C.RGO_IN_DSC, C.SBDR_C, SUBSTR(B.LV2_BIZ_IX_C,1,2) LV1_BIZ_IX_C, B.LV2_BIZ_IX_C, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-0),'YYYY') MSR_YY, A.ACC_SBJ_CNM
            , CASE WHEN B.LV2_BIZ_IX_C = '0104'
                    THEN
                      SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-0),'YYYYMM') THEN C.ACC_AM ELSE 0 END)                                                                     
                    ELSE
                      SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-0),'YYYYMM') THEN C.ACC_AM ELSE 0 END)                                                                     
                      + SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYY')||'12' THEN C.ACC_AM ELSE 0 END)            
                      - SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM') THEN C.ACC_AM ELSE 0 END) 
             END MSR_AM 
        FROM (SELECT A.*
                FROM TB_OR_GA_FNASTM_DTL A
               INNER JOIN (
                       SELECT GRP_ORG_C,BAS_YM, MAX(UPLOAD_SQNO) AS UPLOAD_SQNO 
                         FROM TB_OR_GA_FNASTM_UPLOAD
                        WHERE VLD_YN = 'Y' 
                       GROUP BY GRP_ORG_C,BAS_YM
                     ) B
                  ON A.GRP_ORG_C = B.GRP_ORG_C
                 AND A.BAS_YM = B.BAS_YM
                 AND A.UPLOAD_SQNO = B.UPLOAD_SQNO
             ) A
       INNER JOIN TB_OR_GA_MSRACC B
          ON A.GRP_ORG_C = B.GRP_ORG_C
         AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
       INNER JOIN TB_OR_GA_ACCAM C
          ON A.GRP_ORG_C = C.GRP_ORG_C
         AND A.BAS_YM = C.BAS_YM
         AND A.UPLOAD_SQNO = C.UPLOAD_SQNO
         AND A.ACC_SBJ_CNM = C.ACC_SBJ_CNM
       WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
         AND A.BAS_YM IN (TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-0),'YYYYMM') 
                        ,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYY')||'12' 
                        ,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM'))
         AND SUBSTR(B.LV2_BIZ_IX_C,1,2) &lt;&gt; '99'
         GROUP BY A.GRP_ORG_C, C.RGO_IN_DSC, C.SBDR_C, B.LV2_BIZ_IX_C, A.ACC_SBJ_CNM, A.ACC_SBJ_CNM
 UNION ALL
       SELECT A.GRP_ORG_C, TRIM(#sch_bas_ym#) BAS_YM, C.RGO_IN_DSC, C.SBDR_C, SUBSTR(B.LV2_BIZ_IX_C,1,2) LV1_BIZ_IX_C, B.LV2_BIZ_IX_C, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYY') MSR_YY, A.ACC_SBJ_CNM
            , CASE WHEN B.LV2_BIZ_IX_C = '0104'
                    THEN
                      SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM') THEN C.ACC_AM ELSE 0 END)                                                                     
                    ELSE
                      SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM') THEN C.ACC_AM ELSE 0 END)                                                                     
                      + SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYY')||'12' THEN C.ACC_AM ELSE 0 END)            
                      - SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM') THEN C.ACC_AM ELSE 0 END) 
             END MSR_AM
        FROM (SELECT A.*
                FROM TB_OR_GA_FNASTM_DTL A
               INNER JOIN (
                       SELECT GRP_ORG_C,BAS_YM, MAX(UPLOAD_SQNO) AS UPLOAD_SQNO 
                         FROM TB_OR_GA_FNASTM_UPLOAD
                        WHERE VLD_YN = 'Y' 
                       GROUP BY GRP_ORG_C,BAS_YM
                     ) B
                  ON A.GRP_ORG_C = B.GRP_ORG_C
                 AND A.BAS_YM = B.BAS_YM
                 AND A.UPLOAD_SQNO = B.UPLOAD_SQNO
             ) A
       INNER JOIN TB_OR_GA_MSRACC B
          ON A.GRP_ORG_C = B.GRP_ORG_C
         AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
       INNER JOIN TB_OR_GA_ACCAM C
          ON A.GRP_ORG_C = C.GRP_ORG_C
         AND A.BAS_YM = C.BAS_YM
         AND A.UPLOAD_SQNO = C.UPLOAD_SQNO
         AND A.ACC_SBJ_CNM = C.ACC_SBJ_CNM
       WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
         AND A.BAS_YM IN (TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM') 
                        ,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYY')||'12' 
                        ,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM'))
         AND SUBSTR(B.LV2_BIZ_IX_C,1,2) &lt;&gt; '99'
         GROUP BY A.GRP_ORG_C, C.RGO_IN_DSC, C.SBDR_C, B.LV2_BIZ_IX_C, A.ACC_SBJ_CNM, A.ACC_SBJ_CNM
 UNION ALL
       SELECT A.GRP_ORG_C, TRIM(#sch_bas_ym#) BAS_YM, C.RGO_IN_DSC, C.SBDR_C, SUBSTR(B.LV2_BIZ_IX_C,1,2) LV1_BIZ_IX_C, B.LV2_BIZ_IX_C, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYY') MSR_YY, A.ACC_SBJ_CNM
            , CASE WHEN B.LV2_BIZ_IX_C = '0104'
                    THEN
                      SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM') THEN C.ACC_AM ELSE 0 END)                                                                     
                    ELSE
                      SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM') THEN C.ACC_AM ELSE 0 END)                                                                     
                      + SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYY')||'12' THEN C.ACC_AM ELSE 0 END)            
                      - SUM(CASE WHEN A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYYMM') THEN C.ACC_AM ELSE 0 END) 
             END MSR_AM        
        FROM (SELECT A.*
                FROM TB_OR_GA_FNASTM_DTL A
               INNER JOIN (
                       SELECT GRP_ORG_C,BAS_YM, MAX(UPLOAD_SQNO) AS UPLOAD_SQNO 
                         FROM TB_OR_GA_FNASTM_UPLOAD
                        WHERE VLD_YN = 'Y' 
                       GROUP BY GRP_ORG_C,BAS_YM
                     ) B
                  ON A.GRP_ORG_C = B.GRP_ORG_C
                 AND A.BAS_YM = B.BAS_YM
                 AND A.UPLOAD_SQNO = B.UPLOAD_SQNO
             ) A
       INNER JOIN TB_OR_GA_MSRACC B
          ON A.GRP_ORG_C = B.GRP_ORG_C
         AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
       INNER JOIN TB_OR_GA_ACCAM C
          ON A.GRP_ORG_C = C.GRP_ORG_C
         AND A.BAS_YM = C.BAS_YM
         AND A.UPLOAD_SQNO = C.UPLOAD_SQNO
         AND A.ACC_SBJ_CNM = C.ACC_SBJ_CNM
       WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
         AND A.BAS_YM IN (TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM') 
                        ,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYY')||'12' 
                        ,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYYMM'))
         AND SUBSTR(B.LV2_BIZ_IX_C,1,2) &lt;&gt; '99'
         GROUP BY A.GRP_ORG_C, C.RGO_IN_DSC, C.SBDR_C, B.LV2_BIZ_IX_C, A.ACC_SBJ_CNM, A.ACC_SBJ_CNM
) 
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
    AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>
				</sql>
			</unit>
			<unit id="unit02" name="영업지수요소산출계정별" type="S" mode="delete" multiid="">
				<sql id="sql13" name="sql13">
					<data id="data13" name="data13">
DELETE FROM TB_OR_GA_BICDET 
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
    AND BAS_YM = TRIM(#sch_bas_ym#)				
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="영업지수요소산출계정별" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_BICDET (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, LV2_BIZ_IX_C, 
   MSR_YY, MSR_AM, FIR_INP_DTM, 
   FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO) 
SELECT 
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, LV2_BIZ_IX_C, 
   MSR_YY, SUM(MSR_AM) MSR_AM, 
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_BICACC
  WHERE BAS_YM = TRIM(#sch_bas_ym#)
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, LV2_BIZ_IX_C, 
   MSR_YY
					</data>
				</sql>
			</unit>
			<unit id="unit02" name="영업지수요소산출계정별" type="S" mode="delete" multiid="">
				<sql id="sql13" name="sql13">
					<data id="data13" name="data13">
DELETE FROM TB_OR_GA_BIC 
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
    AND BAS_YM = TRIM(#sch_bas_ym#)				
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="영업지수요소산출계정별" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_BIC (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
WITH 
T1 AS (
    SELECT 
       GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
       SBDR_C, LV1_BIZ_IX_C, MSR_YY,
       SUM(CASE WHEN LV2_BIZ_IX_C = '0101' THEN MSR_AM ELSE 0 END) ACC_0101, --배당수익
       --SUM(CASE WHEN LV2_BIZ_IX_C = '0102' THEN MSR_AM ELSE 0 END) ACC_0102, --이자수익
       --SUM(CASE WHEN LV2_BIZ_IX_C = '0103' THEN MSR_AM ELSE 0 END) ACC_0103, --이자비용
       SUM(CASE WHEN LV2_BIZ_IX_C = '0104' THEN MSR_AM ELSE 0 END) ACC_0104, --이자수익자산
       ABS(SUM(CASE WHEN LV2_BIZ_IX_C = '0102' THEN MSR_AM ELSE 0 END) - SUM(CASE WHEN LV2_BIZ_IX_C = '0103' THEN MSR_AM ELSE 0 END)) ACC_0102_0103,--|이자수익-이자비용|
       SUM(CASE WHEN LV2_BIZ_IX_C = '0202' THEN MSR_AM ELSE 0 END) ACC_0202, --수수료수익
       SUM(CASE WHEN LV2_BIZ_IX_C = '0204' THEN MSR_AM ELSE 0 END) ACC_0204, --수수료비용
       SUM(CASE WHEN LV2_BIZ_IX_C = '0201' THEN MSR_AM ELSE 0 END) ACC_0201, --기타영업수익
       SUM(CASE WHEN LV2_BIZ_IX_C = '0203' THEN MSR_AM ELSE 0 END) ACC_0203, --기타영업비용
       --SUM(CASE WHEN LV2_BIZ_IX_C = '0301' THEN MSR_AM ELSE 0 END) ACC_0301, --은행계정수익
       --SUM(CASE WHEN LV2_BIZ_IX_C = '0303' THEN MSR_AM ELSE 0 END) ACC_0303, --은행계정손실
       ABS(SUM(CASE WHEN LV2_BIZ_IX_C = '0301' THEN MSR_AM ELSE 0 END) - SUM(CASE WHEN LV2_BIZ_IX_C = '0303' THEN MSR_AM ELSE 0 END)) ACC_0301_0303,--|은행계정수익-은행계정손실|
       --SUM(CASE WHEN LV2_BIZ_IX_C = '0302' THEN MSR_AM ELSE 0 END) ACC_0302, --트레이딩계정수익
       --SUM(CASE WHEN LV2_BIZ_IX_C = '0304' THEN MSR_AM ELSE 0 END) ACC_0304, --트레이딩계정손실
       ABS(SUM(CASE WHEN LV2_BIZ_IX_C = '0302' THEN MSR_AM ELSE 0 END) - SUM(CASE WHEN LV2_BIZ_IX_C = '0304' THEN MSR_AM ELSE 0 END)) ACC_0302_0304--|트레이딩계정수익-트레이딩계정손실|
      FROM TB_OR_GA_BICDET
     GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC,
       SBDR_C, LV1_BIZ_IX_C, MSR_YY  
)
SELECT 
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C,
   DECODE(MSR_AM2,0,0,MSR_AM1/MSR_AM2) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM ( 
    SELECT 
       GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
       SBDR_C, LV1_BIZ_IX_C,
       SUM(
       CASE LV1_BIZ_IX_C 
         WHEN '01' THEN
           LEAST(ACC_0102_0103, ROUND(ACC_0104*0.0225,0)) + ACC_0101
         WHEN '02' THEN 
           GREATEST(ACC_0202, ACC_0204) + GREATEST(ACC_0201, ACC_0203)
         WHEN '03' THEN 
           ACC_0301_0303 + ACC_0302_0304
       END
       )MSR_AM1,
       (
            SELECT LEAST(TRUNC((MONTHS_BETWEEN(TO_DATE(T1.BAS_YM,'YYYYMM'), TO_DATE(TRIM(RMK_CNTN),'YYYYMM')) + 3) / 12,0),3)
              FROM TB_OR_OM_CODE 
             WHERE GRP_ORG_C = T1.GRP_ORG_C 
               AND INTG_GRP_C = 'SBDR_C' 
               AND IDVDC_VAL = DECODE(T1.SBDR_C,'00','01',T1.SBDR_C)           
       ) MSR_AM2
      FROM T1
     GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
       SBDR_C, LV1_BIZ_IX_C
)
WHERE BAS_YM = TRIM(#sch_bas_ym#)
					</data>
				</sql>
			</unit>
			<unit id="unit02" name="측정결과개별 삭제" type="S" mode="delete" multiid="">
				<sql id="sql13" name="sql13">
					<data id="data13" name="data13">
DELETE FROM TB_OR_GA_MSRRZT_SUB 
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
    AND BAS_YM = TRIM(#sch_bas_ym#)				
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="측정결과개별 삽입" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_MSRRZT_SUB (
    GRP_ORG_C
   , BAS_YM
   , RGO_IN_DSC
   , SBDR_C
   , FIR_INP_DTM
   , FIR_INPMN_ENO
   , LSCHG_DTM
   , LS_WKR_ENO
)
SELECT TRIM(#grp_org_c#) GRP_ORG_C
   , TRIM(#sch_bas_ym#) BAS_YM
   , '1' RGO_IN_DSC
   , '00' SBDR_C
   , SYSDATE FIR_INP_DTM
   , 'SYSTEM' FIR_INPMN_ENO
   , SYSDATE LSCHG_DTM
   , 'SYSTEM' LS_WKR_ENO FROM DUAL
UNION ALL 
SELECT TRIM(#grp_org_c#) GRP_ORG_C
   , TRIM(#sch_bas_ym#) BAS_YM
   , '2' RGO_IN_DSC
   , '01' SBDR_C
   , SYSDATE FIR_INP_DTM
   , 'SYSTEM' FIR_INPMN_ENO
   , SYSDATE LSCHG_DTM
   , 'SYSTEM' LS_WKR_ENO FROM DUAL
UNION ALL
SELECT TRIM(#grp_org_c#) GRP_ORG_C
   , TRIM(#sch_bas_ym#) BAS_YM
   , '2' RGO_IN_DSC
   , '02' SBDR_C
   , SYSDATE FIR_INP_DTM
   , 'SYSTEM' FIR_INPMN_ENO
   , SYSDATE LSCHG_DTM
   , 'SYSTEM' LS_WKR_ENO FROM DUAL
   					</data>
				</sql>	
			</unit>
			<unit id="unit02" name="측정결과 삭제" type="S" mode="delete" multiid="">
				<sql id="sql13" name="sql13">
					<data id="data13" name="data13">
DELETE FROM TB_OR_GA_MSRRZT 
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
    AND BAS_YM = TRIM(#sch_bas_ym#)				
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="측정결과 삽입" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_MSRRZT (
    GRP_ORG_C
   , BAS_YM
   , UPLOAD_SQNO
   , DCZ_SQNO
   , FIR_INP_DTM
   , FIR_INPMN_ENO
   , LSCHG_DTM
   , LS_WKR_ENO
)
SELECT 
	GRP_ORG_C
	, BAS_YM
	, UPLOAD_SQNO
	, '1'
	, SYSDATE 
	, 'SYSTEM'
    , SYSDATE
    , 'SYSTEM'
FROM TB_OR_GA_FNASTM_UPLOAD
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND BAS_YM = TRIM(#bas_ym#)
   					</data>
				</sql>	
			</unit>
			<unit id="unit02" name="측정결과 삭제" type="S" mode="delete" multiid="">
				<sql id="sql13" name="sql13">
					<data id="data13" name="data13">
DELETE FROM TB_OR_GA_MSRELM 
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
    AND BAS_YM = TRIM(#sch_bas_ym#)				
					</data>
				</sql>
			</unit>
			<unit id="unit99" name="측정결과 삽입" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
WITH 
T1 AS (
    SELECT 
       GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
       SBDR_C, LV1_BIZ_IX_C, MSR_YY,
       SUM(CASE WHEN LV2_BIZ_IX_C = '0101' THEN MSR_AM ELSE 0 END) ACC_0101, --배당수익
       SUM(CASE WHEN LV2_BIZ_IX_C = '0102' THEN MSR_AM ELSE 0 END) ACC_0102, --이자수익
       SUM(CASE WHEN LV2_BIZ_IX_C = '0103' THEN MSR_AM ELSE 0 END) ACC_0103, --이자비용
       SUM(CASE WHEN LV2_BIZ_IX_C = '0104' THEN MSR_AM ELSE 0 END) ACC_0104, --이자수익자산
       ABS(SUM(CASE WHEN LV2_BIZ_IX_C = '0102' THEN MSR_AM ELSE 0 END) - SUM(CASE WHEN LV2_BIZ_IX_C = '0103' THEN MSR_AM ELSE 0 END)) ACC_0102_0103,--|이자수익-이자비용|
       SUM(CASE WHEN LV2_BIZ_IX_C = '0202' THEN MSR_AM ELSE 0 END) ACC_0202, --수수료수익
       SUM(CASE WHEN LV2_BIZ_IX_C = '0204' THEN MSR_AM ELSE 0 END) ACC_0204, --수수료비용
       SUM(CASE WHEN LV2_BIZ_IX_C = '0201' THEN MSR_AM ELSE 0 END) ACC_0201, --기타영업수익
       SUM(CASE WHEN LV2_BIZ_IX_C = '0203' THEN MSR_AM ELSE 0 END) ACC_0203, --기타영업비용
       SUM(CASE WHEN LV2_BIZ_IX_C = '0301' THEN MSR_AM ELSE 0 END) ACC_0301, --은행계정수익
       SUM(CASE WHEN LV2_BIZ_IX_C = '0303' THEN MSR_AM ELSE 0 END) ACC_0303, --은행계정손실
       ABS(SUM(CASE WHEN LV2_BIZ_IX_C = '0301' THEN MSR_AM ELSE 0 END) - SUM(CASE WHEN LV2_BIZ_IX_C = '0303' THEN MSR_AM ELSE 0 END)) ACC_0301_0303,--|은행계정수익-은행계정손실|
       SUM(CASE WHEN LV2_BIZ_IX_C = '0302' THEN MSR_AM ELSE 0 END) ACC_0302, --트레이딩계정수익
       SUM(CASE WHEN LV2_BIZ_IX_C = '0304' THEN MSR_AM ELSE 0 END) ACC_0304, --트레이딩계정손실
       ABS(SUM(CASE WHEN LV2_BIZ_IX_C = '0302' THEN MSR_AM ELSE 0 END) - SUM(CASE WHEN LV2_BIZ_IX_C = '0304' THEN MSR_AM ELSE 0 END)) ACC_0302_0304,--|트레이딩계정수익-트레이딩계정손실|
       (SELECT LEAST(MONTHS_BETWEEN(TO_DATE(MSR_YY||SUBSTR(A.BAS_YM,5,6),'YYYYMM'), TO_DATE(TRIM(RMK_CNTN),'YYYYMM'))+3, 12)
           FROM TB_OR_OM_CODE 
         WHERE GRP_ORG_C = A.GRP_ORG_C 
           AND INTG_GRP_C = 'SBDR_C' 
           AND IDVDC_VAL = DECODE(A.SBDR_C,'00','01',A.SBDR_C)) ACC_MONTH, 
       (SELECT LEAST(TRUNC((MONTHS_BETWEEN(TO_DATE(A.BAS_YM,'YYYYMM'), TO_DATE(TRIM(RMK_CNTN),'YYYYMM'))) / 12,0)+1,3)
           FROM TB_OR_OM_CODE 
         WHERE GRP_ORG_C = A.GRP_ORG_C 
           AND INTG_GRP_C = 'SBDR_C' 
           AND IDVDC_VAL = DECODE(A.SBDR_C,'00','01',A.SBDR_C)) ACC_YEAR 
      FROM TB_OR_GA_BICDET A
      WHERE BAS_YM = TRIM(#sch_bas_ym#)
     GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC,
       SBDR_C, LV1_BIZ_IX_C, MSR_YY  
)
SELECT -- E100:ILDC
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E100' MSR_ELM_DSCD, 
   LEAST(DECODE(ACC_YEAR,0,0,SUM(ACC_0102_0103*12/ACC_MONTH)/ACC_YEAR)
       , ROUND(DECODE(ACC_YEAR,0,0,SUM(ACC_0104*12/ACC_MONTH)/ACC_YEAR)*0.0225,0)) 
       + DECODE(ACC_YEAR,0,0,SUM(ACC_0101*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '01'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E101:이자수익자산
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E101' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0104*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '01'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E102:이자수익자산 * 2.25
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E102' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0104*12/ACC_MONTH)/ACC_YEAR) * 2.25 MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '01'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E103:이자수익
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E103' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0102*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '01'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E104:이자비용
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E104' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0103*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '01'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E105:|이자수익 - 이자비용|
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E105' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0102_0103*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '01'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E106:Min[|이자수익 - 이자비용| , 이자수익자산 × 2.25%]
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E106' MSR_ELM_DSCD,  
   LEAST(DECODE(ACC_YEAR,0,0,SUM(ACC_0102_0103*12/ACC_MONTH)/ACC_YEAR) , ROUND(DECODE(ACC_YEAR,0,0,SUM(ACC_0104*12/ACC_MONTH)/ACC_YEAR) * 0.0225,0)) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '01'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E107:배당수익
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E107' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0101*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '01'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E200:SC
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E200' MSR_ELM_DSCD,  
   GREATEST(DECODE(ACC_YEAR,0,0,SUM(ACC_0202*12/ACC_MONTH)/ACC_YEAR) 
          , DECODE(ACC_YEAR,0,0,SUM(ACC_0204*12/ACC_MONTH)/ACC_YEAR)) 
          + GREATEST(DECODE(ACC_YEAR,0,0,SUM(ACC_0201*12/ACC_MONTH)/ACC_YEAR) 
          , DECODE(ACC_YEAR,0,0,SUM(ACC_0203*12/ACC_MONTH)/ACC_YEAR)) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '02'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E201:수수료수익
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E201' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0202*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '02'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E202:수수료비용
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E202' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0204*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '02'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E203:Max[수수료수익, 수수료비용]
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E203' MSR_ELM_DSCD,  
   GREATEST(DECODE(ACC_YEAR,0,0,SUM(ACC_0202*12/ACC_MONTH)/ACC_YEAR) , DECODE(ACC_YEAR,0,0,SUM(ACC_0204)/ACC_YEAR)) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '02'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E204:기타영업수익
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E204' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0201*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '02'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E205:기타영업비용
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E205' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0203*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '02'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E206:Max[기타영업수익, 기타영업비용]
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E206' MSR_ELM_DSCD,  
   GREATEST(DECODE(ACC_YEAR,0,0,SUM(ACC_0201*12/ACC_MONTH)/ACC_YEAR) , DECODE(ACC_YEAR,0,0,SUM(ACC_0203*12/ACC_MONTH)/ACC_YEAR)) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '02'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E300:FC
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E300' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0301_0303*12/ACC_MONTH)/ACC_YEAR) + DECODE(ACC_YEAR,0,0,SUM(ACC_0302_0304*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '03'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E301:은행계정수익
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E301' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0301*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '03'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E302:은행계정손실
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E302' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0303*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '03'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  -- E303:|은행계정손익|
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E303' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0301_0303*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '03'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E304:트레이딩계정수익
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E304' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0302*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '03'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E305:트레이딩계정손실
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E305' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0304*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '03'
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
UNION ALL
SELECT  --E306:|트레이딩계정손익|
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, 'E306' MSR_ELM_DSCD,  
   DECODE(ACC_YEAR,0,0,SUM(ACC_0302_0304*12/ACC_MONTH)/ACC_YEAR) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T1
 WHERE LV1_BIZ_IX_C = '03'
 
 GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LV1_BIZ_IX_C, ACC_YEAR
   ORDER BY BAS_YM
   					</data>
				</sql>	
			</unit>
			<unit id="unit99" name="BI 계산" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT  -- E400:BI
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E400' MSR_ELM_DSCD,
   SUM(MSR_AM) MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD IN ('E100', 'E200', 'E300')
  AND BAS_YM = TRIM(#sch_bas_ym#)
GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C 
   					</data>
				</sql>	
			</unit>
			<unit id="unit99" name="BIC 계산" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E500:BIC
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E500' MSR_ELM_DSCD,
   CASE WHEN MSR_AM &lt;= 1.4 * POWER(10,12) THEN MSR_AM * 0.12
        WHEN MSR_AM &lt;= 42 * POWER(10,12) THEN MSR_AM * 0.15
          ELSE MSR_AM * 0.18
   END MSR_AM,     
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD = 'E400'
  AND BAS_YM = TRIM(#sch_bas_ym#)
   					</data>
				</sql>	
			</unit>
			<unit id="unit99" name="ILM 계산" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E700:ILM
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E700' MSR_ELM_DSCD,
   TRUNC(LN(EXP(1) - 1 + POWER(CASE WHEN LC = 0 THEN 0 ELSE (BIC / LC) END,0.8)),11) AS MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM (
    SELECT GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C,
           SUM(CASE WHEN MSR_ELM_DSCD = 'E500' THEN MSR_AM ELSE 0 END) BIC,
           SUM(CASE WHEN MSR_ELM_DSCD = 'E600' THEN MSR_AM ELSE 0 END) LC
      FROM TB_OR_GA_MSRELM
     WHERE MSR_ELM_DSCD IN ('E500','E600')
     GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C
       )
  WHERE BAS_YM = TRIM(#sch_bas_ym#)
   					</data>
				</sql>	
			</unit>
			<unit id="unit99" name="ORC 계산" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E800:ORC
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E800' MSR_ELM_DSCD,
   BIC * ILM AS MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM (
    SELECT GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C,
           SUM(CASE WHEN MSR_ELM_DSCD = 'E500' THEN MSR_AM ELSE 0 END) BIC,
           SUM(CASE WHEN MSR_ELM_DSCD = 'E700' THEN MSR_AM ELSE 0 END) ILM
      FROM TB_OR_GA_MSRELM
     WHERE MSR_ELM_DSCD IN ('E500','E700')
     GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C
       )
  WHERE BAS_YM = TRIM(#sch_bas_ym#)
   					</data>
				</sql>	
			</unit>
			<unit id="unit99" name="RWA 계산" type="S" mode="insert" multiid="">	
				<sql id="sql12" name="sql12">
					<data id="data12" name="data12">	
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E900:Op.RWA
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E900' MSR_ELM_DSCD,
   MSR_AM * 12.5 MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD = 'E800'
   AND BAS_YM = TRIM(#sch_bas_ym#)
   					</data>
				</sql>	
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit99" name="내부한도소진율Insert" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_LMT_EXRAT(
    GRP_ORG_C, BASYY, RGO_IN_DSC, SBDR_C, CASE_DSC, BAS_MM,
    TOT_NED_OWNFDS, LMT_RTO, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
)
SELECT 
    GRP_ORG_C
    , BASYY
    , RGO_IN_DSC
    , SBDR_C
    , CASE_DSC
    , BAS_MM
    , ORC TOT_NED_OWNFDS
    , EXRAT LMT_RTO
    , SYSDATE FIR_INP_DTM
    , 'SYSTEM' FIR_INPMN_ENO
    , SYSDATE LSCHG_DTM
    , 'SYSTEM' LS_WKR_ENO
FROM(
WITH
T1 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , MSR_ELM_DSCD
    , SBDR_C
    , MSR_AM    ORC
FROM TB_OR_GA_MSRELM 
WHERE MSR_ELM_DSCD = 'E800'
  AND RGO_IN_DSC = '2'
  AND SBDR_C = '01'
  AND SUBSTR(BAS_YM,1,4) =#sch_bas_yy#
  AND GRP_ORG_C = #grp_org_c#
),
T2 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , MSR_ELM_DSCD
    , SBDR_C
    , MSR_AM    M_ORC
FROM TB_OR_GA_MSRELM 
WHERE MSR_ELM_DSCD = 'E800'
  AND RGO_IN_DSC = '2'
  AND SBDR_C = '02'
  AND SUBSTR(BAS_YM,1,4) =#sch_bas_yy#
  AND GRP_ORG_C = #grp_org_c#
),
T3 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , MSR_ELM_DSCD
    , SUM(MSR_AM)    G_ORC
FROM TB_OR_GA_MSRELM 
WHERE MSR_ELM_DSCD = 'E800'
  AND RGO_IN_DSC = '2'
  AND SUBSTR(BAS_YM,1,4) =#sch_bas_yy#
  AND GRP_ORG_C = #grp_org_c#
GROUP BY GRP_ORG_C, BAS_YM, RGO_IN_DSC, MSR_ELM_DSCD
),
I1 AS (
SELECT A.GRP_ORG_C
    , A.BASYY
    , A.RGO_IN_DSC
    , A.SBDR_C
    , A.TOT_NED_OWNFDS_LMT_AM ORC_LMT
FROM TB_OR_GA_INLMT_CASE A
    , TB_OR_GA_INLMT B
WHERE A.GRP_ORG_C = #grp_org_c#
  AND A.GRP_ORG_C = B.GRP_ORG_C
  AND A.RGO_IN_DSC = '2'
  AND A.SBDR_C = '01'
  AND A.BASYY = TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
  AND A.RGO_IN_DSC = B.RGO_IN_DSC
  AND A.SBDR_C = B.SBDR_C
  AND A.BASYY = B.BASYY
  AND A.CASE_DSC = B.COIC_CASE_DSC
  AND B.RZT_YN = 'Y'
),
I2 AS (
SELECT A.GRP_ORG_C
    , A.BASYY
    , A.RGO_IN_DSC
    , A.SBDR_C
    , A.TOT_NED_OWNFDS_LMT_AM M_ORC_LMT
FROM TB_OR_GA_INLMT_CASE A
    , TB_OR_GA_INLMT B
WHERE A.GRP_ORG_C = #grp_org_c#
  AND A.GRP_ORG_C = B.GRP_ORG_C
  AND A.RGO_IN_DSC = '2'
  AND A.SBDR_C = '02'
  AND A.BASYY = TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
  AND A.RGO_IN_DSC = B.RGO_IN_DSC
  AND A.SBDR_C = B.SBDR_C
  AND A.BASYY = B.BASYY
  AND A.CASE_DSC = B.COIC_CASE_DSC
  AND B.RZT_YN = 'Y'
),
I3 AS (
SELECT A.GRP_ORG_C
    , A.BASYY
    , A.RGO_IN_DSC
    , SUM(TOT_NED_OWNFDS_LMT_AM) G_ORC_LMT
FROM TB_OR_GA_INLMT_CASE A
    , TB_OR_GA_INLMT B
WHERE A.GRP_ORG_C = #grp_org_c#
  AND A.GRP_ORG_C = B.GRP_ORG_C
  AND A.RGO_IN_DSC = '2'
  AND A.BASYY = TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
  AND A.RGO_IN_DSC = B.RGO_IN_DSC
  AND A.SBDR_C = B.SBDR_C
  AND A.BASYY = B.BASYY
  AND A.CASE_DSC = B.COIC_CASE_DSC
  AND B.RZT_YN = 'Y'
GROUP BY A.GRP_ORG_C, A.BASYY, A.RGO_IN_DSC
),
BNK_EXRAT AS (
SELECT SUBSTR(A.BAS_YM,5,2) BAS_MM, ORC / ORC_LMT * 100 EXRAT FROM T1 A, I1 B
),
MYN_EXRAT AS (
SELECT SUBSTR(A.BAS_YM,5,2) BAS_MM, M_ORC / M_ORC_LMT * 100 EXRAT FROM T2 A, I2 B
),
GRP_EXRAT AS (
SELECT SUBSTR(A.BAS_YM,5,2) BAS_MM, G_ORC / G_ORC_LMT * 100 EXRAT FROM T3 A, I3 B
)
SELECT
    A.GRP_ORG_C
    , TO_NUMBER(SUBSTR(A.BAS_YM,1,4)) BASYY
    , A.RGO_IN_DSC
    , A.SBDR_C
    , C.COIC_CASE_DSC CASE_DSC
    , SUBSTR(A.BAS_YM,5,2) BAS_MM
    , A.ORC
    , ROUND(B.EXRAT,2) EXRAT
FROM T1 A
    , BNK_EXRAT B
    , TB_OR_GA_INLMT C
WHERE TO_NUMBER(SUBSTR(A.BAS_YM,1,4))-1 = C.BASYY
  AND SUBSTR(A.BAS_YM,5,2) = B.BAS_MM
UNION
SELECT
    A.GRP_ORG_C
    , TO_NUMBER(SUBSTR(A.BAS_YM,1,4)) BASYY
    , A.RGO_IN_DSC
    , A.SBDR_C
    , C.COIC_CASE_DSC CASE_DSC
    , SUBSTR(A.BAS_YM,5,2) BAS_MM
    , A.M_ORC
    , ROUND(B.EXRAT,2) 
FROM T2 A
    , MYN_EXRAT B
    , TB_OR_GA_INLMT C
WHERE TO_NUMBER(SUBSTR(A.BAS_YM,1,4))-1 = C.BASYY
  AND SUBSTR(A.BAS_YM,5,2) = B.BAS_MM
UNION
SELECT
    A.GRP_ORG_C
    , TO_NUMBER(SUBSTR(A.BAS_YM,1,4)) BASYY
    , '1'
    , '00'
    , C.COIC_CASE_DSC CASE_DSC
    , SUBSTR(A.BAS_YM,5,2) BAS_MM
    , A.G_ORC
    , ROUND(B.EXRAT,2) 
FROM T3 A
    , GRP_EXRAT B
    , TB_OR_GA_INLMT C
WHERE TO_NUMBER(SUBSTR(A.BAS_YM,1,4))-1 = C.BASYY
  AND SUBSTR(A.BAS_YM,5,2) = B.BAS_MM)
					</data>					
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	<process id="ORMR010501" name="계정과목 매핑 테이블 조회(공통)" forward="/msr/ORMR0105" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		</group>
	</process>
	
	<process id="ORMR010502" name="계정과목 매핑 테이블 목록 조회(공통)" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="st_acc_tpc" name="계정유형" parmid="st_acc_tpc" attr="S" default_value=""/>
		<parm id="sch_mapping_yn" name="매핑여부" parmid="sch_mapping_yn" attr="S" default_value=""/>
		<parm id="sch_lv1_biz_ix_c" name="1레벨영업지수코드" parmid="sch_lv1_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_lv2_biz_ix_c" name="2레벨영업지수코드" parmid="sch_lv2_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_acc_sbjnm" name="계정과목명" parmid="sch_acc_sbjnm" attr="S" default_value=""/>
		<parm id="sch_acc_sbj_cnm" name="계정과목코드" parmid="sch_acc_sbj_cnm" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="계정과목 매핑 테이블 목록 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT
  	       A.ACC_SBJ_CNM 
  	     , A.MAPPING_YN 
  	     , LEVEL - 1 AS "LEVEL"  
  	     , A.LVL_NO 						
  	     , A.ACC_SBJNM  
  	     , A.ACC_TPC 
  	     , A.ACC_TPCNM 
  	     , A.UP_ACC_SBJ_CNM 
  	     , A.LV2_BIZ_IX_C 
  	     , A.LV1_BIZ_IX_NM  
  	     , A.LV2_BIZ_IX_NM  
  	     , A.SORT_SQ
  	     , A.VLD_YN 
  	     , A.VLD_ST_DT  
  	     , A.VLD_ED_DT  
 FROM (                                      
	SELECT DISTINCT                           
  	       A.ACC_SBJ_CNM            
  	     , DECODE(A.LV2_BIZ_IX_C,NULL,'N','Y') AS MAPPING_YN  
  	     , A.LVL_NO                  
  	     , A.ACC_SBJNM               
  	     , A.ACC_TPC                 
  	     , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='ACC_TPC' AND IDVDC_VAL=A.ACC_TPC) AS ACC_TPCNM 
  	     , A.UP_ACC_SBJ_CNM        
  	     , A.LV2_BIZ_IX_C              
  	     , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV1_BIZ_IX_C' AND IDVDC_VAL=SUBSTR(A.LV2_BIZ_IX_C,1,2)) AS LV1_BIZ_IX_NM  
  	     , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV2_BIZ_IX_C' AND IDVDC_VAL=A.LV2_BIZ_IX_C) AS LV2_BIZ_IX_NM   
  	     , A.SORT_SQ
  	     , A.VLD_YN                  
  	     , A.VLD_ST_DT               
  	     , A.VLD_ED_DT               
	 FROM (
			SELECT 
			   GRP_ORG_C, ACC_SBJ_CNM, ACC_SBJNM, 
			   ACC_TPC, UP_ACC_SBJ_CNM, LVL_NO, 
			   LV2_BIZ_IX_C, FILL_YN_DSC, MPP_BAS_CNTN, 
			   REV_OPN_CNTN, NOTE_CNTN,
			   SORT_SQ, VLD_YN, VLD_ST_DT, 
			   VLD_ED_DT, FIR_INP_DTM, FIR_INPMN_ENO, 
			   LSCHG_DTM, LS_WKR_ENO
			  FROM TB_OR_GA_MSRACC
			  ) A
  	 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
  	   AND A.VLD_YN = 'Y'                      
     START WITH A.UP_ACC_SBJ_CNM IS NOT NULL   
       --AND UP_ACC_SBJ_CNM != ACC_SBJ_CNM					
					</data>
				</sql>
  				<sql id="sql12" name="sql12">
  					<condition id="con11" name="con11" variable="#st_acc_tpc#" comparison="ne" value="" />
  					<data id="data12" name="data12">
  	   AND A.ACC_TPC = TRIM(#st_acc_tpc#)				
  					</data>
  				</sql>
  				<sql id="sql13" name="sql13">
  					<condition id="con11" name="con11" variable="#sch_mapping_yn#" comparison="eq" value="Y" />
  					<data id="data13" name="data13">
       AND A.LV2_BIZ_IX_C IS NOT NULL			
  					</data>
  				</sql>
  				<sql id="sql14" name="sql14">
  					<condition id="con11" name="con11" variable="#sch_mapping_yn#" comparison="eq" value="N" />
  					<data id="data14" name="data14">
  	   AND A.LV2_BIZ_IX_C IS NULL			
  					</data>
  				</sql>
  				<sql id="sql15" name="sql15">
  					<data id="data15" name="data15">
  	   AND NVL(A.LV2_BIZ_IX_C,'X') LIKE NVL(TRIM(#sch_lv1_biz_ix_c#) || '%%','X')
	   AND NVL(A.LV2_BIZ_IX_C,'X') LIKE NVL(TRIM(#sch_lv2_biz_ix_c#) || '%%','X')
       AND UPPER(A.ACC_SBJNM) LIKE '%%' || UPPER(TRIM(#sch_acc_sbjnm#)) || '%%'			
  					</data>
  				</sql>
  				<sql id="sql16" name="sql16">
  					<condition id="con11" name="con11" variable="#sch_acc_sbj_cnm#" comparison="ne" value="" />
  					<data id="data16" name="data16">
	   AND A.ACC_SBJ_CNM = TRIM(#sch_acc_sbj_cnm#)  					
  					</data>
  				</sql>
  				<sql id="sql17" name="sql17">
  					<data id="data17" name="data17">
     CONNECT BY PRIOR A.UP_ACC_SBJ_CNM = A.ACC_SBJ_CNM 
 ) A                                                         
 WHERE A.VLD_YN = 'Y'                                       
 START WITH A.UP_ACC_SBJ_CNM IS NULL                        
 CONNECT BY PRIOR A.ACC_SBJ_CNM = A.UP_ACC_SBJ_CNM            
 ORDER SIBLINGS BY A.SORT_SQ  					
  					</data>
  				</sql>
  				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>		
		</group>
	</process>
	
	<process id="ORMR010503" name="영업지수매핑 등록/변경 이력" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="st_acc_tpc" name="계정유형" parmid="st_acc_tpc" attr="S" default_value=""/>
		<parm id="sch_mapping_yn" name="매핑여부" parmid="sch_mapping_yn" attr="S" default_value=""/>
		<parm id="sch_lv1_biz_ix_c" name="1레벨영업지수코드" parmid="sch_lv1_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_lv2_biz_ix_c" name="2레벨영업지수코드" parmid="sch_lv2_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_acc_sbjnm" name="계정과목명" parmid="sch_acc_sbjnm" attr="S" default_value=""/>
		<parm id="sch_acc_sbj_cnm" name="계정과목코드" parmid="sch_acc_sbj_cnm" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부 자본량 측정 결과 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 
    DECODE(A.ACC_SBJNM,B.ACC_SBJNM, '변경','신규') STATUS,
    A.LVL_NO,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='FILL_YN_DSC' AND IDVDC_VAL=A.FILL_YN_DSC) AS FILL_YN_DSCNM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='ACC_TPC' AND IDVDC_VAL=A.ACC_TPC) AS ACC_TPCNM,
    A.ACC_SBJ_CNM,
    A.ACC_SBJNM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV1_BIZ_IX_C' AND IDVDC_VAL=SUBSTR(A.LV2_BIZ_IX_C,1,2)) AS BF_LV1_BIZ_IX_NM ,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV2_BIZ_IX_C' AND IDVDC_VAL=A.LV2_BIZ_IX_C) AS BF_LV2_BIZ_IX_NM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV1_BIZ_IX_C' AND IDVDC_VAL=SUBSTR(B.LV2_BIZ_IX_C,1,2)) AS AF_LV1_BIZ_IX_NM , 
  	(SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV2_BIZ_IX_C' AND IDVDC_VAL=B.LV2_BIZ_IX_C) AS AF_LV2_BIZ_IX_NM,
    A.LSCHG_DTM
    FROM TB_OR_GA_MSRACC_TMP A
    INNER JOIN TB_OR_GA_MSRACC B
    ON A.GRP_ORG_C = B.GRP_ORG_C
    AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
    WHERE A.ACC_SBJNM IS NOT NULL
UNION ALL
SELECT 
    DECODE(A.ACC_SBJNM, B.ACC_SBJNM, '변경','신규') STATUS,
    A.LVL_NO,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='FILL_YN_DSC' AND IDVDC_VAL=A.FILL_YN_DSC) AS FILL_YN_DSCNM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='ACC_TPC' AND IDVDC_VAL=A.ACC_TPC) AS ACC_TPCNM,
    A.ACC_SBJ_CNM,
    A.ACC_SBJNM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV1_BIZ_IX_C' AND IDVDC_VAL=SUBSTR(A.LV2_BIZ_IX_C,1,2)) AS BF_LV1_BIZ_IX_NM ,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV2_BIZ_IX_C' AND IDVDC_VAL=A.LV2_BIZ_IX_C) AS BF_LV2_BIZ_IX_NM,
    (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV1_BIZ_IX_C' AND IDVDC_VAL=SUBSTR(B.LV2_BIZ_IX_C,1,2)) AS AF_LV1_BIZ_IX_NM , 
  	(SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE GRP_ORG_C=TRIM(#grp_org_c#) AND INTG_GRP_C='LV2_BIZ_IX_C' AND IDVDC_VAL=B.LV2_BIZ_IX_C) AS AF_LV2_BIZ_IX_NM,
    A.LSCHG_DTM
    FROM TB_OR_GA_MSRACC_HIST A
    INNER JOIN TB_OR_GA_MSRACC B
    ON A.GRP_ORG_C = B.GRP_ORG_C
    AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
    WHERE A.ACC_SBJNM IS NOT NULL 
    ORDER BY LSCHG_DTM	DESC	
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010601" name="내부 자본량 측정 결과 조회" forward="/msr/ORMR0106" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT    
       SUBSTR(BAS_YM,1,4) AS BAS_YY     
  FROM TB_OR_GA_BICACC     
 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
 GROUP BY SUBSTR(BAS_YM,1,4)     
 ORDER BY SUBSTR(BAS_YM,1,4) DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010602" name="내부 자본량 측정 결과 조회1" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="조회년" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_bas_qq" name="조회분기" parmid="sch_bas_qq" attr="S" default_value=""/>
		<parm id="rgo_in_dsc" name="측정방법" parmid="rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sbdr_c" name="발생 법인" parmid="sbdr_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부 자본량 측정 결과 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
					WITH BAS_TB AS (
				    SELECT A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM MSR_AM3
				    FROM TB_OR_GA_BICDET A
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#))
				  AND A.BAS_YM =TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
				GROUP BY A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM
				),
				PREVIOUS_YEAR_TB AS (
				    SELECT A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM MSR_AM2
				    FROM TB_OR_GA_BICDET A
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-12),'YYYYMM'))
				  AND A.BAS_YM =TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-12),'YYYYMM')
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
				GROUP BY A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM
				),
				TWO_PREVIOUS_YEAR_TB AS (
				    SELECT A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM MSR_AM1
				    FROM TB_OR_GA_BICDET A
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-24),'YYYYMM'))
				  AND A.BAS_YM =TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-24),'YYYYMM')
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
				GROUP BY A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM
				)
				SELECT A.LV1_BIZ_IX_C,D.INTG_IDVD_CNM DIVISION,A.LV2_BIZ_IX_C,E.INTG_IDVD_CNM ITEM
				                      ,TO_CHAR(C.MSR_AM1, 'FM999,999,999,999,999,999') MSR_AM1
                      ,TO_CHAR(B.MSR_AM2, 'FM999,999,999,999,999,999') MSR_AM2
                      ,TO_CHAR(A.MSR_AM3, 'FM999,999,999,999,999,999') MSR_AM3
				 FROM BAS_TB A
				     ,PREVIOUS_YEAR_TB B
				     ,TWO_PREVIOUS_YEAR_TB C
				     ,TB_OR_OM_CODE D
				     ,TB_OR_OM_CODE E
				WHERE A.LV2_BIZ_IX_C = B.LV2_BIZ_IX_C (+)
				  AND A.LV2_BIZ_IX_C = C.LV2_BIZ_IX_C (+)
				  AND D.INTG_GRP_C = 'LV1_BIZ_IX_C'
				  AND E.INTG_GRP_C = 'LV2_BIZ_IX_C'
				  AND D.IDVDC_VAL = A.LV1_BIZ_IX_C
				  AND E.IDVDC_VAL = A.LV2_BIZ_IX_C
				  ORDER BY CASE WHEN A.LV1_BIZ_IX_C = '01' THEN 1
				              WHEN A.LV1_BIZ_IX_C = '02' THEN 2
				              WHEN A.LV1_BIZ_IX_C = '03' THEN 3
				           ELSE 11
				           END
				        ,A.LV2_BIZ_IX_C ASC		
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010603" name="내부 자본량 측정 결과 조회2" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="조회년" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_bas_qq" name="조회분기" parmid="sch_bas_qq" attr="S" default_value=""/>
		<parm id="rgo_in_dsc" name="측정방법" parmid="rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sbdr_c" name="발생 법인" parmid="sbdr_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부 자본량 측정 결과 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT GRP_ORG_C,BAS_YM, SBDR_C, CASE WHEN MSR_ELM_DSCD = 'E100' THEN '01' 
    WHEN MSR_ELM_DSCD = 'E200' THEN '02'
    WHEN MSR_ELM_DSCD = 'E300' THEN '03'
    WHEN MSR_ELM_DSCD = 'E400' THEN 'BI'
    WHEN MSR_ELM_DSCD = 'E500' THEN 'BIC'
    ELSE '' END AS LV1_BIZ_IX_C, TO_CHAR(MSR_AM,'FM999,999,999,999,999,999')  MSR_AM
FROM TB_OR_GA_MSRELM
WHERE BAS_YM = TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
AND RGO_IN_DSC = TRIM(#rgo_in_dsc#)
AND SBDR_C = TRIM(#sbdr_c#)
AND MSR_ELM_DSCD IN('E100','E200','E300','E400','E500')
ORDER BY LV1_BIZ_IX_C
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010701" name="영업지수 잔액변동 조회(공통)" forward="/msr/ORMR0107" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 									
	SUBSTR(BAS_YM,1,4) AS BAS_YY  	
 FROM TB_OR_GA_BICACC  		
 WHERE GRP_ORG_C=TRIM(#grp_org_c#) 				
 GROUP BY SUBSTR(BAS_YM,1,4) 			
 ORDER BY SUBSTR(BAS_YM,1,4) DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>		
		</group>
	</process>
	
	<process id="ORMR010702" name="영업지수 잔액변동 조회(공통)" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="조회년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_lv1_biz_ix_c" name="1레벨영업지수코드" parmid="sch_lv1_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_lv2_biz_ix_c" name="2레벨영업지수코드" parmid="sch_lv2_biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_gubun" name="분기연도구분" parmid="분기연도구분" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="영업지수 잔액변동 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
					WITH BAS_TB AS (
				    SELECT A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM MSR_AM3
				    FROM TB_OR_GA_BICDET A
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#))
				  AND A.BAS_YM =TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
				GROUP BY A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM
				),
				PREVIOUS_YEAR_TB AS (
				    SELECT A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM MSR_AM2
				    FROM TB_OR_GA_BICDET A
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-12),'YYYYMM'))
				  AND A.BAS_YM =TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-3),'YYYYMM')
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
				GROUP BY A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.MSR_AM
				)
				SELECT A.LV1_BIZ_IX_C,
                D.INTG_IDVD_CNM DIVISION, 
                A.LV2_BIZ_IX_C, 
                E.INTG_IDVD_CNM ITEM                   
                      ,TO_CHAR(B.MSR_AM2, 'FM999,999,999,999,999,999') MSR_AM2
                      ,TO_CHAR(A.MSR_AM3, 'FM999,999,999,999,999,999') MSR_AM3
                      ,TO_CHAR(A.MSR_AM3 - B.MSR_AM2, 'FM999,999,999,999,999,999') CHANGE_AM
                      , TO_CHAR(DECODE(MSR_AM2,0,0,(A.MSR_AM3 - B.MSR_AM2)/B.MSR_AM2 * 100),'999,999,999.99') CHANGE_PER
				 FROM BAS_TB A
				     ,PREVIOUS_YEAR_TB B
				     ,TB_OR_OM_CODE D
				     ,TB_OR_OM_CODE E
				WHERE A.LV2_BIZ_IX_C = B.LV2_BIZ_IX_C (+)
				  AND D.INTG_GRP_C = 'LV1_BIZ_IX_C'
				  AND E.INTG_GRP_C = 'LV2_BIZ_IX_C'
				  AND D.IDVDC_VAL = A.LV1_BIZ_IX_C
				  AND E.IDVDC_VAL = A.LV2_BIZ_IX_C
                        
           UNION ALL
       SELECT 
            '합계' AS LV1_BIZ_IX_C
            , '합계' AS DIVISION
            , '9999' AS LV2_BIZ_IX_C
            , '합계' AS ITEM
            , TO_CHAR(B.MSR_AM, 'FM999,999,999,999,999,999') AS MSR_AM2 
            , TO_CHAR(A.MSR_AM, 'FM999,999,999,999,999,999') AS MSR_AM3
            , TO_CHAR(A.MSR_AM - B.MSR_AM, 'FM999,999,999,999,999,999') AS CHANGE_AM
            , TO_CHAR(A.MSR_AM / B.MSR_AM, '999,999,999.99') AS CHANGE_PER
       FROM DUAL
        ,(SELECT SUM(MSR_AM) AS MSR_AM FROM TB_OR_GA_BICDET A WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#))
				  AND A.BAS_YM = TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)) A
        ,(SELECT SUM(MSR_AM) AS MSR_AM FROM TB_OR_GA_BICDET A WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-3),'YYYYMM')
				  AND A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-3),'YYYYMM')
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#))) B
       
    ORDER BY LV2_BIZ_IX_C ASC				
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010703" name="영업지수 잔액변동 조회(공통)" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="조회년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="biz_ix_c" name="영업지수코드" parmid="biz_ix_c" attr="S" default_value=""/>
		<parm id="sch_gubun" name="분기연도구분" parmid="분기연도구분" attr="S" default_value=""/>
		<parm id="sch_lv2_biz_ix_c" name="LV2영업지수요소코드" parmid="분기연도구분" attr="S" default_value=""/>
		<parm id="sch_lv1_biz_ix_c" name="LV1영업지수요소코드" parmid="분기연도구분" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="영업지수 잔액 변동 상세 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql1">
					<data id="data11" name="data11">
WITH BAS_TB AS (
				    SELECT A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.ACC_SBJ_CNM CNM1, A.ACC_SBJ_CNM, B.ACC_SBJNM ,A.MSR_AM MSR_AM3
				    FROM TB_OR_GA_BICACC A
                    INNER JOIN TB_OR_GA_MSRACC B
                    ON A.LV2_BIZ_IX_C = B.LV2_BIZ_IX_C
                    AND A.GRP_ORG_C = B.GRP_ORG_C
                    AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
                    AND A.LV2_BIZ_IX_C = B. LV2_BIZ_IX_C
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICACC WHERE BAS_YM = TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#))
				  AND A.BAS_YM =TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
				GROUP BY A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.ACC_SBJ_CNM, A.ACC_SBJ_CNM, B.ACC_SBJNM, A.MSR_AM
				),
				PREVIOUS_YEAR_TB AS (
				    SELECT A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.ACC_SBJ_CNM CNM2, A.ACC_SBJ_CNM, B.ACC_SBJNM, A.MSR_AM MSR_AM2
				    FROM TB_OR_GA_BICACC A
                    INNER JOIN TB_OR_GA_MSRACC B
                    ON A.LV2_BIZ_IX_C = B.LV2_BIZ_IX_C
                    AND A.GRP_ORG_C = B.GRP_ORG_C
                    AND A.ACC_SBJ_CNM = B.ACC_SBJ_CNM
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICACC WHERE BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-3),'YYYYMM'))
				  AND A.BAS_YM =TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-3),'YYYYMM')
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
				GROUP BY A.LV1_BIZ_IX_C,A.LV2_BIZ_IX_C, A.ACC_SBJ_CNM, A.ACC_SBJ_CNM , B.ACC_SBJNM, A.MSR_AM
				)
				SELECT A.LV1_BIZ_IX_C,D.INTG_IDVD_CNM DIVISION,A.LV2_BIZ_IX_C,E.INTG_IDVD_CNM ITEM , A.CNM1, A.ACC_SBJNM                 
                      ,TO_CHAR(B.MSR_AM2, 'FM999,999,999,999,999,999') MSR_AM2
                      ,TO_CHAR(A.MSR_AM3, 'FM999,999,999,999,999,999') MSR_AM3
                      , TO_CHAR(A.MSR_AM3 - B.MSR_AM2 , 'FM999,999,999,999,999,999') CHANGE_AM
                      , TO_CHAR(DECODE(MSR_AM2,0,0,(A.MSR_AM3 - B.MSR_AM2)/B.MSR_AM2 * 100),'999,999,999.99') CHANGE_PER
				 FROM BAS_TB A
				     ,PREVIOUS_YEAR_TB B
				     ,TB_OR_OM_CODE D
				     ,TB_OR_OM_CODE E
				WHERE A.LV2_BIZ_IX_C = B.LV2_BIZ_IX_C (+)
				  AND D.INTG_GRP_C = 'LV1_BIZ_IX_C'
				  AND E.INTG_GRP_C = 'LV2_BIZ_IX_C'
				  AND D.IDVDC_VAL = A.LV1_BIZ_IX_C
				  AND E.IDVDC_VAL = A.LV2_BIZ_IX_C
                  AND A.CNM1 = B.CNM2
                  </data>
				</sql>
	                  <sql id="sql12" name="sql12">
						<condition id="con11" name="con11" variable="#sch_lv2_biz_ix_c#" comparison="ne" value="" />
						<data id="data12" name="data12">
	           		  AND A.LV2_BIZ_IX_C = TRIM(#sch_lv2_biz_ix_c#)					
						</data>
					  </sql>
	                  <sql id="sql13" name="sql13">
						<condition id="con11" name="con11" variable="#sch_lv1_biz_ix_c#" comparison="ne" value="" />
						<data id="data13" name="data13">
	           		  AND A.LV1_BIZ_IX_C = TRIM(#sch_lv1_biz_ix_c#)					
						</data>
					  </sql>
					<sql id="sql14" name="sql14">
					 	<data id="data14" name="data14">
					 UNION ALL
SELECT 
            '합계' AS LV1_BIZ_IX_C
            , '합계' AS DIVISION
            , '9999' AS LV2_BIZ_IX_C
            , '합계' AS ITEM
            , '합계' AS CNM1
            , '합계' AS ACC_SBJNM
            , TO_CHAR(B.MSR_AM, 'FM999,999,999,999,999,999') AS MSR_AM2 
            , TO_CHAR(A.MSR_AM, 'FM999,999,999,999,999,999') AS MSR_AM3
            , TO_CHAR(A.MSR_AM - B.MSR_AM, 'FM999,999,999,999,999,999') AS CHANGE_AM
            , TO_CHAR(DECODE(B.MSR_AM,0,0,A.MSR_AM / B.MSR_AM), '999,999,999.99') AS CHANGE_PER
       FROM DUAL
        ,(SELECT  LV2_BIZ_IX_C, SUM(MSR_AM) AS MSR_AM FROM TB_OR_GA_BICACC A WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#))
				  AND A.BAS_YM = TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
                  AND A.LV2_BIZ_IX_C = TRIM(#sch_lv2_biz_ix_c#)
                  GROUP BY LV2_BIZ_IX_C) A
        ,(SELECT LV2_BIZ_IX_C, SUM(MSR_AM) AS MSR_AM FROM TB_OR_GA_BICACC A WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  AND A.MSR_YY = (SELECT MAX(MSR_YY) FROM TB_OR_GA_BICDET WHERE BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-3),'YYYYMM'))
				  AND A.BAS_YM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#),'YYYYMM'),-3),'YYYYMM')
				  AND A.SBDR_C = TRIM(#sbdr_c#)
				  AND A.RGO_IN_DSC = TRIM(#rgo_in_dsc#)
                  AND A.LV2_BIZ_IX_C = TRIM(#sch_lv2_biz_ix_c#)
                  GROUP BY LV2_BIZ_IX_C) B
				  ORDER BY LV2_BIZ_IX_C 		
						</data>
					</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010801" name="측정대상 손실사건 조회(공통)" forward="/msr/ORMR0108" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 									
	SUBSTR(BAS_YM,1,4) AS BAS_YY  	
 FROM TB_OR_GA_FNASTM_UPLOAD
 WHERE GRP_ORG_C=TRIM(#grp_org_c#) 				
 GROUP BY SUBSTR(BAS_YM,1,4) 			
 ORDER BY SUBSTR(BAS_YM,1,4) DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010802" name="측정대상 손실사건 조회(공통)" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="조회년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_tot_am" name="순손실금액기준" parmid="sch_tot_am" attr="S" default_value=""/>
		<parm id="sch_rwa_yn" name="신용RWA반영여부" parmid="sch_rwa_yn" attr="S" default_value=""/>
		<parm id="sch_lshp_stsc1" name="손실상태" parmid="sch_lshp_stsc1" attr="S" default_value=""/>
		<parm id="sch_lshp_stsc2" name="손실상태" parmid="sch_lshp_stsc2" attr="S" default_value=""/>
		<parm id="sch_lshp_stsc3" name="손실상태" parmid="sch_lshp_stsc3" attr="S" default_value=""/>
		<parm id="sch_lshp_stsc4" name="손실상태" parmid="sch_lshp_stsc4" attr="S" default_value=""/>
		<parm id="sch_lss_tinm" name="손실사건명" parmid="sch_lss_tinm" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" 	name="측정대상 손실사건 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
WITH 
T1 AS (
    SELECT *   
      FROM TB_OR_LH_LSAM   
     WHERE VLD_YN = 'Y'    
       AND CRC_CAN_DSC IN ('0','1','2')      
),
T2 AS (
    SELECT CASE WHEN A.RVPY_DSC = '1'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS RV_AM    
         , CASE WHEN A.RVPY_DSC = '2'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS PY_AM 
         , B.SBDR_C    
         , A.*     
      FROM T1 A
     INNER JOIN (
            SELECT A.GRP_ORG_C, A.LSHP_AMNNO, NVL(A.HPN_OCU_NATCD,'01') SBDR_C
              FROM TB_OR_LM_LSHP A    
             INNER JOIN T1 B    
                ON A.GRP_ORG_C = B.GRP_ORG_C    
               AND A.LSHP_AMNNO = B.LSHP_AMNNO    
               AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD')    
               AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD')    
             WHERE A.VLD_YN = 'Y'    
               AND A.GRP_ORG_C = TRIM(#grp_org_c#)    
               AND NVL(A.RWA_YN,'N') = 'N'     
               AND A.LSHP_STSC IN ('02','03')  
               AND A.LSHP_FORM_C IN ('01')
            
            
           ) B
        ON A.GRP_ORG_C = B.GRP_ORG_C
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
),
T31 AS (
    SELECT GRP_ORG_C, LSHP_AMNNO, '1' RGO_IN_DSC, '00' SBDR_C
      FROM T2
     GROUP BY GRP_ORG_C, LSHP_AMNNO   
    HAVING SUM(PY_AM) - SUM(RV_AM) >= TRIM(25000000)     
),
T32 AS (
    SELECT GRP_ORG_C, LSHP_AMNNO, '2' RGO_IN_DSC, SBDR_C
      FROM T2
     GROUP BY GRP_ORG_C, LSHP_AMNNO, SBDR_C     
    HAVING SUM(PY_AM) - SUM(RV_AM) >= TRIM(1000000)     
),
T41 AS (
    SELECT 
       A.GRP_ORG_C, '1' RGO_IN_DSC, '00' SBDR_C, COUNT(*) CNT
      FROM T31 A
     GROUP BY A.GRP_ORG_C   
),
T42 AS (
    SELECT 
       A.GRP_ORG_C, '2' RGO_IN_DSC, A.SBDR_C, COUNT(*) CNT
      FROM T32 A
     GROUP BY A.GRP_ORG_C, A.SBDR_C   
),
T51 AS (
    SELECT 
       A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C,
       SUM(CASE WHEN B.RVPY_DSC = '1'  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'   
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS ISR_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2' AND B.ACC_DSC IN ('3','4')   
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS COST_PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     + SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS1_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS2_RV_AM 
      FROM T31 A
     INNER JOIN T1 B
        ON A.GRP_ORG_C = B.GRP_ORG_C    
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
       AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD')    
       AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD')    
     GROUP BY A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C   
),
T52 AS (
    SELECT 
       A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C,
       SUM(CASE WHEN B.RVPY_DSC = '1'    
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'    
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'   
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS ISR_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2' AND B.ACC_DSC IN ('3','4')   
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS COST_PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     + SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS1_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS2_RV_AM 
      FROM T32 A
     INNER JOIN T1 B
        ON A.GRP_ORG_C = B.GRP_ORG_C    
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
       AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD')    
       AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD')    
     GROUP BY A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C   
)
SELECT A.GRP_ORG_C, A.RGO_IN_DSC, '규제' AS RGO_IN_DSNM, A.SBDR_C, '' AS SBDR_CNM
     , NVL(SUM(A.CNT),0) CNT
     , NVL(SUM(B.RV_AM),0) RV_AM 
     , NVL(SUM(B.PY_AM),0) PY_AM 
     , NVL(SUM(B.ISR_RV_AM),0) ISR_RV_AM 
     , NVL(SUM(B.COST_PY_AM),0) COST_PY_AM 
     , NVL(SUM(B.GULS1_RV_AM),0) GULS1_RV_AM 
     , NVL(SUM(B.GULS2_RV_AM),0) GULS2_RV_AM 
     , NVL(SUM(B.GULS2_RV_AM),0) 
     / (SELECT LEAST(MONTHS_BETWEEN(TO_DATE(#sch_bas_ym#,'YYYYMM'), TO_DATE(TRIM(RMK_CNTN),'YYYYMM'))+3, 120)
           FROM TB_OR_OM_CODE 
         WHERE GRP_ORG_C = A.GRP_ORG_C 
           AND INTG_GRP_C = 'SBDR_C' 
           AND IDVDC_VAL = DECODE(A.SBDR_C,'00','01',A.SBDR_C))
     * 12 AS YEAR_AVG     
     , NVL(SUM(B.GULS2_RV_AM),0) 
     / (SELECT LEAST(MONTHS_BETWEEN(TO_DATE(#sch_bas_ym#,'YYYYMM'), TO_DATE(TRIM(RMK_CNTN),'YYYYMM'))+3, 120)
           FROM TB_OR_OM_CODE 
         WHERE GRP_ORG_C = A.GRP_ORG_C 
           AND INTG_GRP_C = 'SBDR_C' 
           AND IDVDC_VAL = DECODE(A.SBDR_C,'00','01',A.SBDR_C))
     * 12 * 15 AS LC_AM     
  FROM T41 A
 INNER JOIN T51 B
    ON A.GRP_ORG_C = B.GRP_ORG_C
   AND A.RGO_IN_DSC = B.RGO_IN_DSC
   AND A.SBDR_C = B.SBDR_C
 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
   AND A.RGO_IN_DSC = '1'   
   AND A.SBDR_C = '00'   
 GROUP BY A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C
UNION
SELECT A.GRP_ORG_C, '2' RGO_IN_DSC, '내부' AS RGO_IN_DSNM, A.IDVDC_VAL SBDR_C, A.INTG_IDVD_CNM
     , NVL(SUM(B.CNT),0) CNT
     , NVL(SUM(C.RV_AM),0) RV_AM
     , NVL(SUM(C.PY_AM),0) PY_AM
     , NVL(SUM(C.ISR_RV_AM),0) ISR_RV_AM 
     , NVL(SUM(C.COST_PY_AM),0) COST_PY_AM 
     , NVL(SUM(C.GULS1_RV_AM),0) GULS1_RV_AM 
     , NVL(SUM(C.GULS2_RV_AM),0) GULS2_RV_AM 
     , NVL(SUM(C.GULS2_RV_AM),0) 
     / (SELECT LEAST(MONTHS_BETWEEN(TO_DATE(#sch_bas_ym#,'YYYYMM'), TO_DATE(TRIM(RMK_CNTN),'YYYYMM'))+3, 120)
           FROM TB_OR_OM_CODE 
         WHERE GRP_ORG_C = A.GRP_ORG_C 
           AND INTG_GRP_C = 'SBDR_C' 
           AND IDVDC_VAL = DECODE(A.IDVDC_VAL,'00','01',A.IDVDC_VAL))
     * 12 AS YEAR_AVG     
     , NVL(SUM(C.GULS2_RV_AM),0) 
     / (SELECT LEAST(MONTHS_BETWEEN(TO_DATE(#sch_bas_ym#,'YYYYMM'), TO_DATE(TRIM(RMK_CNTN),'YYYYMM'))+3, 120)
           FROM TB_OR_OM_CODE 
         WHERE GRP_ORG_C = A.GRP_ORG_C 
           AND INTG_GRP_C = 'SBDR_C' 
           AND IDVDC_VAL = DECODE(A.IDVDC_VAL,'00','01',A.IDVDC_VAL))
     * 12 * 15 AS LC_AM     
  FROM TB_OR_OM_CODE A
  LEFT JOIN T42 B
    ON A.GRP_ORG_C = B.GRP_ORG_C
   AND A.IDVDC_VAL = B.SBDR_C
   AND B.RGO_IN_DSC = '2'
  LEFT JOIN T52 C
    ON B.GRP_ORG_C = C.GRP_ORG_C
   AND B.RGO_IN_DSC = C.RGO_IN_DSC
   AND B.SBDR_C = C.SBDR_C
 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
   AND A.INTG_GRP_C = 'SBDR_C'   
 GROUP BY A.GRP_ORG_C, A.IDVDC_VAL, INTG_IDVD_CNM				
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010803" name="측정대상 손실사건 조회(공통)" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="조회년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_tot_am" name="순손실금액기준" parmid="sch_tot_am" attr="S" default_value=""/>
		<parm id="sch_rwa_yn" name="신용RWA반영여부" parmid="sch_rwa_yn" attr="S" default_value=""/>
		<parm id="sch_lshp_stsc1" name="손실상태" parmid="sch_lshp_stsc1" attr="S" default_value=""/>
		<parm id="sch_lshp_stsc2" name="손실상태" parmid="sch_lshp_stsc2" attr="S" default_value=""/>
		<parm id="sch_lshp_stsc3" name="손실상태" parmid="sch_lshp_stsc3" attr="S" default_value=""/>
		<parm id="sch_lshp_stsc4" name="손실상태" parmid="sch_lshp_stsc4" attr="S" default_value=""/>
		<parm id="sch_lss_tinm" name="손실사건명" parmid="sch_lss_tinm" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="측정대상 손실사건 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
WITH 
T1 AS (
    SELECT *   
      FROM TB_OR_LH_LSAM   
     WHERE VLD_YN = 'Y'    
       AND CRC_CAN_DSC IN ('0','1','2')     /*정정취소구분코드(0 : 정상, 1 : 정정, 2 : 취소, 3 : 원인거래정정, 4 : 원인거래취소)*/ 
),
T2 AS (
    SELECT CASE WHEN A.RVPY_DSC = '1'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS RV_AM    
         , CASE WHEN A.RVPY_DSC = '2'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS PY_AM 
         , B.SBDR_C, B.LSS_TINM, B.OCU_BRC, B.LSHP_STSC
         , A.*     
      FROM T1 A
     INNER JOIN (
            SELECT A.GRP_ORG_C, A.LSHP_AMNNO, NVL(A.HPN_OCU_NATCD,'01') SBDR_C
                 , A.LSS_TINM, A.OCU_BRC, A.LSHP_STSC
              FROM TB_OR_LM_LSHP A    
             INNER JOIN T1 B    
                ON A.GRP_ORG_C = B.GRP_ORG_C    
               AND A.LSHP_AMNNO = B.LSHP_AMNNO    
               AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
               AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/   
             WHERE A.VLD_YN = 'Y'    
               AND A.GRP_ORG_C = TRIM(#grp_org_c#) /*grp_org_c*/   
               AND NVL(A.RWA_YN,'N') = 'N' /*위험가중자산여부(신용RWA반영여부)*/ /*sch_rwa_yn*/   
               AND A.LSHP_STSC IN ('02','03') /*손실상태(01:유보손실 02:계류중손실 03:손실확정 04:관리대상외) */ 
               AND A.LSHP_FORM_C IN ('01')/*손실사건형태코드(01 : 재무손실, 02 : 타이밍손실(재무), 03 : 비재무손실, 04 : 유사손실, 05 : 미정, 06 : 관리대상외) */
            /* IF  rgo_in_dsc = '2' 규제내부구분코드 (1:규제, 2:내부) */
            -- AND NVL(A.HPN_OCU_NATCD,'01') = '01' /* 사건발생국가코드 (자회사코드 01:수협은행, 02:미얀마) */
           ) B
        ON A.GRP_ORG_C = B.GRP_ORG_C
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
),
T31 AS (
    SELECT GRP_ORG_C, LSHP_AMNNO, '1' RGO_IN_DSC, '00' SBDR_C
         , LSS_TINM, OCU_BRC, LSHP_STSC
      FROM T2
     GROUP BY GRP_ORG_C, LSHP_AMNNO, LSS_TINM, OCU_BRC, LSHP_STSC   
    HAVING SUM(PY_AM) - SUM(RV_AM) >= TRIM(25000000) /*총손실금액 25,000,000원 이상(규제) */ /*sch_tot_am*/   
),
T32 AS (
    SELECT GRP_ORG_C, LSHP_AMNNO, '2' RGO_IN_DSC, SBDR_C
         , LSS_TINM, OCU_BRC, LSHP_STSC
      FROM T2
     GROUP BY GRP_ORG_C, LSHP_AMNNO, SBDR_C, LSS_TINM, OCU_BRC, LSHP_STSC     
    HAVING SUM(PY_AM) - SUM(RV_AM) >= TRIM(1000000) /*총손실금액 1,000,000원 이상(개별) */ /*sch_tot_am*/   
),
T61 AS (
	SELECT 
       A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C, C.INTG_IDVD_CNM AS SBDR_CNM, A.LSHP_AMNNO, A.LSS_TINM, A.OCU_BRC, A.LSHP_STSC, D.INTG_IDVD_CNM AS LSHP_STSNM, B.ACG_PRC_DT, B.ACC_DSC,B.LSCHG_DTM,
       SUM(CASE WHEN B.RVPY_DSC = '1'  --총회수금액  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'  --총손실금액    
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'   --보험회수금액  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS ISR_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2' AND B.ACC_DSC IN ('3','4')   --총비용  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS COST_PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   --보험전순손실합계  (총손실 - 총회수 + 보험회수)
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     + SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS1_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   --순손실합계  
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS2_RV_AM 
           </data>
		</sql>
 			<sql id="sql12" name="sql12">
				<condition id="con11" name="con11" variable="#sch_rgo_in_dsc#" comparison="eq" value="1" />
				<data id="data12" name="data12">
	FROM T31 A
	INNER JOIN T1 B
        ON A.GRP_ORG_C = B.GRP_ORG_C    
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
       AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
       AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/
     LEFT JOIN TB_OR_OM_CODE C
        ON A.GRP_ORG_C = C.GRP_ORG_C
       AND C.INTG_GRP_C = 'SBDR_C'
       AND A.SBDR_C = C.IDVDC_VAL
     LEFT JOIN TB_OR_OM_CODE D
        ON A.GRP_ORG_C = D.GRP_ORG_C
       AND D.INTG_GRP_C = 'LSHP_STSC'
       AND A.LSHP_STSC = D.IDVDC_VAL   
     WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
       AND A.RGO_IN_DSC = '1'   
       AND A.SBDR_C = '00'
     GROUP BY A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C, A.LSHP_AMNNO, A.LSS_TINM, A.OCU_BRC, A.LSHP_STSC, B.ACG_PRC_DT, B.ACC_DSC , C.INTG_IDVD_CNM, D.INTG_IDVD_CNM, B.LSCHG_DTM)				
				</data>
			</sql>
    		<sql id="sql13" name="sql13">
				<condition id="con11" name="con11" variable="#sch_rgo_in_dsc#" comparison="eq" value="2" />
				<data id="data12" name="data12">
	FROM T32 A
     INNER JOIN T1 B
        ON A.GRP_ORG_C = B.GRP_ORG_C    
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
       AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
       AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/ 
     LEFT JOIN TB_OR_OM_CODE C
        ON A.GRP_ORG_C = C.GRP_ORG_C
       AND C.INTG_GRP_C = 'SBDR_C'
       AND A.SBDR_C = C.IDVDC_VAL
     LEFT JOIN TB_OR_OM_CODE D
        ON A.GRP_ORG_C = D.GRP_ORG_C
       AND D.INTG_GRP_C = 'LSHP_STSC'
       AND A.LSHP_STSC = D.IDVDC_VAL 
     WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
       AND A.RGO_IN_DSC = '2'   
       AND A.SBDR_C = TRIM(#sch_sbdr_c#)  
     GROUP BY A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C, A.LSHP_AMNNO, A.LSS_TINM, A.OCU_BRC, A.LSHP_STSC, B.ACG_PRC_DT, B.ACC_DSC, C.INTG_IDVD_CNM, D.INTG_IDVD_CNM, B.LSCHG_DTM ) 					
				</data>
			</sql>
			<sql id="sql14" name="sql14">
				<data id="data12" name="data12">
SELECT GRP_ORG_C, RGO_IN_DSC, SBDR_C, SBDR_CNM, LSHP_AMNNO, LSS_TINM, OCU_BRC, LSHP_STSC, LSHP_STSNM, ACG_PRC_DT
     , MAX(LSCHG_DTM) LSCHG_DTM
     , SUM(RV_AM) RV_AM
     , SUM(PY_AM) PY_AM
     , SUM(ISR_RV_AM) ISR_RV_AM
     , SUM(COST_PY_AM) COST_PY_AM
     , SUM(GULS1_RV_AM) GULS1_RV_AM
     , SUM(GULS2_RV_AM) GULS2_RV_AM
 FROM T61
 GROUP BY GRP_ORG_C,RGO_IN_DSC,SBDR_C,SBDR_CNM,LSHP_AMNNO,LSS_TINM,OCU_BRC,LSHP_STSC,LSHP_STSNM,ACG_PRC_DT
 ORDER BY LSHP_AMNNO				
				</data>
			</sql>
		    				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010804" name="LC산출" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit03" name="TB_OR_GA_LCDET기존데이터 삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE FROM TB_OR_GA_LCDET
 WHERE GRP_ORG_C = TRIM(#grp_org_c#) AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="LCDET insert" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_LCDET (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LSHP_AMNNO, LSSAM_SQNO, 
   ACC_DSC, LSOC_AM, LSS_ACG_ACCC, RVPY_DSC, 
   ACG_PRC_DT, FIR_INP_DTM, FIR_INPMN_ENO, 
   LSCHG_DTM, LS_WKR_ENO) 
WITH 
T1 AS (
    SELECT *   
      FROM TB_OR_LH_LSAM   
     WHERE VLD_YN = 'Y'    
       AND CRC_CAN_DSC IN ('0','1','2')     /*정정취소구분코드(0 : 정상, 1 : 정정, 2 : 취소, 3 : 원인거래정정, 4 : 원인거래취소)*/ 
),
T2 AS (
    SELECT CASE WHEN A.RVPY_DSC = '1'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS RV_AM    
         , CASE WHEN A.RVPY_DSC = '2'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS PY_AM    
         , A.*     
      FROM T1 A
     WHERE (A.GRP_ORG_C, A.LSHP_AMNNO) IN (
            SELECT A.GRP_ORG_C, A.LSHP_AMNNO    
              FROM TB_OR_LM_LSHP A    
             INNER JOIN T1 B    
                ON A.GRP_ORG_C = B.GRP_ORG_C    
               AND A.LSHP_AMNNO = B.LSHP_AMNNO    
               AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
               AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/   
             WHERE A.VLD_YN = 'Y'    
               AND A.GRP_ORG_C = TRIM(#grp_org_c#) /*grp_org_c*/   
               AND NVL(A.RWA_YN,'N') = 'N' /*위험가중자산여부(신용RWA반영여부)*/ /*sch_rwa_yn*/   
               AND A.LSHP_STSC IN ('02','03') /*손실상태(01:유보손실 02:계류중손실 03:손실확정 04:관리대상외) */ 
               AND A.LSHP_FORM_C IN ('01')/*손실사건형태코드(01 : 재무손실, 02 : 타이밍손실(재무), 03 : 비재무손실, 04 : 유사손실, 05 : 미정, 06 : 관리대상외) */
            /* IF  rgo_in_dsc = '2' 규제내부구분코드 (1:규제, 2:내부) */
               AND NVL(A.HPN_OCU_NATCD,'01') = '01' /* 사건발생국가코드 (자회사코드 01:수협은행, 02:미얀마) */
           )
),
T3 AS (
    SELECT GRP_ORG_C, LSHP_AMNNO
      FROM T2
     GROUP BY GRP_ORG_C, LSHP_AMNNO    
    HAVING SUM(PY_AM) - SUM(RV_AM) >= TRIM(1000000) /*총손실금액 x이상*/ /*sch_tot_am*/   
)
SELECT 
   A.GRP_ORG_C, TRIM(#sch_bas_ym#) BAS_YM, '2' RGO_IN_DSC, 
   '01' SBDR_C, A.LSHP_AMNNO, A.LSSAM_SQNO, 
   A.ACC_DSC, A.LSOC_AM, A.LSS_ACG_ACCC, RVPY_DSC, 
   A.ACG_PRC_DT, SYSTIMESTAMP FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, 
   SYSTIMESTAMP LSCHG_DTM, 'SYSTEM' LS_WKR_ENO 
  FROM T1 A
 INNER JOIN T3 B
    ON A.GRP_ORG_C = B.GRP_ORG_C    
   AND A.LSHP_AMNNO = B.LSHP_AMNNO
 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
   AND A.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
   AND A.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/					
					</data>
				</sql>
			</unit>
			<unit id="unit03" name="TB_OR_GA_LCSUMM기존데이터 삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE FROM TB_OR_GA_LCSUMM
 WHERE GRP_ORG_C = TRIM(#grp_org_c#) AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="TB_OR_GA_LCSUMM insert" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_LCSUMM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, LSHP_AMNNO, OCU_BRC, 
   LSHP_STSC, FIR_INP_DTM, FIR_INPMN_ENO, 
   LSCHG_DTM, LS_WKR_ENO) 
WITH 
T1 AS (
    SELECT *   
      FROM TB_OR_LH_LSAM   
     WHERE VLD_YN = 'Y'    
       AND CRC_CAN_DSC IN ('0','1','2')     /*정정취소구분코드(0 : 정상, 1 : 정정, 2 : 취소, 3 : 원인거래정정, 4 : 원인거래취소)*/ 
),
T2 AS (
    SELECT CASE WHEN A.RVPY_DSC = '1'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS RV_AM    
         , CASE WHEN A.RVPY_DSC = '2'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS PY_AM    
         , A.*     
      FROM T1 A
     WHERE (A.GRP_ORG_C, A.LSHP_AMNNO) IN (
            SELECT A.GRP_ORG_C, A.LSHP_AMNNO    
              FROM TB_OR_LM_LSHP A    
             INNER JOIN T1 B    
                ON A.GRP_ORG_C = B.GRP_ORG_C    
               AND A.LSHP_AMNNO = B.LSHP_AMNNO    
               AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
               AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/   
             WHERE A.VLD_YN = 'Y'    
               AND A.GRP_ORG_C = TRIM(#grp_org_c#) /*grp_org_c*/   
               AND NVL(A.RWA_YN,'N') = 'N' /*위험가중자산여부(신용RWA반영여부)*/ /*sch_rwa_yn*/   
               AND A.LSHP_STSC IN ('02','03') /*손실상태(01:유보손실 02:계류중손실 03:손실확정 04:관리대상외) */ 
               AND A.LSHP_FORM_C IN ('01')/*손실사건형태코드(01 : 재무손실, 02 : 타이밍손실(재무), 03 : 비재무손실, 04 : 유사손실, 05 : 미정, 06 : 관리대상외) */
            /* IF  rgo_in_dsc = '2' 규제내부구분코드 (1:규제, 2:내부) */
               AND NVL(A.HPN_OCU_NATCD,'01') = '01' /* 사건발생국가코드 (자회사코드 01:수협은행, 02:미얀마) */
           )
),
T3 AS (
    SELECT GRP_ORG_C, LSHP_AMNNO
      FROM T2
     GROUP BY GRP_ORG_C, LSHP_AMNNO    
    HAVING SUM(PY_AM) - SUM(RV_AM) >= TRIM(1000000) /*총손실금액 x이상*/ /*sch_tot_am*/   
)
SELECT 
   A.GRP_ORG_C, TRIM(#sch_bas_ym#) BAS_YM, '2' RGO_IN_DSC, 
   '01' SBDR_C, A.LSHP_AMNNO, OCU_BRC, 
   LSHP_STSC, SYSTIMESTAMP FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, 
   SYSTIMESTAMP LSCHG_DTM, 'SYSTEM' LS_WKR_ENO 
  FROM TB_OR_LM_LSHP A
 INNER JOIN T3 B
    ON A.GRP_ORG_C = B.GRP_ORG_C    
   AND A.LSHP_AMNNO = B.LSHP_AMNNO
 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
					</data>
				</sql>
			</unit>
			<unit id="unit03" name="TB_OR_GA_MSRELM기존데이터 삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE FROM TB_OR_GA_MSRELM
 WHERE GRP_ORG_C = TRIM(#grp_org_c#) AND BAS_YM = TRIM(#sch_bas_ym#) AND MSR_ELM_DSCD LIKE '%60%'
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="E601" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
 INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
WITH 
T1 AS (
    SELECT *   
      FROM TB_OR_LH_LSAM   
     WHERE VLD_YN = 'Y'    
       AND CRC_CAN_DSC IN ('0','1','2')     /*정정취소구분코드(0 : 정상, 1 : 정정, 2 : 취소, 3 : 원인거래정정, 4 : 원인거래취소)*/ 
),
T2 AS (
    SELECT CASE WHEN A.RVPY_DSC = '1'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS RV_AM    
         , CASE WHEN A.RVPY_DSC = '2'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS PY_AM 
         , B.SBDR_C    
         , A.*     
      FROM T1 A
     INNER JOIN (
            SELECT A.GRP_ORG_C, A.LSHP_AMNNO, NVL(A.HPN_OCU_NATCD,'01') SBDR_C
              FROM TB_OR_LM_LSHP A    
             INNER JOIN T1 B    
                ON A.GRP_ORG_C = B.GRP_ORG_C    
               AND A.LSHP_AMNNO = B.LSHP_AMNNO    
               AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
               AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/   
             WHERE A.VLD_YN = 'Y'    
               AND A.GRP_ORG_C = TRIM(#grp_org_c#) /*grp_org_c*/   
               AND NVL(A.RWA_YN,'N') = 'N' /*위험가중자산여부(신용RWA반영여부)*/ /*sch_rwa_yn*/   
               AND A.LSHP_STSC IN ('02','03') /*손실상태(01:유보손실 02:계류중손실 03:손실확정 04:관리대상외) */ 
               AND A.LSHP_FORM_C IN ('01')/*손실사건형태코드(01 : 재무손실, 02 : 타이밍손실(재무), 03 : 비재무손실, 04 : 유사손실, 05 : 미정, 06 : 관리대상외) */
            /* IF  rgo_in_dsc = '2' 규제내부구분코드 (1:규제, 2:내부) */
            -- AND NVL(A.HPN_OCU_NATCD,'01') = '01' /* 사건발생국가코드 (자회사코드 01:수협은행, 02:미얀마) */
           ) B
        ON A.GRP_ORG_C = B.GRP_ORG_C
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
),
T31 AS (
    SELECT GRP_ORG_C, LSHP_AMNNO, '1' RGO_IN_DSC, '00' SBDR_C
      FROM T2
     GROUP BY GRP_ORG_C, LSHP_AMNNO   
    HAVING SUM(PY_AM) - SUM(RV_AM) >= TRIM(25000000) /*총손실금액 25,000,000원 이상(규제) */ /*sch_tot_am*/   
),
T32 AS (
    SELECT GRP_ORG_C, LSHP_AMNNO, '2' RGO_IN_DSC, SBDR_C
      FROM T2
     GROUP BY GRP_ORG_C, LSHP_AMNNO, SBDR_C     
    HAVING SUM(PY_AM) - SUM(RV_AM) >= TRIM(1000000) /*총손실금액 1,000,000원 이상(개별) */ /*sch_tot_am*/   
),
/*
ACC_DSC
1 : 손실발생금액
2 : 보험회수금액
3 : 소송비용 및 소송회수
4 : 기타비용 및 기타회수
*/
T51 AS (
    SELECT 
       A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C,
       SUM(CASE WHEN B.RVPY_DSC = '1'  --총회수금액  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'  --총손실금액    
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'   --보험회수금액  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS ISR_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2' AND B.ACC_DSC IN ('3','4')   --총비용  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS COST_PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   --보험전순손실합계  (총손실 - 총회수 + 보험회수)
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     + SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS1_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   --순손실합계  
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS2_RV_AM 
      FROM T31 A
     INNER JOIN T1 B
        ON A.GRP_ORG_C = B.GRP_ORG_C    
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
       AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
       AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/   
     GROUP BY A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C   
),
T52 AS (
    SELECT 
       A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C,
       SUM(CASE WHEN B.RVPY_DSC = '1'    
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'    
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'   --보험회수금액  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS ISR_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2' AND B.ACC_DSC IN ('3','4')   --총비용  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS COST_PY_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   --보험전순손실합계  (총손실 - 총회수 + 보험회수)
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     + SUM(CASE WHEN B.RVPY_DSC = '1' AND B.ACC_DSC = '2'  
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS1_RV_AM    
     , SUM(CASE WHEN B.RVPY_DSC = '2'   --순손실합계  
                THEN B.LSOC_AM    
                ELSE 0    
           END)   
     - SUM(CASE WHEN B.RVPY_DSC = '1'     
                THEN B.LSOC_AM    
                ELSE 0    
           END) AS GULS2_RV_AM 
      FROM T32 A
     INNER JOIN T1 B
        ON A.GRP_ORG_C = B.GRP_ORG_C    
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
       AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-119),'YYYYMMDD') /*sch_bas_ym*/   
       AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1)-1,'YYYYMMDD') /*sch_bas_ym*/   
     GROUP BY A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C   
)
SELECT A.GRP_ORG_C, TRIM(#sch_bas_ym#) AS BAS_YM, A.RGO_IN_DSC, A.SBDR_C, 'E601' AS MSR_ELM_DSCD
     , NVL(SUM(B.GULS2_RV_AM),0) MSR_AM -- 순손실
     , SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM T31 A
 INNER JOIN T51 B
    ON A.GRP_ORG_C = B.GRP_ORG_C
   AND A.RGO_IN_DSC = B.RGO_IN_DSC
   AND A.SBDR_C = B.SBDR_C
 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
   AND A.RGO_IN_DSC = '1'   
   AND A.SBDR_C = '00'   
 GROUP BY A.GRP_ORG_C, A.RGO_IN_DSC, A.SBDR_C
UNION
SELECT A.GRP_ORG_C, TRIM(#sch_bas_ym#) AS BAS_YM, '2' AS RGO_IN_DSC, A.IDVDC_VAL SBDR_C, 'E601' AS MSR_ELM_DSCD
     , NVL(SUM(C.GULS2_RV_AM),0) MSR_AM -- 순손실
     , SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_OM_CODE A
  LEFT JOIN T32 B
    ON A.GRP_ORG_C = B.GRP_ORG_C
   AND A.IDVDC_VAL = B.SBDR_C
   AND B.RGO_IN_DSC = '2'
  LEFT JOIN T52 C
    ON B.GRP_ORG_C = C.GRP_ORG_C
   AND B.RGO_IN_DSC = C.RGO_IN_DSC
   AND B.SBDR_C = C.SBDR_C
 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
   AND A.INTG_GRP_C = 'SBDR_C'   
 GROUP BY A.GRP_ORG_C, B.RGO_IN_DSC, A.IDVDC_VAL
					</data>
				</sql>
			</unit>
			<unit id="unit99" name="E602" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E602:연평균 순손실금액(자본량산출용:년도별)
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E602' MSR_ELM_DSCD,
   CASE WHEN TO_NUMBER(SUBSTR(BAS_YM,1,4)) - 2012 &lt; 10 
         THEN MSR_AM/(TO_NUMBER(SUBSTR(BAS_YM,1,4)) - 2012)
         ELSE MSR_AM/10
   END MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD = 'E601'
   AND GRP_ORG_C = TRIM(#grp_org_c#)
   AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>
				</sql>
			</unit>
			<unit id="unit99" name="I602" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- I602:연평균 순손실금액(내부한도용:년도별)
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'I602' MSR_ELM_DSCD,
   CASE WHEN TO_NUMBER(SUBSTR(BAS_YM,1,4)) - 2013 &lt; 10 
         THEN MSR_AM/(TO_NUMBER(SUBSTR(BAS_YM,1,4)) -2013 + (TO_NUMBER(SUBSTR(BAS_YM,5,2))/12))
         ELSE MSR_AM/10
   END MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD = 'E601'
   AND GRP_ORG_C = TRIM(#grp_org_c#)
   AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>
				</sql>
			</unit>
			<unit id="unit99" name="E600" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E600:LC(자본량산출용:년도별)
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E600' MSR_ELM_DSCD,
   MSR_AM * 15 MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD = 'E602'
   AND GRP_ORG_C = TRIM(#grp_org_c#)
   AND BAS_YM = TRIM(#sch_bas_ym#)
  ORDER BY GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C
					</data>
				</sql>
			</unit>
			<unit id="unit99" name="I600" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- I600:LC(내부한도용:분기별)
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'I600' MSR_ELM_DSCD,
   MSR_AM * 15 MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD = 'I602'
   AND GRP_ORG_C = TRIM(#grp_org_c#)
   AND BAS_YM = TRIM(#sch_bas_ym#)
  ORDER BY GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C
					</data>
				</sql>
			</unit>
			<unit id="unit03" name="ILM기존데이터 삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD IN ('E700') AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="ILM 계산" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E700:ILM
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E700' MSR_ELM_DSCD,
   TRUNC(LN(EXP(1) - 1 + POWER(CASE WHEN LC = 0 THEN 0 ELSE (BIC / LC) END,0.8)),11) AS MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM (
    SELECT GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C,
           SUM(CASE WHEN MSR_ELM_DSCD = 'E500' THEN MSR_AM ELSE 0 END) BIC,
           SUM(CASE WHEN MSR_ELM_DSCD = 'E600' THEN MSR_AM ELSE 0 END) LC
      FROM TB_OR_GA_MSRELM
     WHERE MSR_ELM_DSCD IN ('E500','E600')
     GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C
       )
  WHERE BAS_YM = TRIM(#sch_bas_ym#)
					</data>
				</sql>
			</unit>
			<unit id="unit03" name="ORC기존데이터 삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD IN ('E800') AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="ORC 계산" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E800:ORC
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E800' MSR_ELM_DSCD,
   BIC * ILM AS MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM (
    SELECT GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C,
           SUM(CASE WHEN MSR_ELM_DSCD = 'E500' THEN MSR_AM ELSE 0 END) BIC,
           SUM(CASE WHEN MSR_ELM_DSCD = 'E700' THEN MSR_AM ELSE 0 END) ILM
      FROM TB_OR_GA_MSRELM
     WHERE MSR_ELM_DSCD IN ('E500','E700')
     GROUP BY  GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C
       )
  WHERE BAS_YM = TRIM(#sch_bas_ym#)
					</data>
				</sql>
			</unit>
			<unit id="unit03" name="Op.RWA기존데이터 삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD IN ('E900') AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="Op.RWA 계산" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
 INSERT INTO TB_OR_GA_MSRELM (
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, 
   SBDR_C, MSR_ELM_DSCD, MSR_AM, 
   FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, 
   LS_WKR_ENO) 
SELECT -- E900:Op.RWA
   GRP_ORG_C, BAS_YM, RGO_IN_DSC, SBDR_C, 'E900' MSR_ELM_DSCD,
   MSR_AM * 12.5 MSR_AM,
   SYSDATE FIR_INP_DTM, 'SYSTEM' FIR_INPMN_ENO, SYSDATE LSCHG_DTM, 
   'SYSTEM' LS_WKR_ENO
  FROM TB_OR_GA_MSRELM
 WHERE MSR_ELM_DSCD = 'E800'
   AND BAS_YM = TRIM(#sch_bas_ym#)
					</data>
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR010901" name="분기별자본량 산출결과 조회" forward="/msr/ORMR0109" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 									
	SUBSTR(BAS_YM,1,4) AS BAS_YY  	
 FROM TB_OR_GA_MSRELM	
 WHERE GRP_ORG_C=TRIM(#grp_org_c#) 				
 GROUP BY SUBSTR(BAS_YM,1,4) 			
 ORDER BY SUBSTR(BAS_YM,1,4) DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR010902" name="분기별자본량 산출결과 조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					WITH BAS_TB AS (
				    SELECT A.MSR_ELM_DSCD
                         , DECODE(SUBSTR(A.MSR_ELM_DSCD,1,3),'E10','ILDC','E20','SC','E30','FC','E40','BI','E50','BIC','E60','LC','E70','ILM','E80','ORC','E90','Op.RWA') GUBUN
                         , A.MSR_AM MSR_AM3
				    FROM TB_OR_GA_MSRELM A
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  
				  AND A.BAS_YM =TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
				  AND A.SBDR_C = TRIM('00')
				  AND A.RGO_IN_DSC = TRIM('1')
				GROUP BY A.MSR_ELM_DSCD, A.MSR_AM
				),
				PREVIOUS_YEAR_TB AS (
				    SELECT A.MSR_ELM_DSCD, A.MSR_AM MSR_AM2
				    FROM TB_OR_GA_MSRELM A
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  
				  AND A.BAS_YM =TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
				  AND A.SBDR_C = TRIM(#grp_org_c#)
				  AND A.RGO_IN_DSC = TRIM('2')
				GROUP BY A.MSR_ELM_DSCD, A.MSR_AM
				),
				TWO_PREVIOUS_YEAR_TB AS (
				    SELECT A.MSR_ELM_DSCD, A.MSR_AM MSR_AM1
				    FROM TB_OR_GA_MSRELM A
				     WHERE A.GRP_ORG_C= TRIM(#grp_org_c#)
				  
				  AND A.BAS_YM =TRIM(#sch_bas_yy#)||TRIM(#sch_bas_qq#)
				  AND A.SBDR_C = TRIM('02')
				  AND A.RGO_IN_DSC = TRIM('2')
				GROUP BY A.MSR_ELM_DSCD, A.MSR_AM
				)
				SELECT A.MSR_ELM_DSCD 
                      ,A.GUBUN
                      ,D.INTG_IDVD_CNM DIVISION
                      ,DECODE(A.MSR_ELM_DSCD,'E700',TO_CHAR(A.MSR_AM3,'0.9999'),TO_CHAR(A.MSR_AM3, 'FM999,999,999,999,999,999')) MSR_AM3
                      ,DECODE(A.MSR_ELM_DSCD,'E700',TO_CHAR(A.MSR_AM3,'0.9999'),TO_CHAR(B.MSR_AM2, 'FM999,999,999,999,999,999')) MSR_AM2
				      ,DECODE(A.MSR_ELM_DSCD,'E700',TO_CHAR(A.MSR_AM3,'0.9999'),TO_CHAR(C.MSR_AM1, 'FM999,999,999,999,999,999')) MSR_AM1
				 FROM BAS_TB A
				     ,PREVIOUS_YEAR_TB B
				     ,TWO_PREVIOUS_YEAR_TB C
				     ,TB_OR_OM_CODE D
				WHERE A.MSR_ELM_DSCD = B.MSR_ELM_DSCD (+)
				  AND A.MSR_ELM_DSCD = C.MSR_ELM_DSCD (+)
				  AND D.INTG_GRP_C = 'MSR_ELM_DSCD'
				  AND D.IDVDC_VAL = A.MSR_ELM_DSCD
				  ORDER BY A.MSR_ELM_DSCD
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR011001" name="신표준 측정값 산출 가이드라인" forward="/msr/ORMR0110" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
	</process>
	
	<process id="ORMR011101" name="자본량 산출 내역 조회및 모니터링" forward="/msr/ORMR0111" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 									
	SUBSTR(BAS_YM,1,4) AS BAS_YY  	
 FROM TB_OR_GA_FNASTM_UPLOAD  		
 WHERE GRP_ORG_C=TRIM(#grp_org_c#) 				
 GROUP BY SUBSTR(BAS_YM,1,4) 			
 ORDER BY SUBSTR(BAS_YM,1,4) DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011102" name="자본량 산출 내역 조회및 모니터링" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH BAS_TB AS (
SELECT A.MSR_ELM_DSCD, B.INTG_GRP_CNM, A.MSR_AM, A.BAS_YM
 FROM TB_OR_GA_MSRELM A
    ,TB_OR_OM_CODE B
    WHERE A.GRP_ORG_C = B.GRP_ORG_C
    AND B.INTG_GRP_C = 'MSR_ELM_DSCD'
    AND A.BAS_YM &lt;= TRIM(#sch_bas_ym#)
    AND A.BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-42),'YYYYMM')
    AND B.IDVDC_VAL = A.MSR_ELM_DSCD
    AND B.IDVDC_VAL LIKE '%00'
    AND SBDR_C = '00' 
 ORDER BY BAS_YM DESC,MSR_ELM_DSCD ASC
),
T1 AS (SELECT  MSR_ELM_DSCD
    , INTG_GRP_CNM
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM'),MSR_AM,0)) C0
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYYMM'),MSR_AM,0)) C1
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-33),'YYYYMM'),MSR_AM,0)) C2
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-30),'YYYYMM'),MSR_AM,0)) C3
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-27),'YYYYMM'),MSR_AM,0)) C4
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM'),MSR_AM,0)) C5
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-21),'YYYYMM'),MSR_AM,0)) C6
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-18),'YYYYMM'),MSR_AM,0)) C7
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-15),'YYYYMM'),MSR_AM,0)) C8
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM'),MSR_AM,0)) C9
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-9),'YYYYMM'),MSR_AM,0)) C10
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-6),'YYYYMM'),MSR_AM,0)) C11
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-3),'YYYYMM'),MSR_AM,0)) C12
    , MAX(DECODE(BAS_YM,#sch_bas_ym#,MSR_AM,0)) C13
FROM BAS_TB
GROUP BY MSR_ELM_DSCD, INTG_GRP_CNM
)
SELECT MSR_ELM_DSCD
    , INTG_GRP_CNM
    , DECODE(MSR_ELM_DSCD,'E700', C1, ROUND(C1)) C1
    , DECODE(MSR_ELM_DSCD,'E700', C2, ROUND(C2)) C2
    , DECODE(MSR_ELM_DSCD,'E700', C3, ROUND(C3)) C3 
    , DECODE(MSR_ELM_DSCD,'E700', C4, ROUND(C4)) C4 
    , DECODE(MSR_ELM_DSCD,'E700', C5, ROUND(C5)) C5 
    , DECODE(MSR_ELM_DSCD,'E700', C6, ROUND(C6)) C6 
    , DECODE(MSR_ELM_DSCD,'E700', C7, ROUND(C7)) C7 
    , DECODE(MSR_ELM_DSCD,'E700', C8, ROUND(C8)) C8 
    , DECODE(MSR_ELM_DSCD,'E700', C9, ROUND(C9)) C9
    , DECODE(MSR_ELM_DSCD,'E700', C10, ROUND(C10)) C10
    , DECODE(MSR_ELM_DSCD,'E700', C11, ROUND(C11)) C11
    , DECODE(MSR_ELM_DSCD,'E700', C12, ROUND(C12)) C12
    , DECODE(MSR_ELM_DSCD,'E700', C13, ROUND(C13)) C13
FROM T1
UNION ALL
SELECT 'E990' MSR_ELM_DSCD
    ,'Op.RWA 증감률'
    , ROUND(DECODE(C0, 0, 0, (C1/C0) * 100 - 100),2)
    , ROUND(DECODE(C1, 0, 0, (C2/C1) * 100 - 100),2) C2
    , ROUND(DECODE(C2, 0, 0, (C3/C2) * 100 - 100),2) C3
    , ROUND(DECODE(C3, 0, 0, (C4/C3) * 100 - 100),2) C4
    , ROUND(DECODE(C4, 0, 0, (C5/C4) * 100 - 100),2) C5
    , ROUND(DECODE(C5, 0, 0, (C6/C5) * 100 - 100),2) C6
    , ROUND(DECODE(C6, 0, 0, (C7/C6) * 100 - 100),2) C7
    , ROUND(DECODE(C7, 0, 0, (C8/C7) * 100 - 100),2) C8
    , ROUND(DECODE(C8, 0, 0, (C9/C8) * 100 - 100),2) C9
    , ROUND(DECODE(C9, 0, 0, (C10/C9) * 100 - 100),2) C10
    , ROUND(DECODE(C10, 0, 0, (C11/C10) * 100 - 100),2) C11
    , ROUND(DECODE(C11, 0, 0, (C12/C11) * 100 - 100),2) C12
    , ROUND(DECODE(C12, 0, 0, (C13/C12) * 100 - 100),2) C13
FROM T1 
    WHERE MSR_ELM_DSCD = 'E900'
ORDER BY MSR_ELM_DSCD


					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011103" name="자본량 산출 내역 조회및 모니터링" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH BAS_TB AS (
SELECT A.MSR_ELM_DSCD, B.INTG_GRP_CNM, A.RGO_IN_DSC, A.SBDR_C ,A.MSR_AM, A.BAS_YM
 FROM TB_OR_GA_MSRELM A
    ,TB_OR_OM_CODE B
    WHERE A.GRP_ORG_C = #grp_org_c#
    AND A.GRP_ORG_C = B.GRP_ORG_C
    AND B.INTG_GRP_C = 'MSR_ELM_DSCD'
    AND A.BAS_YM &lt;= TRIM(#sch_bas_ym#)
    AND A.BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-42),'YYYYMM')
    AND B.IDVDC_VAL = A.MSR_ELM_DSCD
    AND B.IDVDC_VAL LIKE '%00'
    AND A.MSR_ELM_DSCD = 'E800'
    AND A.RGO_IN_DSC = '2'
 ORDER BY BAS_YM DESC,MSR_ELM_DSCD ASC
),
T1 AS (SELECT  MSR_ELM_DSCD
    , INTG_GRP_CNM
    , RGO_IN_DSC
    , SBDR_C
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM'),MSR_AM,0)) C0
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYYMM'),MSR_AM,0)) C1
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-33),'YYYYMM'),MSR_AM,0)) C2
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-30),'YYYYMM'),MSR_AM,0)) C3
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-27),'YYYYMM'),MSR_AM,0)) C4
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM'),MSR_AM,0)) C5
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-21),'YYYYMM'),MSR_AM,0)) C6
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-18),'YYYYMM'),MSR_AM,0)) C7
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-15),'YYYYMM'),MSR_AM,0)) C8
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM'),MSR_AM,0)) C9
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-9),'YYYYMM'),MSR_AM,0)) C10
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-6),'YYYYMM'),MSR_AM,0)) C11
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-3),'YYYYMM'),MSR_AM,0)) C12
    , MAX(DECODE(BAS_YM,#sch_bas_ym#,MSR_AM,0)) C13
FROM BAS_TB
GROUP BY MSR_ELM_DSCD, INTG_GRP_CNM, RGO_IN_DSC, SBDR_C
),
GRP_TB AS (
SELECT A.MSR_ELM_DSCD, B.INTG_GRP_CNM, A.RGO_IN_DSC, SUM(A.MSR_AM) MSR_AM, A.BAS_YM
 FROM TB_OR_GA_MSRELM A
    ,TB_OR_OM_CODE B
    WHERE A.GRP_ORG_C = #grp_org_c#
    AND A.GRP_ORG_C = B.GRP_ORG_C
    AND B.INTG_GRP_C = 'MSR_ELM_DSCD'
    AND A.BAS_YM &lt;= TRIM(#sch_bas_ym#)
    AND A.BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-42),'YYYYMM')
    AND B.IDVDC_VAL = A.MSR_ELM_DSCD
    AND B.IDVDC_VAL LIKE '%00'
    AND A.MSR_ELM_DSCD = 'E800'
    AND A.RGO_IN_DSC = '2'
 GROUP BY A.MSR_ELM_DSCD, B.INTG_GRP_CNM, A.RGO_IN_DSC, A.BAS_YM
 ORDER BY BAS_YM DESC,MSR_ELM_DSCD ASC
),
T2 AS (SELECT  MSR_ELM_DSCD
    , INTG_GRP_CNM
    , '1' RGO_IN_DSC
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM'),MSR_AM,0)) C0
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-36),'YYYYMM'),MSR_AM,0)) C1
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-33),'YYYYMM'),MSR_AM,0)) C2
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-30),'YYYYMM'),MSR_AM,0)) C3
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-27),'YYYYMM'),MSR_AM,0)) C4
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-24),'YYYYMM'),MSR_AM,0)) C5
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-21),'YYYYMM'),MSR_AM,0)) C6
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-18),'YYYYMM'),MSR_AM,0)) C7
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-15),'YYYYMM'),MSR_AM,0)) C8
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-12),'YYYYMM'),MSR_AM,0)) C9
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-9),'YYYYMM'),MSR_AM,0)) C10
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-6),'YYYYMM'),MSR_AM,0)) C11
    , MAX(DECODE(BAS_YM,TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-3),'YYYYMM'),MSR_AM,0)) C12
    , MAX(DECODE(BAS_YM,#sch_bas_ym#,MSR_AM,0)) C13
FROM GRP_TB
GROUP BY MSR_ELM_DSCD, INTG_GRP_CNM, RGO_IN_DSC
)
SELECT MSR_ELM_DSCD
    , '별도 ORC' INTG_GRP_CNM
    , CASE 
        WHEN SBDR_C = '01' THEN '은행 별도'
        WHEN SBDR_C = '02' THEN '미얀마 별도'
        WHEN SBDR_C = '00' THEN '은행 및 미얀마 통합'
        END AS GUBUN
    , RGO_IN_DSC
    , SBDR_C 
    , DECODE(MSR_ELM_DSCD,'E700', C1, ROUND(C1)) C1
    , DECODE(MSR_ELM_DSCD,'E700', C2, ROUND(C2)) C2
    , DECODE(MSR_ELM_DSCD,'E700', C3, ROUND(C3)) C3 
    , DECODE(MSR_ELM_DSCD,'E700', C4, ROUND(C4)) C4 
    , DECODE(MSR_ELM_DSCD,'E700', C5, ROUND(C5)) C5 
    , DECODE(MSR_ELM_DSCD,'E700', C6, ROUND(C6)) C6 
    , DECODE(MSR_ELM_DSCD,'E700', C7, ROUND(C7)) C7 
    , DECODE(MSR_ELM_DSCD,'E700', C8, ROUND(C8)) C8 
    , DECODE(MSR_ELM_DSCD,'E700', C9, ROUND(C9)) C9
    , DECODE(MSR_ELM_DSCD,'E700', C10, ROUND(C10)) C10
    , DECODE(MSR_ELM_DSCD,'E700', C11, ROUND(C11)) C11
    , DECODE(MSR_ELM_DSCD,'E700', C12, ROUND(C12)) C12
    , DECODE(MSR_ELM_DSCD,'E700', C13, ROUND(C13)) C13
FROM T1
UNION ALL
SELECT 'E990' MSR_ELM_DSCD
    ,'ORC 증감률'
    , CASE 
        WHEN SBDR_C = '01' THEN '은행 별도'
        WHEN SBDR_C = '02' THEN '미얀마 별도'
        WHEN SBDR_C = '00' THEN '은행 및 미얀마 통합'
        END AS GUBUN
    , RGO_IN_DSC
    , SBDR_C
    , ROUND(DECODE(C0, 0, 0, (C1/C0) * 100 - 100),2)
    , ROUND(DECODE(C1, 0, 0, (C2/C1) * 100 - 100),2) C2
    , ROUND(DECODE(C2, 0, 0, (C3/C2) * 100 - 100),2) C3
    , ROUND(DECODE(C3, 0, 0, (C4/C3) * 100 - 100),2) C4
    , ROUND(DECODE(C4, 0, 0, (C5/C4) * 100 - 100),2) C5
    , ROUND(DECODE(C5, 0, 0, (C6/C5) * 100 - 100),2) C6
    , ROUND(DECODE(C6, 0, 0, (C7/C6) * 100 - 100),2) C7
    , ROUND(DECODE(C7, 0, 0, (C8/C7) * 100 - 100),2) C8
    , ROUND(DECODE(C8, 0, 0, (C9/C8) * 100 - 100),2) C9
    , ROUND(DECODE(C9, 0, 0, (C10/C9) * 100 - 100),2) C10
    , ROUND(DECODE(C10, 0, 0, (C11/C10) * 100 - 100),2) C11
    , ROUND(DECODE(C11, 0, 0, (C12/C11) * 100 - 100),2) C12
    , ROUND(DECODE(C12, 0, 0, (C13/C12) * 100 - 100),2) C13
FROM T1 
    WHERE MSR_ELM_DSCD = 'E800'
UNION ALL
SELECT
'E999'  AS MSR_ELM_DSCD
,CASE 
    WHEN CASE_DSC = 1 THEN '한도 소진율 (99% + Buffer)' 
    WHEN CASE_DSC = 2 THEN '한도 소진율 (95% + Buffer)'
    WHEN CASE_DSC = 3 THEN '한도 소진율 (99%)'
    WHEN CASE_DSC = 4 THEN '한도 소진율 (99%)'
    END AS INTG_GRP_CNM
, CASE 
        WHEN SBDR_C = '01' THEN '은행 별도'
        WHEN SBDR_C = '02' THEN '미얀마 별도'
        WHEN SBDR_C = '00' THEN '은행 및 미얀마 통합'
        END AS GUBUN
, RGO_IN_DSC
, SBDR_C,0,0,0,0,0,0,0,0,0,0,0,0
,DECODE(LMT_RTO,NULL,0,LMT_RTO)
FROM (SELECT SBDR_C, LMT_RTO, RGO_IN_DSC, CASE_DSC FROM TB_OR_GA_LMT_EXRAT
WHERE GRP_ORG_C = #grp_org_c#
  AND BASYY = SUBSTR(#sch_bas_ym#,1,4)
  AND BAS_MM = SUBSTR(#sch_bas_ym#,5,2)
  )
UNION ALL
SELECT
'E999' AS MSR_ELM_DSCD
,'한도 소진율'
,'은행 별도'
, '2' RGO_IN_DSC
,'01' SBDR_C,0,0,0,0,0,0,0,0,0,0,0,0,0
FROM DUAL
WHERE NOT EXISTS( SELECT
'E999' AS MSR_ELM_DSCD
,CASE 
    WHEN CASE_DSC = 1 THEN '한도 소진율 (99% + Buffer)' 
    WHEN CASE_DSC = 2 THEN '한도 소진율 (95% + Buffer)'
    WHEN CASE_DSC = 3 THEN '한도 소진율 (99%)'
    WHEN CASE_DSC = 4 THEN '한도 소진율 (99%)'
    
    END AS INTG_GRP_CNM
, RGO_IN_DSC
, SBDR_C,0,0,0,0,0,0,0,0,0,0,0,0
,DECODE(LMT_RTO,NULL,0,LMT_RTO)
FROM (SELECT SBDR_C, LMT_RTO, RGO_IN_DSC, CASE_DSC FROM TB_OR_GA_LMT_EXRAT
WHERE GRP_ORG_C = #grp_org_c#
  AND BASYY = SUBSTR(#sch_bas_ym#,1,4)
  AND BAS_MM = SUBSTR(#sch_bas_ym#,5,2)
  ))
UNION ALL
SELECT MSR_ELM_DSCD
    , INTG_GRP_CNM
    , '은행 및 미얀마 통합'
    , RGO_IN_DSC
    , '00' SBDR_C 
    , DECODE(MSR_ELM_DSCD,'E700', C1, ROUND(C1)) C1
    , DECODE(MSR_ELM_DSCD,'E700', C2, ROUND(C2)) C2
    , DECODE(MSR_ELM_DSCD,'E700', C3, ROUND(C3)) C3 
    , DECODE(MSR_ELM_DSCD,'E700', C4, ROUND(C4)) C4 
    , DECODE(MSR_ELM_DSCD,'E700', C5, ROUND(C5)) C5 
    , DECODE(MSR_ELM_DSCD,'E700', C6, ROUND(C6)) C6 
    , DECODE(MSR_ELM_DSCD,'E700', C7, ROUND(C7)) C7 
    , DECODE(MSR_ELM_DSCD,'E700', C8, ROUND(C8)) C8 
    , DECODE(MSR_ELM_DSCD,'E700', C9, ROUND(C9)) C9
    , DECODE(MSR_ELM_DSCD,'E700', C10, ROUND(C10)) C10
    , DECODE(MSR_ELM_DSCD,'E700', C11, ROUND(C11)) C11
    , DECODE(MSR_ELM_DSCD,'E700', C12, ROUND(C12)) C12
    , DECODE(MSR_ELM_DSCD,'E700', C13, ROUND(C13)) C13
FROM T2
UNION ALL
SELECT 'E990' MSR_ELM_DSCD
    ,'ORC 증감률'
    , '은행 및 미얀마 통합'
    , RGO_IN_DSC
    , '00'SBDR_C
    , ROUND(DECODE(C0, 0, 0, (C1/C0) * 100 - 100),2)
    , ROUND(DECODE(C1, 0, 0, (C2/C1) * 100 - 100),2) C2
    , ROUND(DECODE(C2, 0, 0, (C3/C2) * 100 - 100),2) C3
    , ROUND(DECODE(C3, 0, 0, (C4/C3) * 100 - 100),2) C4
    , ROUND(DECODE(C4, 0, 0, (C5/C4) * 100 - 100),2) C5
    , ROUND(DECODE(C5, 0, 0, (C6/C5) * 100 - 100),2) C6
    , ROUND(DECODE(C6, 0, 0, (C7/C6) * 100 - 100),2) C7
    , ROUND(DECODE(C7, 0, 0, (C8/C7) * 100 - 100),2) C8
    , ROUND(DECODE(C8, 0, 0, (C9/C8) * 100 - 100),2) C9
    , ROUND(DECODE(C9, 0, 0, (C10/C9) * 100 - 100),2) C10
    , ROUND(DECODE(C10, 0, 0, (C11/C10) * 100 - 100),2) C11
    , ROUND(DECODE(C11, 0, 0, (C12/C11) * 100 - 100),2) C12
    , ROUND(DECODE(C12, 0, 0, (C13/C12) * 100 - 100),2) C13
FROM T2 
    WHERE MSR_ELM_DSCD = 'E800'
UNION ALL
SELECT
'E999' AS MSR_ELM_DSCD
,'한도 소진율'
,'미얀마 별도'
, '2' RGO_IN_DSC
,'02' SBDR_C,0,0,0,0,0,0,0,0,0,0,0,0,0
FROM DUAL
WHERE NOT EXISTS( SELECT
'E999' AS MSR_ELM_DSCD
,CASE 
    WHEN CASE_DSC = 1 THEN '한도 소진율 (99% + Buffer)' 
    WHEN CASE_DSC = 2 THEN '한도 소진율 (95% + Buffer)'
    WHEN CASE_DSC = 3 THEN '한도 소진율 (99%)'
    WHEN CASE_DSC = 4 THEN '한도 소진율 (99%)'
    
    END AS INTG_GRP_CNM
, RGO_IN_DSC
, SBDR_C,0,0,0,0,0,0,0,0,0,0,0,0
,DECODE(LMT_RTO,NULL,0,LMT_RTO)
FROM (SELECT SBDR_C, LMT_RTO, RGO_IN_DSC, CASE_DSC FROM TB_OR_GA_LMT_EXRAT
WHERE GRP_ORG_C = #grp_org_c#
  AND BASYY = SUBSTR(#sch_bas_ym#,1,4)
  AND BAS_MM = SUBSTR(#sch_bas_ym#,5,2)
  ))
UNION ALL
SELECT
'E999' AS MSR_ELM_DSCD
,'한도 소진율'
,'은행 및 미얀마 통합'
, '1' RGO_IN_DSC
,'00' SBDR_C,0,0,0,0,0,0,0,0,0,0,0,0,0
FROM DUAL
WHERE NOT EXISTS( SELECT
'E999' AS MSR_ELM_DSCD
,CASE 
    WHEN CASE_DSC = 1 THEN '한도 소진율 (99% + Buffer)' 
    WHEN CASE_DSC = 2 THEN '한도 소진율 (95% + Buffer)'
    WHEN CASE_DSC = 3 THEN '한도 소진율 (99%)'
    WHEN CASE_DSC = 4 THEN '한도 소진율 (99%)'
    
    END AS INTG_GRP_CNM
, RGO_IN_DSC
, SBDR_C,0,0,0,0,0,0,0,0,0,0,0,0
,DECODE(LMT_RTO,NULL,0,LMT_RTO)
FROM (SELECT SBDR_C, LMT_RTO, RGO_IN_DSC, CASE_DSC FROM TB_OR_GA_LMT_EXRAT
WHERE GRP_ORG_C = #grp_org_c#
  AND BASYY = SUBSTR(#sch_bas_ym#,1,4)
  AND BAS_MM = SUBSTR(#sch_bas_ym#,5,2)
  ))
ORDER BY RGO_IN_DSC DESC,SBDR_C, MSR_ELM_DSCD
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR011104" name="자본량 산출 내역 조회및 모니터링_내부자본 LC,ORC" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH
T1 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , SUM(MSR_AM) GRP_BIC
FROM TB_OR_GA_MSRELM 
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND MSR_ELM_DSCD = 'E500'
  AND RGO_IN_DSC = '2'
  AND BAS_YM &lt;= #sch_bas_ym#
  AND BAS_YM &gt;  TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM') 
GROUP BY GRP_ORG_C, BAS_YM, RGO_IN_DSC
),
T2 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , SUM(MSR_AM) GRP_LC
FROM TB_OR_GA_MSRELM 
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND MSR_ELM_DSCD = 'E600'
  AND RGO_IN_DSC = '2'
  AND BAS_YM &lt;= #sch_bas_ym#
  AND BAS_YM &gt;  TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM') 
GROUP BY GRP_ORG_C, BAS_YM, RGO_IN_DSC
),
T3 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , MSR_AM BNK_BIC
FROM TB_OR_GA_MSRELM 
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND MSR_ELM_DSCD = 'E500'
  AND RGO_IN_DSC = '2'
  AND SBDR_C = '01'
  AND BAS_YM &lt;= #sch_bas_ym#
  AND BAS_YM &gt;  TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM') 
),
T4 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , MSR_AM BNK_LC
FROM TB_OR_GA_MSRELM 
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND MSR_ELM_DSCD = 'E600'
  AND RGO_IN_DSC = '2'
  AND SBDR_C = '01'
  AND BAS_YM &lt;= #sch_bas_ym#
  AND BAS_YM &gt;  TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM') 
),
T5 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , MSR_AM MYN_BIC
FROM TB_OR_GA_MSRELM 
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND MSR_ELM_DSCD = 'E500'
  AND RGO_IN_DSC = '2'
  AND SBDR_C = '02'
  AND BAS_YM &lt;= #sch_bas_ym#
  AND BAS_YM &gt;  TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM') 
),
T6 AS (
SELECT GRP_ORG_C
    , BAS_YM
    , RGO_IN_DSC
    , MSR_AM MYN_LC
FROM TB_OR_GA_MSRELM 
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND MSR_ELM_DSCD = 'E600'
  AND RGO_IN_DSC = '2'
  AND SBDR_C = '02'
  AND BAS_YM &lt;= #sch_bas_ym#
  AND BAS_YM &gt;  TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-39),'YYYYMM') 
)
SELECT A.GRP_ORG_C
    , A.BAS_YM
    , ROUND(BNK_BIC) BNK_BIC
    , ROUND(BNK_LC) BNK_LC
    , ROUND(MYN_BIC) MYN_BIC
    , ROUND(MYN_LC) MYN_LC
    , ROUND(GRP_BIC) GRP_BIC
    , ROUND(GRP_LC) GRP_LC
FROM T1 A
    , T2 B
    , T3 C
    , T4 D
    , T5 E
    , T6 F
WHERE A.GRP_ORG_C = B.GRP_ORG_C
  AND A.GRP_ORG_C = C.GRP_ORG_C
  AND A.GRP_ORG_C = D.GRP_ORG_C
  AND A.GRP_ORG_C = E.GRP_ORG_C
  AND A.GRP_ORG_C = F.GRP_ORG_C
  AND A.BAS_YM = B.BAS_YM
  AND A.BAS_YM = C.BAS_YM
  AND A.BAS_YM = D.BAS_YM
  AND A.BAS_YM = E.BAS_YM
  AND A.BAS_YM = F.BAS_YM
ORDER BY BAS_YM
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011105" name="전분기 한도소진율" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
SELECT GRP_ORG_C
    , BASYY
    , BAS_MM
    , RGO_IN_DSC
    , SBDR_C
    , LMT_RTO
FROM TB_OR_GA_LMT_EXRAT
WHERE GRP_ORG_C = #grp_org_c#
  AND BASYY||BAS_MM = TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-3),'YYYYMM')
ORDER BY RGO_IN_DSC DESC , SBDR_C
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	
	<process id="ORMR011201" name="내부자본한도설정" forward="/msr/ORMR0112" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))) BAS_YY, DECODE(B.BASYY,'','N','Y') SAVE_YN, A.UPLOAD_SQNO, B.RZT_YN
  FROM TB_OR_GA_MSRRZT A
  LEFT JOIN TB_OR_GA_INLMT B
    ON A.GRP_ORG_C = B.GRP_ORG_C
   AND TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))) = B.BASYY
 WHERE A.GRP_ORG_C = #grp_org_c#
   AND SUBSTR(A.BAS_YM,5,2) = '09'
GROUP BY TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))), DECODE(B.BASYY,'','N','Y') , A.UPLOAD_SQNO, B.RZT_YN
 ORDER BY TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))) DESC
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			
		</group>
	</process>

	<process id="ORMR011202" name="손실 buffer 계산" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="법인" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="손실 금액 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
WITH 
T1 AS (
    SELECT *   
      FROM TB_OR_LH_LSAM   
     WHERE VLD_YN = 'Y'    
       AND CRC_CAN_DSC IN ('0','1','2')      
),
T2 AS ( SELECT CASE WHEN A.RVPY_DSC = '1'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS RV_AM    
         , CASE WHEN A.RVPY_DSC = '2'    
                THEN A.LSOC_AM    
                ELSE 0    
           END AS PY_AM 
         , B.SBDR_C    
         , A.*     
      FROM T1 A
     INNER JOIN (
            SELECT A.GRP_ORG_C, A.LSHP_AMNNO, NVL(A.HPN_OCU_NATCD,'01') SBDR_C
              FROM TB_OR_LM_LSHP A    
             INNER JOIN T1 B    
                ON A.GRP_ORG_C = B.GRP_ORG_C    
               AND A.LSHP_AMNNO = B.LSHP_AMNNO    
               AND B.ACG_PRC_DT &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||'09','YYYYMM'),-119),'YYYYMMDD')    
               AND B.ACG_PRC_DT &lt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_yy#)||'09','YYYYMM'),1)-1,'YYYYMMDD')    
             WHERE A.VLD_YN = 'Y'    
               AND A.GRP_ORG_C = TRIM(#grp_org_c#)    
               AND NVL(A.RWA_YN,'N') = 'N'     
               AND A.LSHP_STSC IN ('02','03')  
               AND A.LSHP_FORM_C IN ('01')
            
            
           ) B
        ON A.GRP_ORG_C = B.GRP_ORG_C
       AND A.LSHP_AMNNO = B.LSHP_AMNNO
),
RANK_PY_AM AS (
    SELECT PY_AM, RANK() OVER(ORDER BY PY_AM DESC) TOP_PY_AM
    FROM T2
    WHERE PY_AM >= 1000000
),
RANK_PY_AM_TOP10 AS (
    SELECT PY_AM,  TOP_PY_AM
    FROM RANK_PY_AM  
    WHERE TOP_PY_AM &lt; 10 
      AND TOP_PY_AM != 1 
    ORDER BY TOP_PY_AM
)
SELECT AVG(PY_AM) LC_BUFFER_SH FROM RANK_PY_AM_TOP10
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR011203" name="BIC 및 LC 버퍼 설정 CASE산출" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정CASE조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
	   AND MSR_ELM_DSCD = 'E500'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'),
T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T1 --BIC평균
),
T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T1
),
T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T1
),
T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T1
         UNION
        SELECT X,  BIC 
          FROM T1
      ) --분산
),
T1_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM T1
),
T1_BETA AS (
     SELECT DECODE (VARIANCE_X,0,0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T1_VARIANCE A
      INNER JOIN T1_COVAR_SAMP
         ON 1=1
),
T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T1_AVG_BIC A
      INNER JOIN T1_AVG_X
         ON 1=1
      INNER JOIN T1_BETA
         ON 1=1
),
T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM T1_Y
     INNER JOIN T1_MAX_X
       ON 1=1
     INNER JOIN T1_BETA
       ON 1=1
),  
T2 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '01'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'E500'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) MSR_AM
          FROM T1_BIC_EST
      )
),
T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T2 --BIC평균
),
T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T2
),
T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T2
),
T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T2
         UNION
        SELECT X,  BIC 
          FROM T2
      )
),
T2_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM T2
),
T2_BETA AS (
     SELECT DECODE (VARIANCE_X,0,0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T2_VARIANCE A
      INNER JOIN T2_COVAR_SAMP
         ON 1=1
),
T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T2_AVG_BIC A
      INNER JOIN T2_AVG_X
         ON 1=1
      INNER JOIN T2_BETA
         ON 1=1
),
T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T2_Y
     INNER JOIN T2_MAX_X
       ON 1=1
     INNER JOIN T2_BETA
       ON 1=1
     INNER JOIN T2_VARIANCE
       ON 1=1
),
T3 AS ( -- LC
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
	   AND MSR_ELM_DSCD = 'I600'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
),
T3_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM T3 --LC평균
),
T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T3
),
T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T3
),
T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM T3
         UNION
        SELECT X,  LC 
          FROM T3
      )
),
T3_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM T3
),
T3_BETA AS (
     SELECT DECODE (VARIANCE_X,0,0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T3_VARIANCE A
      INNER JOIN T3_COVAR_SAMP
         ON 1=1
),
T3_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM T3_AVG_LC A
      INNER JOIN T3_AVG_X
         ON 1=1
      INNER JOIN T3_BETA
         ON 1=1
),
T3_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM T3_Y
     INNER JOIN T3_MAX_X
       ON 1=1
     INNER JOIN T3_BETA
       ON 1=1
     INNER JOIN T3_VARIANCE
       ON 1=1
),
T4 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '01'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'I600'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12' BAS_YM, CAST(LC AS NUMBER(21)) MSR_AM
          FROM T3_LC_EST
      )
),
T4_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM T4 --BIC평균
),
T4_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T4
),
T4_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T4
),
T4_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM T4
         UNION
        SELECT X,  LC 
          FROM T4
      )
),
T4_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM T4
),
T4_BETA AS (
     SELECT DECODE (VARIANCE_X,0,0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T4_VARIANCE A
      INNER JOIN T4_COVAR_SAMP
         ON 1=1
),
T4_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM T4_AVG_LC A
      INNER JOIN T4_AVG_X
         ON 1=1
      INNER JOIN T4_BETA
         ON 1=1
),
T4_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM T4_Y
     INNER JOIN T4_MAX_X
       ON 1=1
     INNER JOIN T4_BETA
       ON 1=1
     INNER JOIN T4_VARIANCE
       ON 1=1
),
T5 AS (
    SELECT  SUBSTR(BAS_YM,1,4) Y, SUBSTR(BAS_YM,5,2) M, NVL(MSR_AM,0) ORC
      FROM TB_OR_GA_MSRELM 
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
       AND MSR_ELM_DSCD = 'E800'
       AND SUBSTR(BAS_YM,1,4) =  TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
       --AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
CASE_T01 AS ( -- BIC
    SELECT BIC CASE1, BIC CASE2, BIC CASE3, BIC CASE4
      FROM T1_BIC_EST
),
CASE_T02 AS ( -- LC
    SELECT LC CASE1, LC CASE2, LC CASE3, LC CASE4
      FROM T3_LC_EST
),
CASE_T03 AS ( -- BIC 한도
    SELECT (BIC + (SQRT * 2.33)) * (1 + NVL(TO_NUMBER(#bic_buffer_sh#),0)/100) CASE1
         , (BIC + (SQRT * 1.65)) * (1 + NVL(TO_NUMBER(#bic_buffer_sh#),0)/100) CASE2
         , BIC + (SQRT * 2.33) CASE3
         , BIC + (SQRT * 1.65) CASE4
      FROM T2_BIC_EST
),
CASE_T04 AS ( -- LC 한도
    SELECT LC + (SQRT * 2.33) + NVL(TO_NUMBER(#lc_buffer_sh#),0) * 1.5 CASE1
         , LC + (SQRT * 1.65) + NVL(TO_NUMBER(#lc_buffer_sh#),0) * 1.5 CASE2
         , LC + (SQRT * 2.33) CASE3
         , LC + (SQRT * 1.65) CASE4
      FROM T4_LC_EST
),
CASE_T05 AS ( --ILM
    SELECT LN(EXP(1)-1 + POWER((CT4.CASE1/CT3.CASE1),0.8)) CASE1
         , LN(EXP(1)-1 + POWER((CT4.CASE2/CT3.CASE2),0.8)) CASE2
         , LN(EXP(1)-1 + POWER((CT4.CASE3/CT3.CASE3),0.8)) CASE3
         , LN(EXP(1)-1 + POWER((CT4.CASE4/CT3.CASE4),0.8)) CASE4
      FROM CASE_T04 CT4
     INNER JOIN CASE_T03 CT3
       ON 1=1
),
CASE_T06 AS ( --내부자본한도
    SELECT CT3.CASE1*CT5.CASE1 CASE1
         , CT3.CASE2*CT5.CASE2 CASE2
         , CT3.CASE3*CT5.CASE3 CASE3
         , CT3.CASE4*CT5.CASE4 CASE4
      FROM CASE_T03 CT3
     INNER JOIN CASE_T05 CT5
       ON 1=1
),
M_T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
	   AND MSR_ELM_DSCD = 'E500'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND BAS_YM &gt;= '201906'),
M_T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM M_T1 --BIC평균
),
M_T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T1
),
M_T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T1
),
M_T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM M_T1
         UNION
        SELECT X,  BIC 
          FROM M_T1
      ) --분산
),
M_T1_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM M_T1
),
M_T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T1_VARIANCE A
      INNER JOIN M_T1_COVAR_SAMP
         ON 1=1
),
M_T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T1_AVG_BIC A
      INNER JOIN M_T1_AVG_X
         ON 1=1
      INNER JOIN M_T1_BETA
         ON 1=1
),
M_T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM M_T1_Y
     INNER JOIN M_T1_MAX_X
       ON 1=1
     INNER JOIN M_T1_BETA
       ON 1=1
),  
M_T2 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '02'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'E500'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
           AND BAS_YM &gt;= '201906'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) MSR_AM
          FROM M_T1_BIC_EST
      )
),
M_T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM M_T2 --BIC평균
),
M_T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T2
),
M_T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T2
),
M_T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM M_T2
         UNION
        SELECT X,  BIC 
          FROM M_T2
      )
),
M_T2_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM M_T2
),
M_T2_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T2_VARIANCE A
      INNER JOIN M_T2_COVAR_SAMP
         ON 1=1
),
M_T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T2_AVG_BIC A
      INNER JOIN M_T2_AVG_X
         ON 1=1
      INNER JOIN M_T2_BETA
         ON 1=1
),
M_T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM M_T2_Y
     INNER JOIN M_T2_MAX_X
       ON 1=1
     INNER JOIN M_T2_BETA
       ON 1=1
     INNER JOIN M_T2_VARIANCE
       ON 1=1
),
M_T3 AS ( -- LC
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
	   AND MSR_ELM_DSCD = 'I600'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND BAS_YM &gt;= '201906'
),
M_T3_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM M_T3 --LC평균
),
M_T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T3
),
M_T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T3
),
M_T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM M_T3
         UNION
        SELECT X,  LC 
          FROM M_T3
      )
),
M_T3_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM M_T3
),
M_T3_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T3_VARIANCE A
      INNER JOIN M_T3_COVAR_SAMP
         ON 1=1
),
M_T3_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T3_AVG_LC A
      INNER JOIN M_T3_AVG_X
         ON 1=1
      INNER JOIN M_T3_BETA
         ON 1=1
),
M_T3_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM M_T3_Y
     INNER JOIN M_T3_MAX_X
       ON 1=1
     INNER JOIN M_T3_BETA
       ON 1=1
     INNER JOIN M_T3_VARIANCE
       ON 1=1
),
M_T4 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '02'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'I600'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
           AND BAS_YM &gt;= '201906'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12' BAS_YM, CAST(LC AS NUMBER(21)) MSR_AM
          FROM M_T3_LC_EST
      )
),
M_T4_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM M_T4 --BIC평균
),
M_T4_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T4
),
M_T4_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T4
),
M_T4_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM M_T4
         UNION
        SELECT X,  LC 
          FROM M_T4
      )
),
M_T4_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM M_T4
),
M_T4_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T4_VARIANCE A
      INNER JOIN M_T4_COVAR_SAMP
         ON 1=1
),
M_T4_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T4_AVG_LC A
      INNER JOIN M_T4_AVG_X
         ON 1=1
      INNER JOIN M_T4_BETA
         ON 1=1
),
M_T4_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM M_T4_Y
     INNER JOIN M_T4_MAX_X
       ON 1=1
     INNER JOIN M_T4_BETA
       ON 1=1
     INNER JOIN M_T4_VARIANCE
       ON 1=1
),
M_T5 AS (
    SELECT  SUBSTR(BAS_YM,1,4) Y, SUBSTR(BAS_YM,5,2) M, NVL(MSR_AM,0) ORC
      FROM TB_OR_GA_MSRELM 
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
       AND MSR_ELM_DSCD = 'E800'
       AND SUBSTR(BAS_YM,1,4) =  TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
       --AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
CASE_M_T01 AS ( -- BIC
    SELECT BIC CASE1, BIC CASE2, BIC CASE3, BIC CASE4
      FROM M_T1_BIC_EST
),
CASE_M_T02 AS ( -- LC
    SELECT LC CASE1, LC CASE2, LC CASE3, LC CASE4
      FROM M_T3_LC_EST
),
CASE_M_T03 AS ( -- BIC 한도
    SELECT (BIC + (SQRT * 2.33)) * (1 + NVL(TO_NUMBER(#bic_buffer_shm#),0)/100) CASE1
         , (BIC + (SQRT * 1.65)) * (1 + NVL(TO_NUMBER(#bic_buffer_shm#),0)/100) CASE2
         , BIC + (SQRT * 2.33) CASE3
         , BIC + (SQRT * 1.65) CASE4
      FROM M_T2_BIC_EST
),
CASE_M_T04 AS ( -- LC 한도
    SELECT LC + (SQRT * 2.33) + NVL(TO_NUMBER(#lc_buffer_shm#),0) * 1.5 CASE1
         , LC + (SQRT * 1.65) + NVL(TO_NUMBER(#lc_buffer_shm#),0) * 1.5 CASE2
         , LC + (SQRT * 2.33) CASE3
         , LC + (SQRT * 1.65) CASE4
      FROM M_T4_LC_EST
),
CASE_M_T05 AS ( --ILM
    SELECT DECODE(CM_T3.CASE1,0,0, LN(EXP(1)-1 + POWER((CM_T4.CASE1/CM_T3.CASE1),0.8))) CASE1
         , DECODE(CM_T3.CASE2,0,0,LN(EXP(1)-1 + POWER((CM_T4.CASE2/CM_T3.CASE2),0.8))) CASE2
         , DECODE(CM_T3.CASE3,0,0,LN(EXP(1)-1 + POWER((CM_T4.CASE3/CM_T3.CASE3),0.8))) CASE3
         , DECODE(CM_T3.CASE4,0,0,LN(EXP(1)-1 + POWER((CM_T4.CASE4/CM_T3.CASE4),0.8))) CASE4
      FROM CASE_M_T04 CM_T4
     INNER JOIN CASE_M_T03 CM_T3
       ON 1=1
),
CASE_M_T06 AS ( --내부자본한도
    SELECT CM_T3.CASE1*CM_T5.CASE1 CASE1
         , CM_T3.CASE2*CM_T5.CASE2 CASE2
         , CM_T3.CASE3*CM_T5.CASE3 CASE3
         , CM_T3.CASE4*CM_T5.CASE4 CASE4
      FROM CASE_M_T03 CM_T3
     INNER JOIN CASE_M_T05 CM_T5
       ON 1=1
),
GROUP_ORC AS (
    SELECT A.CASE1 + B.CASE1 ORC1
        , A.CASE2 + B.CASE2 ORC2
        , A.CASE3 + B.CASE3 ORC3
        , A.CASE4 + B.CASE4 ORC4
    FROM CASE_T06 A 
        , CASE_M_T06 B
)
SELECT 'CASE1' BASE
    , '신뢰수준 99% 및 버퍼 설정' GUBUN
    , ROUND(A.CASE1) BIC_EST
    , ROUND(B.CASE1) LC_EST
    , ROUND(C.CASE1) BIC
    , ROUND(D.CASE1) LC
    , ROUND(E.CASE1, 4) ILM
    , ROUND(F.CASE1) ORC
    , ROUND(G.CASE1) M_BIC_EST
    , ROUND(H.CASE1) M_LC_EST
    , ROUND(I.CASE1) M_BIC
    , ROUND(J.CASE1) M_LC
    , ROUND(K.CASE1, 4) M_ILM
    , ROUND(L.CASE1) M_ORC
    , ROUND(M.ORC1) G_ORC
  FROM CASE_T01 A
    ,CASE_T02 B
    ,CASE_T03 C
    ,CASE_T04 D
    ,CASE_T05 E
    ,CASE_T06 F
    ,CASE_M_T01 G
    ,CASE_M_T02 H
    ,CASE_M_T03 I
    ,CASE_M_T04 J
    ,CASE_M_T05 K
    ,CASE_M_T06 L
    ,GROUP_ORC M
UNION ALL
SELECT 'CASE2' BASE
    , '신뢰수준 95% 및 버퍼 설정' GUBUN
    , ROUND(A.CASE2) BIC_EST
    , ROUND(B.CASE2) LC_EST
    , ROUND(C.CASE2) BIC
    , ROUND(D.CASE2) LC
    , ROUND(E.CASE2, 4) ILM
    , ROUND(F.CASE2) ORC  
    , ROUND(G.CASE2) M_BIC_EST
    , ROUND(H.CASE2) M_LC_EST
    , ROUND(I.CASE2) M_BIC
    , ROUND(J.CASE2) M_LC
    , ROUND(K.CASE2, 4) M_ILM
    , ROUND(L.CASE2) M_ORC
    , ROUND(M.ORC2) G_ORC
  FROM CASE_T01 A
    ,CASE_T02 B
    ,CASE_T03 C
    ,CASE_T04 D
    ,CASE_T05 E
    ,CASE_T06 F
    ,CASE_M_T01 G
    ,CASE_M_T02 H
    ,CASE_M_T03 I
    ,CASE_M_T04 J
    ,CASE_M_T05 K
    ,CASE_M_T06 L
    ,GROUP_ORC M
UNION
SELECT 'CASE3' BASE
    , '신뢰수준 99%' GUBUN
    , ROUND(A.CASE3) BIC_EST
    , ROUND(B.CASE3) LC_EST
    , ROUND(C.CASE3) BIC
    , ROUND(D.CASE3) LC
    , ROUND(E.CASE3, 4) ILM
    , ROUND(F.CASE3) ORC  
    , ROUND(G.CASE3) M_BIC_EST
    , ROUND(H.CASE3) M_LC_EST
    , ROUND(I.CASE3) M_BIC
    , ROUND(J.CASE3) M_LC
    , ROUND(K.CASE3, 4) M_ILM
    , ROUND(L.CASE3) M_ORC
    , ROUND(M.ORC3) G_ORC
  FROM CASE_T01 A
    ,CASE_T02 B
    ,CASE_T03 C
    ,CASE_T04 D
    ,CASE_T05 E
    ,CASE_T06 F
    ,CASE_M_T01 G
    ,CASE_M_T02 H
    ,CASE_M_T03 I
    ,CASE_M_T04 J
    ,CASE_M_T05 K
    ,CASE_M_T06 L
    ,GROUP_ORC M
UNION
SELECT 'CASE4' BASE
    , '신뢰수준 95%' GUBUN
    , ROUND(A.CASE4) BIC_EST
    , ROUND(B.CASE4) LC_EST
    , ROUND(C.CASE4) BIC
    , ROUND(D.CASE4) LC
    , ROUND(E.CASE4, 4) ILM
    , ROUND(F.CASE4) ORC  
    , ROUND(G.CASE4) M_BIC_EST
    , ROUND(H.CASE4) M_LC_EST
    , ROUND(I.CASE4) M_BIC
    , ROUND(J.CASE4) M_LC
    , ROUND(K.CASE4, 4) M_ILM
    , ROUND(L.CASE4) M_ORC
    , ROUND(M.ORC4) G_ORC
  FROM CASE_T01 A
    ,CASE_T02 B
    ,CASE_T03 C
    ,CASE_T04 D
    ,CASE_T05 E
    ,CASE_T06 F
    ,CASE_M_T01 G
    ,CASE_M_T02 H
    ,CASE_M_T03 I
    ,CASE_M_T04 J
    ,CASE_M_T05 K
    ,CASE_M_T06 L
    ,GROUP_ORC M
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011204" name="당해년도 4Q예측치산출_1" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정CASE조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
	   AND MSR_ELM_DSCD = 'E500'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
),
T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T1 --BIC평균
),
T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T1
),
T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T1
),
T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T1
         UNION
        SELECT X,  BIC 
          FROM T1
      ) --분산
),
T1_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM T1
),
T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T1_VARIANCE A
      INNER JOIN T1_COVAR_SAMP
         ON 1=1
),
T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T1_AVG_BIC A
      INNER JOIN T1_AVG_X
         ON 1=1
      INNER JOIN T1_BETA
         ON 1=1
),
T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM T1_Y
     INNER JOIN T1_MAX_X
       ON 1=1
     INNER JOIN T1_BETA
       ON 1=1
),  
T3 AS ( -- LC
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
	   AND MSR_ELM_DSCD = 'I600'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
),
T3_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM T3 --LC평균
),
T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T3
),
T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T3
),
T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM T3
         UNION
        SELECT X,  LC 
          FROM T3
      )
),
T3_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM T3
),
T3_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T3_VARIANCE A
      INNER JOIN T3_COVAR_SAMP
         ON 1=1
),
T3_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM T3_AVG_LC A
      INNER JOIN T3_AVG_X
         ON 1=1
      INNER JOIN T3_BETA
         ON 1=1
),
T3_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM T3_Y
     INNER JOIN T3_MAX_X
       ON 1=1
     INNER JOIN T3_BETA
       ON 1=1
     INNER JOIN T3_VARIANCE
       ON 1=1
),
M_T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
	   AND MSR_ELM_DSCD = 'E500'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND BAS_YM &gt;= '201906'
),
M_T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM M_T1 --BIC평균
),
M_T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T1
),
M_T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T1
),
M_T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM M_T1
         UNION
        SELECT X,  BIC 
          FROM M_T1
      ) --분산
),
M_T1_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM M_T1
),
M_T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T1_VARIANCE A
      INNER JOIN M_T1_COVAR_SAMP
         ON 1=1
),
M_T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T1_AVG_BIC A
      INNER JOIN M_T1_AVG_X
         ON 1=1
      INNER JOIN M_T1_BETA
         ON 1=1
),
M_T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM M_T1_Y
     INNER JOIN M_T1_MAX_X
       ON 1=1
     INNER JOIN M_T1_BETA
       ON 1=1
),
M_T3 AS ( -- LC
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
	   AND MSR_ELM_DSCD = 'I600'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND BAS_YM &gt;= '201906'
),
M_T3_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM M_T3 --LC평균
),
M_T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T3
),
M_T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T3
),
M_T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM M_T3
         UNION
        SELECT X,  LC 
          FROM M_T3
      )
),
M_T3_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM M_T3
),
M_T3_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T3_VARIANCE A
      INNER JOIN M_T3_COVAR_SAMP
         ON 1=1
),
M_T3_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T3_AVG_LC A
      INNER JOIN M_T3_AVG_X
         ON 1=1
      INNER JOIN M_T3_BETA
         ON 1=1
),
M_T3_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM M_T3_Y
     INNER JOIN M_T3_MAX_X
       ON 1=1
     INNER JOIN M_T3_BETA
       ON 1=1
     INNER JOIN M_T3_VARIANCE
       ON 1=1
),
B_BIC AS (SELECT '1' GUBUN, '평균' AS C1, TO_CHAR (AVG_X) AS C2,ROUND(AVG_BIC,0) AS MSR_AM FROM T1_AVG_BIC,T1_AVG_X
UNION ALL
SELECT '2','분산(S2)',TO_CHAR(VARIANCE_X) , ROUND(VARIANCE_BIC,0) FROM T1_VARIANCE
UNION ALL
SELECT '3' , '공분산(u)', '공분산(u)', ROUND(COVAR_SAMP,0) FROM T1_COVAR_SAMP 
UNION ALL
SELECT '4' , '베타', '베타', ROUND(BETA,0) FROM T1_BETA
UNION ALL
SELECT '5' , 'y절편','y절편', ROUND(Y_INTERCEPT,0) FROM T1_Y
),
B_LC AS (SELECT '1' GUBUN, ROUND(AVG_LC,0) AS MSR_AM FROM T3_AVG_LC
UNION ALL
SELECT '2' , ROUND(VARIANCE_LC,0) FROM T3_VARIANCE
UNION ALL
SELECT '3' , ROUND(COVAR_SAMP,0) FROM T3_COVAR_SAMP 
UNION ALL
SELECT '4' , ROUND(BETA,0) FROM T3_BETA
UNION ALL
SELECT '5' , ROUND(Y_INTERCEPT,0) FROM T3_Y
),
M_BIC AS (SELECT '1' GUBUN, '평균' AS C1, TO_CHAR(AVG_X) AS C2,ROUND(AVG_BIC,0) AS MSR_AM FROM M_T1_AVG_BIC, M_T1_AVG_X
UNION ALL
SELECT '2','분산(S2)',TO_CHAR(VARIANCE_X) , ROUND(VARIANCE_BIC,0) FROM M_T1_VARIANCE, M_T1_MAX_X
UNION ALL
SELECT '3' , '공분산(u)', '', ROUND(COVAR_SAMP,0) FROM M_T1_COVAR_SAMP 
UNION ALL
SELECT '4' , '베타', '', ROUND(BETA,0) FROM M_T1_BETA
UNION ALL
SELECT '5' , 'y절편','', ROUND(Y_INTERCEPT,0) FROM M_T1_Y
),
M_LC AS (SELECT '1' GUBUN, ROUND(AVG_LC,0) AS MSR_AM FROM M_T3_AVG_LC
UNION ALL
SELECT '2' , ROUND(VARIANCE_LC,0) FROM M_T3_VARIANCE
UNION ALL
SELECT '3' , ROUND(COVAR_SAMP,0) FROM M_T3_COVAR_SAMP 
UNION ALL
SELECT '4' , ROUND(BETA,0) FROM M_T3_BETA
UNION ALL
SELECT '5' , ROUND(Y_INTERCEPT,0) FROM M_T3_Y
)
SELECT A.GUBUN, A.C1, A.C2,A.MSR_AM BIC, B.MSR_AM LC , ROUND(C.C2,1) M_C2, C.MSR_AM M_BIC, D.MSR_AM M_LC
FROM B_BIC A
    , B_LC B
    , M_BIC C
    , M_LC D
WHERE A.GUBUN = B.GUBUN
  AND A.GUBUN = C.GUBUN
  AND A.GUBUN = D.GUBUN

					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011205" name="당해년도 4Q예측치산출_2" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정CASE조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
    SELECT BAS_YM ,RANK() OVER(ORDER BY BAS_YM) X, ROUND(BNK_BIC,0) AS BIC
    FROM TB_OR_GA_INLMT_RZT
    WHERE BAS_YM &lt; TRIM(#sch_bas_yy#)||12
      AND SUBSTR(BAS_YM,1,4) >= TO_NUMBER(TRIM(#sch_bas_yy#)) - 5
      AND BNK_BIC &lt;&gt; 0
),
T2 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, ROUND(BNK_LC,0) AS LC
    FROM TB_OR_GA_INLMT_RZT
    WHERE BAS_YM &lt; TRIM(#sch_bas_yy#)||12
      AND SUBSTR(BAS_YM,1,4) >= TO_NUMBER(TRIM(#sch_bas_yy#)) - 5
      AND BNK_LC &lt;&gt; 0
),
M_T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, ROUND(MYN_BIC,0) AS BIC
    FROM TB_OR_GA_INLMT_RZT
    WHERE BAS_YM &lt; TRIM(#sch_bas_yy#)||12
      AND SUBSTR(BAS_YM,1,4) >= TO_NUMBER(TRIM(#sch_bas_yy#)) - 5
      AND MYN_BIC &lt;&gt; 0
),
M_T2 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, ROUND(MYN_LC,0) AS LC
    FROM TB_OR_GA_INLMT_RZT
    WHERE BAS_YM &lt; TRIM(#sch_bas_yy#)||12
      AND SUBSTR(BAS_YM,1,4) >= TO_NUMBER(TRIM(#sch_bas_yy#)) - 5
      AND MYN_LC &lt;&gt; 0
)
SELECT 
    '기존 산출값' AS GUBUN
    , '' AS T1
    , CASE 
    WHEN A.BAS_YM LIKE '%03' THEN REPLACE(A.BAS_YM, '03', ' 1Q')
    WHEN A.BAS_YM LIKE '%06' THEN REPLACE(A.BAS_YM, '06', ' 2Q')
    WHEN A.BAS_YM LIKE '%09' THEN REPLACE(A.BAS_YM, '09', ' 3Q')
    WHEN A.BAS_YM LIKE '%12' THEN REPLACE(A.BAS_YM, '12', ' 4Q')
    END AS BAS_YM
    , A.X
    , A.BIC B_BIC
    , B.LC B_LC
    , C.X M_X
    , C.BIC M_BIC
    , D.LC M_LC
FROM T1 A
LEFT JOIN T2 B
  ON A.BAS_YM = B.BAS_YM
LEFT JOIN M_T1 C
  ON A.BAS_YM = C.BAS_YM
LEFT JOIN M_T2 D
  ON A.BAS_YM = D.BAS_YM
UNION ALL 
SELECT '예측치 산출값'
    , ''
    , MAX(TO_NUMBER(SUBSTR(A.BAS_YM,1,4)))||' 4Q'
    , MAX(A.X) + 1
    , 0
    , 0
    , MAX(B.X) + 1
    , 0
    , 0
FROM T1 A
    , M_T1 B
ORDER BY BAS_YM ASC
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011206" name="차기년도 4Q예측치산출_1" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정CASE조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
	   AND MSR_ELM_DSCD = 'E500'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'),
T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T1 --BIC평균
),
T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T1
),
T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T1
),
T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T1
         UNION
        SELECT X,  BIC 
          FROM T1
      ) --분산
),
T1_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM T1
),
T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T1_VARIANCE A
      INNER JOIN T1_COVAR_SAMP
         ON 1=1
),
T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T1_AVG_BIC A
      INNER JOIN T1_AVG_X
         ON 1=1
      INNER JOIN T1_BETA
         ON 1=1
),
T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM T1_Y
     INNER JOIN T1_MAX_X
       ON 1=1
     INNER JOIN T1_BETA
       ON 1=1
),  
T2 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '01'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'E500'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) MSR_AM
          FROM T1_BIC_EST
      )
),
T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T2 --BIC평균
),
T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T2
),
T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T2
),
T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T2
         UNION
        SELECT X,  BIC 
          FROM T2
      )
),
T2_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM T2
),
T2_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T2_VARIANCE A
      INNER JOIN T2_COVAR_SAMP
         ON 1=1
),
T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T2_AVG_BIC A
      INNER JOIN T2_AVG_X
         ON 1=1
      INNER JOIN T2_BETA
         ON 1=1
),
T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T2_Y
     INNER JOIN T2_MAX_X
       ON 1=1
     INNER JOIN T2_BETA
       ON 1=1
     INNER JOIN T2_VARIANCE
       ON 1=1
),
T3 AS ( -- LC
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
	   AND MSR_ELM_DSCD = 'I600'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) -4 ) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
),
T3_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM T3 --LC평균
),
T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T3
),
T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T3
),
T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM T3
         UNION
        SELECT X,  LC 
          FROM T3
      )
),
T3_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM T3
),
T3_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T3_VARIANCE A
      INNER JOIN T3_COVAR_SAMP
         ON 1=1
),
T3_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM T3_AVG_LC A
      INNER JOIN T3_AVG_X
         ON 1=1
      INNER JOIN T3_BETA
         ON 1=1
),
T3_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM T3_Y
     INNER JOIN T3_MAX_X
       ON 1=1
     INNER JOIN T3_BETA
       ON 1=1
     INNER JOIN T3_VARIANCE
       ON 1=1
),
T4 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '01'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'I600'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12' BAS_YM, CAST(LC AS NUMBER(21)) MSR_AM
          FROM T3_LC_EST
      )
),
T4_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM T4 --BIC평균
),
T4_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T4
),
T4_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T4
),
T4_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM T4
         UNION
        SELECT X,  LC 
          FROM T4
      )
),
T4_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM T4
),
T4_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T4_VARIANCE A
      INNER JOIN T4_COVAR_SAMP
         ON 1=1
),
T4_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM T4_AVG_LC A
      INNER JOIN T4_AVG_X
         ON 1=1
      INNER JOIN T4_BETA
         ON 1=1
),
T4_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM T4_Y
     INNER JOIN T4_MAX_X
       ON 1=1
     INNER JOIN T4_BETA
       ON 1=1
     INNER JOIN T4_VARIANCE
       ON 1=1
),
T5 AS (
    SELECT  SUBSTR(BAS_YM,1,4) Y, SUBSTR(BAS_YM,5,2) M, NVL(MSR_AM,0) ORC
      FROM TB_OR_GA_MSRELM 
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
       AND MSR_ELM_DSCD = 'E800'
       AND SUBSTR(BAS_YM,1,4) =  TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
       --AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
M_T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
	   AND MSR_ELM_DSCD = 'E500'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND BAS_YM &gt;= '201906'
),
M_T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM M_T1 --BIC평균
),
M_T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T1
),
M_T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T1
),
M_T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM M_T1
         UNION
        SELECT X,  BIC 
          FROM M_T1
      ) --분산
),
M_T1_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM M_T1
),
M_T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T1_VARIANCE A
      INNER JOIN M_T1_COVAR_SAMP
         ON 1=1
),
M_T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T1_AVG_BIC A
      INNER JOIN M_T1_AVG_X
         ON 1=1
      INNER JOIN M_T1_BETA
         ON 1=1
),
M_T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM M_T1_Y
     INNER JOIN M_T1_MAX_X
       ON 1=1
     INNER JOIN M_T1_BETA
       ON 1=1
),
M_T2 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '02'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'E500'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
           AND BAS_YM &gt;= '201906'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) MSR_AM
          FROM M_T1_BIC_EST
      )
),
M_T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM M_T2 --BIC평균
),
M_T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T2
),
M_T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T2
),
M_T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM M_T2
         UNION
        SELECT X,  BIC 
          FROM M_T2
      )
),
M_T2_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM M_T2
),
M_T2_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T2_VARIANCE A
      INNER JOIN M_T2_COVAR_SAMP
         ON 1=1
),
M_T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T2_AVG_BIC A
      INNER JOIN M_T2_AVG_X
         ON 1=1
      INNER JOIN M_T2_BETA
         ON 1=1
),
M_T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM M_T2_Y
     INNER JOIN M_T2_MAX_X
       ON 1=1
     INNER JOIN M_T2_BETA
       ON 1=1
     INNER JOIN M_T2_VARIANCE
       ON 1=1
),
M_T3 AS ( -- LC
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
	   AND MSR_ELM_DSCD = 'I600'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND BAS_YM &gt;= '201906'
),
M_T3_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM M_T3 --LC평균
),
M_T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T3
),
M_T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T3
),
M_T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM M_T3
         UNION
        SELECT X,  LC 
          FROM M_T3
      )
),
M_T3_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM M_T3
),
M_T3_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T3_VARIANCE A
      INNER JOIN M_T3_COVAR_SAMP
         ON 1=1
),
M_T3_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T3_AVG_LC A
      INNER JOIN M_T3_AVG_X
         ON 1=1
      INNER JOIN M_T3_BETA
         ON 1=1
),
M_T3_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM M_T3_Y
     INNER JOIN M_T3_MAX_X
       ON 1=1
     INNER JOIN M_T3_BETA
       ON 1=1
     INNER JOIN M_T3_VARIANCE
       ON 1=1
),
M_T4 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '02'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'I600'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
           AND BAS_YM &gt;= '201906'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12' BAS_YM, CAST(LC AS NUMBER(21)) MSR_AM
          FROM M_T3_LC_EST
      )
),
M_T4_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM M_T4 --BIC평균
),
M_T4_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T4
),
M_T4_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T4
),
M_T4_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM M_T4
         UNION
        SELECT X,  LC 
          FROM M_T4
      )
),
M_T4_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM M_T4
),
M_T4_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T4_VARIANCE A
      INNER JOIN M_T4_COVAR_SAMP
         ON 1=1
),
M_T4_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T4_AVG_LC A
      INNER JOIN M_T4_AVG_X
         ON 1=1
      INNER JOIN M_T4_BETA
         ON 1=1
),
M_T4_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM M_T4_Y
     INNER JOIN M_T4_MAX_X
       ON 1=1
     INNER JOIN M_T4_BETA
       ON 1=1
     INNER JOIN M_T4_VARIANCE
       ON 1=1
),
CASE_T01 AS ( -- BIC
    SELECT BIC CASE1, BIC CASE2, BIC CASE3, BIC CASE4
      FROM T1_BIC_EST
),
CASE_T02 AS ( -- LC
    SELECT LC CASE1, LC CASE2, LC CASE3, LC CASE4
      FROM T3_LC_EST
),
CASE_T03 AS ( -- BIC 한도
    SELECT (BIC + (SQRT * 2.33)) * (1 + NVL(TO_NUMBER('12'),0)/100) CASE1
         , (BIC + (SQRT * 1.65)) * (1 + NVL(TO_NUMBER('12'),0)/100) CASE2
         , BIC + (SQRT * 2.33) CASE3
         , BIC + (SQRT * 1.65) CASE4
      FROM T2_BIC_EST
),
CASE_T04 AS ( -- LC 한도
    SELECT LC + (SQRT * 2.33) + NVL(TO_NUMBER('1000000000'),0) * 1.5 CASE1
         , LC + (SQRT * 1.65) + NVL(TO_NUMBER('1000000000'),0) * 1.5 CASE2
         , LC + (SQRT * 2.33) CASE3
         , LC + (SQRT * 1.65) CASE4
      FROM T4_LC_EST
),
CASE_T05 AS ( --ILM
    SELECT LN(EXP(1)-1 + POWER((CT4.CASE1/CT3.CASE1),0.8)) CASE1
         , LN(EXP(1)-1 + POWER((CT4.CASE2/CT3.CASE2),0.8)) CASE2
         , LN(EXP(1)-1 + POWER((CT4.CASE3/CT3.CASE3),0.8)) CASE3
         , LN(EXP(1)-1 + POWER((CT4.CASE4/CT3.CASE4),0.8)) CASE4
      FROM CASE_T04 CT4
     INNER JOIN CASE_T03 CT3
       ON 1=1
),
CASE_T06 AS ( --내부자본한도
    SELECT CT3.CASE1*CT5.CASE1 CASE1
         , CT3.CASE2*CT5.CASE2 CASE2
         , CT3.CASE3*CT5.CASE3 CASE3
         , CT3.CASE4*CT5.CASE4 CASE4
      FROM CASE_T03 CT3
     INNER JOIN CASE_T05 CT5
       ON 1=1
),
CASE_M_T01 AS ( -- BIC
    SELECT BIC CASE1, BIC CASE2, BIC CASE3, BIC CASE4
      FROM M_T1_BIC_EST
),
CASE_M_T02 AS ( -- LC
    SELECT LC CASE1, LC CASE2, LC CASE3, LC CASE4
      FROM M_T3_LC_EST
),
CASE_M_T03 AS ( -- BIC 한도
    SELECT (BIC + (SQRT * 2.33)) * (1 + NVL(TO_NUMBER('12'),0)/100) CASE1
         , (BIC + (SQRT * 1.65)) * (1 + NVL(TO_NUMBER('12'),0)/100) CASE2
         , BIC + (SQRT * 2.33) CASE3
         , BIC + (SQRT * 1.65) CASE4
      FROM M_T2_BIC_EST
),
CASE_M_T04 AS ( -- LC 한도
    SELECT LC + (SQRT * 2.33) + NVL(TO_NUMBER('1000000000'),0) * 1.5 CASE1
         , LC + (SQRT * 1.65) + NVL(TO_NUMBER('1000000000'),0) * 1.5 CASE2
         , LC + (SQRT * 2.33) CASE3
         , LC + (SQRT * 1.65) CASE4
      FROM M_T4_LC_EST
),
CASE_M_T05 AS ( --ILM
    SELECT LN(EXP(1)-1 + POWER((CT4.CASE1/CT3.CASE1),0.8)) CASE1
         , LN(EXP(1)-1 + POWER((CT4.CASE2/CT3.CASE2),0.8)) CASE2
         , LN(EXP(1)-1 + POWER((CT4.CASE3/CT3.CASE3),0.8)) CASE3
         , LN(EXP(1)-1 + POWER((CT4.CASE4/CT3.CASE4),0.8)) CASE4
      FROM CASE_M_T04 CT4
     INNER JOIN CASE_M_T03 CT3
       ON 1=1
),
CASE_M_T06 AS ( --내부자본한도
    SELECT CT3.CASE1*CT5.CASE1 CASE1
         , CT3.CASE2*CT5.CASE2 CASE2
         , CT3.CASE3*CT5.CASE3 CASE3
         , CT3.CASE4*CT5.CASE4 CASE4
      FROM CASE_M_T03 CT3
     INNER JOIN CASE_M_T05 CT5
       ON 1=1
),
B_BIC AS (SELECT '1' GUBUN, '평균' AS C1, TO_CHAR (AVG_X) AS C2,ROUND(AVG_BIC,0) AS MSR_AM FROM T1_AVG_BIC,T1_AVG_X
UNION ALL
SELECT '2','분산(S2)',TO_CHAR(VARIANCE_X) , ROUND(VARIANCE_BIC,0) FROM T1_VARIANCE
UNION ALL
SELECT '3' , '공분산(u)', '공분산(u)', ROUND(COVAR_SAMP,0) FROM T1_COVAR_SAMP 
UNION ALL
SELECT '4' , '베타', '베타', ROUND(BETA,0) FROM T1_BETA
UNION ALL
SELECT '5' , 'y절편','y절편', ROUND(Y_INTERCEPT,0) FROM T1_Y
UNION ALL
SELECT '6' , '표준편차', '표준편차' , ROUND(SQRT) FROM T2_BIC_EST
UNION ALL
SELECT '7' , '단측 + 95%(1.65)', '단측 + 95%(1.65)' , ROUND(CASE4) FROM CASE_T03
UNION ALL
SELECT '8' , '단측 + 99%(2.33)', '단측 + 95%(2.33)' , ROUND(CASE3) FROM CASE_T03
),
B_LC AS (SELECT '1' GUBUN, ROUND(AVG_LC,0) AS MSR_AM FROM T3_AVG_LC
UNION ALL
SELECT '2' , ROUND(VARIANCE_LC,0) FROM T3_VARIANCE
UNION ALL
SELECT '3' , ROUND(COVAR_SAMP,0) FROM T3_COVAR_SAMP 
UNION ALL
SELECT '4' , ROUND(BETA,0) FROM T3_BETA
UNION ALL
SELECT '5' , ROUND(Y_INTERCEPT,0) FROM T3_Y
UNION ALL
SELECT '6' , ROUND(SQRT) FROM T3_LC_EST
UNION ALL
SELECT '7' , ROUND(CASE4) FROM CASE_T04
UNION ALL
SELECT '8' , ROUND(CASE3) FROM CASE_T04
),
M_BIC AS (SELECT '1' GUBUN, '평균' AS C1, TO_CHAR(AVG_X) AS C2,ROUND(AVG_BIC,0) AS MSR_AM FROM M_T1_AVG_BIC, M_T1_AVG_X
UNION ALL
SELECT '2','분산(S2)',TO_CHAR(VARIANCE_X) , ROUND(VARIANCE_BIC,0) FROM M_T1_VARIANCE, M_T1_MAX_X
UNION ALL
SELECT '3' , '공분산(u)', '', ROUND(COVAR_SAMP,0) FROM M_T1_COVAR_SAMP 
UNION ALL
SELECT '4' , '베타', '', ROUND(BETA,0) FROM M_T1_BETA
UNION ALL
SELECT '5' , 'y절편','', ROUND(Y_INTERCEPT,0) FROM M_T1_Y
UNION ALL
SELECT '6' , '표준편차', '' , ROUND(SQRT) FROM M_T2_BIC_EST
UNION ALL
SELECT '7' , '단측 + 95%(1.65)', '' , ROUND(CASE4) FROM CASE_M_T03
UNION ALL
SELECT '8' , '단측 + 99%(2.33)', '' , ROUND(CASE3) FROM CASE_M_T03
),
M_LC AS (SELECT '1' GUBUN, ROUND(AVG_LC,0) AS MSR_AM FROM M_T3_AVG_LC
UNION ALL
SELECT '2' , ROUND(VARIANCE_LC,0) FROM M_T3_VARIANCE
UNION ALL
SELECT '3' , ROUND(COVAR_SAMP,0) FROM M_T3_COVAR_SAMP 
UNION ALL
SELECT '4' , ROUND(BETA,0) FROM M_T3_BETA
UNION ALL
SELECT '5' , ROUND(Y_INTERCEPT,0) FROM M_T3_Y
UNION ALL
SELECT '6' , ROUND(SQRT) FROM M_T3_LC_EST
UNION ALL
SELECT '7' , ROUND(CASE4) FROM CASE_M_T04
UNION ALL
SELECT '8' , ROUND(CASE3) FROM CASE_M_T04
)
SELECT A.GUBUN, A.C1, A.C2,A.MSR_AM BIC, B.MSR_AM LC, ROUND(C.C2,1) C3, C.MSR_AM M_BIC , D.MSR_AM M_LC
FROM B_BIC A
    , B_LC B
    , M_BIC C
    , M_LC D
WHERE A.GUBUN = B.GUBUN
  AND A.GUBUN = C.GUBUN
  AND A.GUBUN = D.GUBUN
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011207" name="차기년도 4Q예측치산출_2" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정CASE조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
	   AND MSR_ELM_DSCD = 'E500'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) ) || '12'
       AND SUBSTR(BAS_YM,5,2) = '12'
),
T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T1 --BIC평균
),
T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T1
),
T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T1
),
T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T1
         UNION
        SELECT X,  BIC 
          FROM T1
      ) --분산
),
T1_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM T1
),
T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T1_VARIANCE A
      INNER JOIN T1_COVAR_SAMP
         ON 1=1
),
T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T1_AVG_BIC A
      INNER JOIN T1_AVG_X
         ON 1=1
      INNER JOIN T1_BETA
         ON 1=1
),
T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM T1_Y
     INNER JOIN T1_MAX_X
       ON 1=1
     INNER JOIN T1_BETA
       ON 1=1
),  
T2 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '01'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'E500'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
           AND SUBSTR(BAS_YM,1,4) = '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) MSR_AM
          FROM T1_BIC_EST
      )
),
T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T2 --BIC평균
),
T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T2
),
T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T2
),
T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T2
         UNION
        SELECT X,  BIC 
          FROM T2
      )
),
T2_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM T2
),
T2_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T2_VARIANCE A
      INNER JOIN T2_COVAR_SAMP
         ON 1=1
),
T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T2_AVG_BIC A
      INNER JOIN T2_AVG_X
         ON 1=1
      INNER JOIN T2_BETA
         ON 1=1
),
T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T2_Y
     INNER JOIN T2_MAX_X
       ON 1=1
     INNER JOIN T2_BETA
       ON 1=1
     INNER JOIN T2_VARIANCE
       ON 1=1
),
T3 AS ( -- LC
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
	   AND MSR_ELM_DSCD = 'I600'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND SUBSTR(BAS_YM,5,2) = '12'
),
T3_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM T3 --LC평균
),
T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T3
),
T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T3
),
T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM T3
         UNION
        SELECT X,  LC 
          FROM T3
      )
),
T3_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM T3
),
T3_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T3_VARIANCE A
      INNER JOIN T3_COVAR_SAMP
         ON 1=1
),
T3_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM T3_AVG_LC A
      INNER JOIN T3_AVG_X
         ON 1=1
      INNER JOIN T3_BETA
         ON 1=1
),
T3_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM T3_Y
     INNER JOIN T3_MAX_X
       ON 1=1
     INNER JOIN T3_BETA
       ON 1=1
     INNER JOIN T3_VARIANCE
       ON 1=1
),
T4 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '01'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'I600'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
           AND SUBSTR(BAS_YM,5,2) = '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12' BAS_YM, CAST(LC AS NUMBER(21)) MSR_AM
          FROM T3_LC_EST
      )
),
T4_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM T4 --BIC평균
),
T4_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T4
),
T4_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T4
),
T4_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM T4
         UNION
        SELECT X,  LC 
          FROM T4
      )
),
T4_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM T4
),
T4_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T4_VARIANCE A
      INNER JOIN T4_COVAR_SAMP
         ON 1=1
),
T4_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM T4_AVG_LC A
      INNER JOIN T4_AVG_X
         ON 1=1
      INNER JOIN T4_BETA
         ON 1=1
),
T4_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM T4_Y
     INNER JOIN T4_MAX_X
       ON 1=1
     INNER JOIN T4_BETA
       ON 1=1
     INNER JOIN T4_VARIANCE
       ON 1=1
),
T5 AS (
    SELECT  SUBSTR(BAS_YM,1,4) Y, SUBSTR(BAS_YM,5,2) M, NVL(MSR_AM,0) ORC
      FROM TB_OR_GA_MSRELM 
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '01'
       AND MSR_ELM_DSCD = 'E800'
       AND SUBSTR(BAS_YM,1,4) =  TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
       --AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
M_T1 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
	   AND MSR_ELM_DSCD = 'E500'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND BAS_YM &gt;= '201906'
       AND SUBSTR(BAS_YM,5,2) = '12'
),
M_T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM M_T1 --BIC평균
),
M_T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T1
),
M_T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T1
),
M_T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM M_T1
         UNION
        SELECT X,  BIC 
          FROM M_T1
      ) --분산
),
M_T1_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM M_T1
),
M_T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T1_VARIANCE A
      INNER JOIN M_T1_COVAR_SAMP
         ON 1=1
),
M_T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T1_AVG_BIC A
      INNER JOIN M_T1_AVG_X
         ON 1=1
      INNER JOIN M_T1_BETA
         ON 1=1
),
M_T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM M_T1_Y
     INNER JOIN M_T1_MAX_X
       ON 1=1
     INNER JOIN M_T1_BETA
       ON 1=1
),
M_T2 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) BIC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '02'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'E500'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
           AND BAS_YM &gt;= '201906'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) MSR_AM
          FROM M_T1_BIC_EST
      )
),
M_T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM M_T2 --BIC평균
),
M_T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T2
),
M_T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T2
),
M_T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM M_T2
         UNION
        SELECT X,  BIC 
          FROM M_T2
      )
),
M_T2_COVAR_SAMP AS (
    SELECT COVAR_SAMP(BIC,X) AS COVAR_SAMP 
      FROM M_T2
),
M_T2_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T2_VARIANCE A
      INNER JOIN M_T2_COVAR_SAMP
         ON 1=1
),
M_T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T2_AVG_BIC A
      INNER JOIN M_T2_AVG_X
         ON 1=1
      INNER JOIN M_T2_BETA
         ON 1=1
),
M_T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM M_T2_Y
     INNER JOIN M_T2_MAX_X
       ON 1=1
     INNER JOIN M_T2_BETA
       ON 1=1
     INNER JOIN M_T2_VARIANCE
       ON 1=1
),
M_T3 AS ( -- LC
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM TB_OR_GA_MSRELM
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = '2'
	   AND SBDR_C = '02'
	   AND MSR_ELM_DSCD = 'I600'
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
       AND BAS_YM &gt;= '201906'
       AND SUBSTR(BAS_YM,5,2) = '12'
),
M_T3_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM M_T3 --LC평균
),
M_T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T3
),
M_T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T3
),
M_T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM M_T3
         UNION
        SELECT X,  LC 
          FROM M_T3
      )
),
M_T3_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM M_T3
),
M_T3_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T3_VARIANCE A
      INNER JOIN M_T3_COVAR_SAMP
         ON 1=1
),
M_T3_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T3_AVG_LC A
      INNER JOIN M_T3_AVG_X
         ON 1=1
      INNER JOIN M_T3_BETA
         ON 1=1
),
M_T3_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM M_T3_Y
     INNER JOIN M_T3_MAX_X
       ON 1=1
     INNER JOIN M_T3_BETA
       ON 1=1
     INNER JOIN M_T3_VARIANCE
       ON 1=1
),
M_T4 AS (
    SELECT BAS_YM, RANK() OVER(ORDER BY BAS_YM) X, NVL(MSR_AM,0) LC
      FROM (
        SELECT BAS_YM, NVL(MSR_AM,0) MSR_AM
          FROM TB_OR_GA_MSRELM
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = '2'
		   AND SBDR_C = '02'
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND MSR_ELM_DSCD = 'I600'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 4) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12'
           AND BAS_YM &gt;= '201906'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#)) || '12' BAS_YM, CAST(LC AS NUMBER(21)) MSR_AM
          FROM M_T3_LC_EST
      )
),
M_T4_AVG_LC AS (
    SELECT  AVG(LC) AS AVG_LC 
      FROM M_T4 --BIC평균
),
M_T4_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM M_T4
),
M_T4_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM M_T4
),
M_T4_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(LC) AS VARIANCE_LC
      FROM (
        SELECT AVG(X) X, AVG(LC) LC 
          FROM M_T4
         UNION
        SELECT X,  LC 
          FROM M_T4
      )
),
M_T4_COVAR_SAMP AS (
    SELECT COVAR_SAMP(LC,X) AS COVAR_SAMP 
      FROM M_T4
),
M_T4_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM M_T4_VARIANCE A
      INNER JOIN M_T4_COVAR_SAMP
         ON 1=1
),
M_T4_Y AS (
     SELECT AVG_LC - BETA * AVG_X AS Y_INTERCEPT
       FROM M_T4_AVG_LC A
      INNER JOIN M_T4_AVG_X
         ON 1=1
      INNER JOIN M_T4_BETA
         ON 1=1
),
M_T4_LC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) LC, SQRT(VARIANCE_LC) SQRT
      FROM M_T4_Y
     INNER JOIN M_T4_MAX_X
       ON 1=1
     INNER JOIN M_T4_BETA
       ON 1=1
     INNER JOIN M_T4_VARIANCE
       ON 1=1
)
SELECT
    '기존 산출값' AS GUBUN2
    , CASE 
    WHEN A.BAS_YM LIKE '%03' THEN REPLACE(A.BAS_YM, '03', ' 1Q')
    WHEN A.BAS_YM LIKE '%06' THEN REPLACE(A.BAS_YM, '06', ' 2Q')
    WHEN A.BAS_YM LIKE '%09' THEN REPLACE(A.BAS_YM, '09', ' 3Q')
    WHEN A.BAS_YM LIKE '%12' THEN REPLACE(A.BAS_YM, '12', ' 4Q')
    END AS BAS_YM
    , '' AS T1
    , A.X
    , ROUND(NVL(A.BIC,0)) B_BIC
    , ROUND(NVL(B.LC,0)) B_LC
    , C.X M_X
    , ROUND(NVL(C.BIC,0)) M_BIC
    , ROUND(NVL(D.LC,0)) M_LC
FROM T1 A
LEFT JOIN T4 B
  ON A.BAS_YM = B.BAS_YM
LEFT JOIN M_T1 C
  ON A.BAS_YM = C.BAS_YM
LEFT JOIN M_T4 D
  ON C.X = D.X
UNION 
SELECT 
    '예측치 산출값'
    , #sch_bas_yy# || ' 4Q (예측치)' BAS_YM
    , ''
    , A.X
    , ROUND(A.BIC)
    , ROUND(B.LC)
    , C.X
    , DECODE(C.BIC,NULL,0,ROUND(C.BIC))
    , DECODE(C.BIC,NULL,0,ROUND(D.LC))
FROM T1_BIC_EST A
    ,T3_LC_EST B 
    ,M_T1_BIC_EST C
    ,M_T3_LC_EST D 
UNION
SELECT 
    '차기년도 신뢰수준別 4Q BIC 및 LC 예측치 산출 값'
    ,'예측치' BAS_YM
    ,''
    ,A.X + 1
    ,0
    ,0
    ,C.X +1
    ,0
    ,0
FROM T1_BIC_EST A
    ,M_T1_BIC_EST C
UNION
SELECT 
    '차기년도 신뢰수준別 4Q BIC 및 LC 예측치 산출 값'
    ,'신뢰수준95%' BAS_YM
    ,'' 
    ,A.X + 1
    ,0
    ,0
    ,C.X +1
    ,0
    ,0
FROM T1_BIC_EST A
    ,M_T1_BIC_EST C
UNION
SELECT 
    '차기년도 신뢰수준別 4Q BIC 및 LC 예측치 산출 값'
    ,'신뢰수준99%' BAS_YM
    ,''
    ,A.X + 1
    ,0
    ,0
    ,C.X +1
    ,0
    ,0
FROM T1_BIC_EST A
    ,M_T1_BIC_EST C
ORDER BY BAS_YM ASC
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011208" name="내부자본한도소진율시뮬레이션조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도소진율시뮬레이션조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(BIZ_IX_FCTR_AM,0) BIC
      FROM TB_OR_GA_MSRRZT
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 5) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T1 --BIC평균
),
T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T1
),
T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T1
),
T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T1
         UNION
        SELECT X,  BIC 
          FROM T1
      )
),
T1_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T1
),
T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T1_VARIANCE A
      INNER JOIN T1_COVAR_POP
         ON 1=1
),
T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T1_AVG_BIC A
      INNER JOIN T1_AVG_X
         ON 1=1
      INNER JOIN T1_BETA
         ON 1=1
),
T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM T1_Y
     INNER JOIN T1_MAX_X
       ON 1=1
     INNER JOIN T1_BETA
       ON 1=1
),  
T2 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(BIZ_IX_FCTR_AM,0) BIC
      FROM (
        SELECT BAS_YM, BIZ_IX_FCTR_AM
          FROM TB_OR_GA_MSRRZT
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = #sch_rgo_in_dsc#
		   AND SBDR_C = #sch_sbdr_c#
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 5) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) BIZ_IX_FCTR_AM
          FROM T1_BIC_EST
      )
),
T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T2 --BIC평균
),
T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T2
),
T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T2
),
T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T2
         UNION
        SELECT X,  BIC 
          FROM T2
      )
),
T2_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T2
),
T2_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T2_VARIANCE A
      INNER JOIN T2_COVAR_POP
         ON 1=1
),
T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T2_AVG_BIC A
      INNER JOIN T2_AVG_X
         ON 1=1
      INNER JOIN T2_BETA
         ON 1=1
),
T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T2_Y
     INNER JOIN T2_MAX_X
       ON 1=1
     INNER JOIN T2_BETA
       ON 1=1
     INNER JOIN T2_VARIANCE
       ON 1=1
),
T3 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(LSS_FCTR_AM,0) BIC
      FROM TB_OR_GA_MSRRZT
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       --AND (BAS_YM = TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '09' OR SUBSTR(BAS_YM,5,2) = '12')
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 10) || '00'
       AND BAS_YM &lt;= TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
       AND BAS_YM IN (
            SELECT SUBSTR(BAS_YM,1,4) || MAX(SUBSTR(BAS_YM,5,2))
              FROM TB_OR_GA_MSRRZT
             WHERE GRP_ORG_C = #grp_org_c#
               AND RGO_IN_DSC = #sch_rgo_in_dsc#
               AND SBDR_C = #sch_sbdr_c#
               AND LSS_FCTR_AM IS NOT NULL
             GROUP BY  SUBSTR(BAS_YM,1,4)
	 )
),
T3_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T3 --BIC평균
),
T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T3
),
T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T3
),
T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T3
         UNION
        SELECT X,  BIC 
          FROM T3
      )
),
T3_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T3
),
T3_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T3_VARIANCE A
      INNER JOIN T3_COVAR_POP
         ON 1=1
),
T3_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T3_AVG_BIC A
      INNER JOIN T3_AVG_X
         ON 1=1
      INNER JOIN T3_BETA
         ON 1=1
),
T3_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T3_Y
     INNER JOIN T3_MAX_X
       ON 1=1
     INNER JOIN T3_BETA
       ON 1=1
     INNER JOIN T3_VARIANCE
       ON 1=1
),
T4 AS (
    SELECT  SUBSTR(BAS_YM,1,4) Y, SUBSTR(BAS_YM,5,2) M, NVL(TOT_NED_OWNFDS,0) ORC
      FROM TB_OR_GA_MSRRZT 
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       AND SUBSTR(BAS_YM,1,4) =  TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
       --AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
CASE_T01 AS (
    SELECT BIC CASE1, BIC CASE2, BIC CASE3, BIC CASE4
      FROM T1_BIC_EST
),
CASE_T02 AS (
    SELECT BIC + (SQRT * 2.33) CASE1
         , BIC + (SQRT * 1.65) CASE2
         , (BIC + (SQRT * 2.33)) * (1 + NVL(TO_NUMBER(#mng_pln_rto#),0)/100) CASE3
         , (BIC + (SQRT * 1.65)) * (1 + NVL(TO_NUMBER(#mng_pln_rto#),0)/100) CASE4
      FROM T2_BIC_EST
),
CASE_T03 AS (
    SELECT BIC + (SQRT * 2.33) CASE1
         , BIC + (SQRT * 1.65) CASE2
         , BIC + (SQRT * 2.33) + NVL(TO_NUMBER(#lss_am#),0) CASE3
         , BIC + (SQRT * 1.65) + NVL(TO_NUMBER(#lss_am#),0) CASE4
      FROM T3_BIC_EST
),
CASE_T04 AS (
    SELECT LN(EXP(1)-1 + POWER((CT3.CASE1/CT2.CASE1),0.8)) CASE1
         , LN(EXP(1)-1 + POWER((CT3.CASE2/CT2.CASE2),0.8)) CASE2
         , LN(EXP(1)-1 + POWER((CT3.CASE3/CT2.CASE3),0.8)) CASE3
         , LN(EXP(1)-1 + POWER((CT3.CASE4/CT2.CASE4),0.8)) CASE4
      FROM CASE_T02 CT2
     INNER JOIN CASE_T03 CT3
       ON 1=1
),
CASE_T05 AS (
    SELECT CT4.CASE1*CT2.CASE1 CASE1
         , CT4.CASE2*CT2.CASE2 CASE2
         , CT4.CASE3*CT2.CASE3 CASE3
         , CT4.CASE4*CT2.CASE4 CASE4
      FROM CASE_T02 CT2
     INNER JOIN CASE_T04 CT4
       ON 1=1
),
CASE_T1 AS (
    SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) Y, MON.M, T4.ORC CASE1
         , T4.ORC / T05.CASE1 RT1
         , T4.ORC CASE2
         , T4.ORC / T05.CASE2 RT2
         , T4.ORC CASE3
         , T4.ORC / T05.CASE3 RT3
         , T4.ORC CASE4
         , T4.ORC / T05.CASE4 RT4
      FROM (
        SELECT '03' M FROM DUAL
         UNION SELECT '06' M FROM DUAL
         UNION SELECT '09' M FROM DUAL
         UNION SELECT '12' M FROM DUAL
      ) MON
      INNER JOIN CASE_T05 T05
         ON 1=1
      LEFT JOIN T4
        ON MON.M = T4.M
)
SELECT '11' GUBUN, SUBSTR(Y,3,2) || '.1Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE1/100000000 CASE1, CASE2/100000000 CASE2, CASE3/100000000 CASE3, CASE4/100000000 CASE4
  FROM CASE_T1
 WHERE M = '03'
 UNION
SELECT '12' GUBUN, SUBSTR(Y,3,2) || '.1Q' GUBUN_NM1, '소진율' GUBUN_NM2, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '03'
 UNION
SELECT '21' GUBUN, SUBSTR(Y,3,2) || '.2Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE1/100000000 CASE1, CASE2/100000000 CASE2, CASE3/100000000 CASE3, CASE4/100000000 CASE4
  FROM CASE_T1
 WHERE M = '06'
 UNION
SELECT '22' GUBUN, SUBSTR(Y,3,2) || '.2Q' GUBUN_NM1, '소진율' GUBUN_NM2, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '06'
 UNION
SELECT '31' GUBUN, SUBSTR(Y,3,2) || '.3Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE1/100000000 CASE1, CASE2/100000000 CASE2, CASE3/100000000 CASE3, CASE4/100000000 CASE4
  FROM CASE_T1
 WHERE M = '09'
 UNION
SELECT '32' GUBUN, SUBSTR(Y,3,2) || '.3Q' GUBUN_NM1, '소진율' GUBUN_NM2, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '09'
 UNION
SELECT '41' GUBUN, SUBSTR(Y,3,2) || '.4Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE1/100000000 CASE1, CASE2/100000000 CASE2, CASE3/100000000 CASE3, CASE4/100000000 CASE4
  FROM CASE_T1
 WHERE M = '12'
 UNION
SELECT '42' GUBUN, SUBSTR(Y,3,2) || '.4Q' GUBUN_NM1, '소진율' GUBUN_NM2, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '12'
 ORDER BY GUBUN
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORMR011209" name="내부자본 한도 설정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>

		<parm id="sv_bas_yy" name="기준년도" parmid="sv_bas_yy" attr="S" default_value=""/>
		<parm id="sv_rgo_in_dsc" name="자본량기준" parmid="sv_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sv_sbdr_c" name="자회사코드" parmid="sv_sbdr_c" attr="S" default_value=""/>

		<parm id="coic_case_dsc" name="선택케이스구분코드" parmid="coic_case_dsc" attr="S" default_value=""/>
		<parm id="sv_mng_pln_rto" name="경영계획" parmid="sv_mng_pln_rto" attr="S" default_value="0"/>
		<parm id="sv_lss_am" name="손실금액" parmid="sv_lss_am" attr="S" default_value="0"/>
		<parm id="upload_sqno" name="업로드일련번호" parmid="upload_sqno" attr="S" default_value="0"/>
		
		
		<parm id="case_dsc" name="케이스구분코드" parmid="case_dsc" attr="A" default_value=""/>
		<parm id="est_buix_am" name="추정영업지수요소금액" parmid="est_buix_am" attr="A" default_value=""/>
		<parm id="est_lss_am" name="추정손실요소금액" parmid="est_lss_am" attr="A" default_value=""/>
		<parm id="buix_lmt_am" name="영업지수요소한도금액" parmid="buix_lmt_am" attr="A" default_value=""/>
		<parm id="lsx_lmt_am" name="손실요소한도금액" parmid="lsx_lmt_am" attr="A" default_value=""/>
		<parm id="in_lss_mltplr_val" name="내부손실승수값" parmid="in_lss_mltplr_val" attr="A" default_value=""/>
		<parm id="tot_ned_ownfds_lmt_am" name="총소요자기자본한도금액" parmid="tot_ned_ownfds_lmt_am" attr="A" default_value=""/>
		
		<parm id="m_case_dsc" name="케이스구분코드" parmid="m_case_dsc" attr="A" default_value=""/>
		<parm id="m_est_buix_am" name="추정영업지수요소금액" parmid="m_est_buix_am" attr="A" default_value=""/>
		<parm id="m_est_lss_am" name="추정손실요소금액" parmid="m_est_lss_am" attr="A" default_value=""/>
		<parm id="m_buix_lmt_am" name="영업지수요소한도금액" parmid="m_buix_lmt_am" attr="A" default_value=""/>
		<parm id="m_lsx_lmt_am" name="손실요소한도금액" parmid="m_lsx_lmt_am" attr="A" default_value=""/>
		<parm id="m_in_lss_mltplr_val" name="내부손실승수값" parmid="m_in_lss_mltplr_val" attr="A" default_value=""/>
		<parm id="m_tot_ned_ownfds_lmt_am" name="총소요자기자본한도금액" parmid="m_tot_ned_ownfds_lmt_am" attr="A" default_value=""/>
		
		<parm id="rt_case_dsc" name="소진율케이스구분코드" parmid="rt_case_dsc" attr="A" default_value=""/>
		<parm id="bas_mm" name="기준월" parmid="bas_mm" attr="A" default_value=""/>
		<parm id="tot_ned_ownfds" name="총소요자기자본" parmid="tot_ned_ownfds" attr="A" default_value=""/>
		<parm id="lmt_rto" name="소진율" parmid="lmt_rto" attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="내부한도설정삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE TB_OR_GA_INLMT            
 WHERE GRP_ORG_C = #grp_org_c#
   AND BASYY = #sch_bas_yy#
   AND RZT_YN = 'N'
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit02" name="내부한도케이스삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE TB_OR_GA_INLMT_CASE A          
 WHERE EXISTS ( 
    SELECT BASYY
        , RZT_YN 
    FROM TB_OR_GA_INLMT B
    WHERE GRP_ORG_C = #grp_org_c#
      AND BASYY = #sch_bas_yy#
      AND A.GRP_ORG_C = B.GRP_ORG_C
      AND A.BASYY = B.BASYY
      AND B.RZT_YN = 'N'
      )
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit04" name="내부한도설정Insert" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_INLMT (
   GRP_ORG_C, BASYY, RGO_IN_DSC, 
   SBDR_C, UPLOAD_SQNO, COIC_CASE_DSC, MNG_PLN_RTO, LSS_AM, RZT_YN, FIR_INP_DTM, 
   FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO) 
VALUES ( #grp_org_c#,
 #sch_bas_yy#,
 '2',
 '01',
 #upload_sqno#,
 #coic_case_dsc#,
 #sv_mng_pln_rto_bnk#,
 #sv_lss_am_bnk#,
 'N',
 SYSDATE,
 #userid#,
 SYSDATE,
 #userid# )
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit04" name="내부한도설정Insert" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_INLMT (
   GRP_ORG_C, BASYY, RGO_IN_DSC, 
   SBDR_C, UPLOAD_SQNO, COIC_CASE_DSC, MNG_PLN_RTO, LSS_AM, RZT_YN, FIR_INP_DTM, 
   FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO) 
VALUES ( #grp_org_c#,
 #sch_bas_yy#,
 '2',
 '02',
 #upload_sqno#,
 #coic_case_dsc#,
 #sv_mng_pln_rto_myn#,
 #sv_lss_am_myn#,
 'N',
 SYSDATE,
 #userid#,
 SYSDATE,
 #userid# )
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit05" name="내부한도케이스Insert" type="M" mode="insert" multiid="case_dsc">
				<multivalue id="est_buix_am" name="est_buix_am" multiid="est_buix_am"/>
				<multivalue id="est_lss_am" name="est_lss_am" multiid="est_lss_am"/>
				<multivalue id="buix_lmt_am" name="buix_lmt_am" multiid="buix_lmt_am"/>
				<multivalue id="lsx_lmt_am" name="lsx_lmt_am" multiid="lsx_lmt_am"/>
				<multivalue id="in_lss_mltplr_val" name="in_lss_mltplr_val" multiid="in_lss_mltplr_val"/>
				<multivalue id="tot_ned_ownfds_lmt_am" name="tot_ned_ownfds_lmt_am" multiid="tot_ned_ownfds_lmt_am"/>
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_INLMT_CASE (
   GRP_ORG_C, BASYY, RGO_IN_DSC, 
   SBDR_C, CASE_DSC, EST_BUIX_AM, EST_LSS_AM, 
   BUIX_LMT_AM, LSX_LMT_AM, IN_LSS_MLTPLR_VAL, 
   TOT_NED_OWNFDS_LMT_AM, FIR_INP_DTM, FIR_INPMN_ENO, 
   LSCHG_DTM, LS_WKR_ENO) 
VALUES ( #grp_org_c#,
 #sch_bas_yy#,
 '2',
 '01',
 #case_dsc#,
 #est_buix_am#,
 #est_lss_am#,
 #buix_lmt_am#,
 #lsx_lmt_am#,
 #in_lss_mltplr_val#,
 #tot_ned_ownfds_lmt_am#,
 SYSDATE,
 #userid#,
 SYSDATE,
 #userid# )
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit06" name="내부한도케이스Insert" type="M" mode="insert" multiid="m_case_dsc">
				<multivalue id="m_est_buix_am" name="m_est_buix_am" multiid="m_est_buix_am"/>
				<multivalue id="m_est_lss_am" name="m_est_lss_am" multiid="m_est_lss_am"/>
				<multivalue id="m_buix_lmt_am" name="m_buix_lmt_am" multiid="m_buix_lmt_am"/>
				<multivalue id="m_lsx_lmt_am" name="m_lsx_lmt_am" multiid="m_lsx_lmt_am"/>
				<multivalue id="m_in_lss_mltplr_val" name="m_in_lss_mltplr_val" multiid="m_in_lss_mltplr_val"/>
				<multivalue id="m_tot_ned_ownfds_lmt_am" name="m_tot_ned_ownfds_lmt_am" multiid="m_tot_ned_ownfds_lmt_am"/>
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
 INSERT INTO TB_OR_GA_INLMT_CASE (
   GRP_ORG_C, BASYY, RGO_IN_DSC, 
   SBDR_C, CASE_DSC, EST_BUIX_AM, EST_LSS_AM, 
   BUIX_LMT_AM, LSX_LMT_AM, IN_LSS_MLTPLR_VAL, 
   TOT_NED_OWNFDS_LMT_AM, FIR_INP_DTM, FIR_INPMN_ENO, 
   LSCHG_DTM, LS_WKR_ENO) 
VALUES ( #grp_org_c#,
 #sch_bas_yy#,
 '2',
 '02',
 #m_case_dsc#,
 #m_est_buix_am#,
 #m_est_lss_am#,
 #m_buix_lmt_am#,
 #m_lsx_lmt_am#,
 #m_in_lss_mltplr_val#,
 #m_tot_ned_ownfds_lmt_am#,
 SYSDATE,
 #userid#,
 SYSDATE,
 #userid# )
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011210" name="내부자본한도저장조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT A.GRP_ORG_C, A.BASYY, A.RGO_IN_DSC, A.SBDR_C, A.MNG_PLN_RTO, A.LSS_AM, A.COIC_CASE_DSC
						   FROM TB_OR_GA_INLMT A
						  WHERE A.GRP_ORG_C = #grp_org_c#
						    AND A.BASYY = #sch_bas_yy#
						 ORDER BY SBDR_C
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORMR011211" name="내부자본한도설정CASE조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정CASE조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH
T1 AS (
SELECT GRP_ORG_C
    , BASYY
    , RGO_IN_DSC
    , SBDR_C
    , COIC_CASE_DSC
    , MNG_PLN_RTO
    , LSS_AM
FROM TB_OR_GA_INLMT
),
S1 AS (
SELECT GRP_ORG_C
    , BASYY
    , RGO_IN_DSC
    , SBDR_C
    , CASE_DSC
    , EST_BUIX_AM
    , EST_LSS_AM
    , BUIX_LMT_AM
    , LSX_LMT_AM
    , IN_LSS_MLTPLR_VAL
    , TOT_NED_OWNFDS_LMT_AM
FROM TB_OR_GA_INLMT_CASE
WHERE GRP_ORG_C = #grp_org_c#
  AND BASYY = #sch_bas_yy#
  AND RGO_IN_DSC = '2'
  AND SBDR_C = '01'
),
S2 AS (
SELECT GRP_ORG_C
    , BASYY
    , RGO_IN_DSC
    , SBDR_C
    , CASE_DSC
    , EST_BUIX_AM
    , EST_LSS_AM
    , BUIX_LMT_AM
    , LSX_LMT_AM
    , IN_LSS_MLTPLR_VAL
    , TOT_NED_OWNFDS_LMT_AM
FROM TB_OR_GA_INLMT_CASE
WHERE GRP_ORG_C = #grp_org_c#
  AND BASYY = #sch_bas_yy#
  AND RGO_IN_DSC = '2'
  AND SBDR_C = '02'
)SELECT CASE 
    WHEN B.CASE_DSC = 1 THEN 'Case 1'
    WHEN B.CASE_DSC = 2 THEN 'Case 2'
    WHEN B.CASE_DSC = 3 THEN 'Case 3'
    WHEN B.CASE_DSC = 4 THEN 'Case 4'
    END AS BASE
    , A.BASYY       
    , A.RGO_IN_DSC
    , A.COIC_CASE_DSC  
    , CASE 
    WHEN B.CASE_DSC = 1 THEN '신뢰수준 99% 및 버퍼 설정'
    WHEN B.CASE_DSC = 2 THEN '신뢰수준 95% 및 버퍼 설정'
    WHEN B.CASE_DSC = 3 THEN '신뢰수준 99%'
    WHEN B.CASE_DSC = 4 THEN '신뢰수준 95%'
    END AS GUBUN
    , B.EST_BUIX_AM BIC_EST
    , B.EST_LSS_AM  LC_EST
    , B.BUIX_LMT_AM BIC
    , B.LSX_LMT_AM  LC
    , B.IN_LSS_MLTPLR_VAL   ILM
    , B.TOT_NED_OWNFDS_LMT_AM   ORC
    , C.EST_BUIX_AM M_BIC_EST
    , C.EST_LSS_AM M_LC_EST
    , C.BUIX_LMT_AM M_BIC
    , C.LSX_LMT_AM M_LC
    , C.IN_LSS_MLTPLR_VAL M_ILM
    , C.TOT_NED_OWNFDS_LMT_AM M_ORC
    , B.TOT_NED_OWNFDS_LMT_AM + C.TOT_NED_OWNFDS_LMT_AM G_ORC
FROM T1 A
    ,S1 B
    ,S2 C
WHERE A.BASYY = B.BASYY
  AND A.BASYY = C.BASYY
  AND A.RGO_IN_DSC = B.RGO_IN_DSC
  AND A.RGO_IN_DSC = C.RGO_IN_DSC
  AND B.CASE_DSC = C.CASE_DSC
GROUP BY A.BASYY, A.RGO_IN_DSC, B.CASE_DSC, B.EST_BUIX_AM, B.EST_LSS_AM, B.BUIX_LMT_AM, B.LSX_LMT_AM, B.IN_LSS_MLTPLR_VAL, B.TOT_NED_OWNFDS_LMT_AM
    , C.EST_BUIX_AM, C.EST_LSS_AM, C.BUIX_LMT_AM, C.LSX_LMT_AM, C.IN_LSS_MLTPLR_VAL, C.TOT_NED_OWNFDS_LMT_AM, A.COIC_CASE_DSC
ORDER BY B.CASE_DSC
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORMR011212" name="한도 소진율 유효 계산" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="법인" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="손실 금액 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))) BAS_YY, DECODE(B.BASYY,'','N','Y') SAVE_YN, A.UPLOAD_SQNO, B.RZT_YN
  FROM TB_OR_GA_MSRRZT A
  LEFT JOIN TB_OR_GA_INLMT B
    ON A.GRP_ORG_C = B.GRP_ORG_C
   AND TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))) = B.BASYY
 WHERE A.GRP_ORG_C = #grp_org_c#
   AND SUBSTR(A.BAS_YM,5,2) = '09'
GROUP BY TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))), DECODE(B.BASYY,'','N','Y') , A.UPLOAD_SQNO, B.RZT_YN
ORDER BY TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))) DESC
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>	
		</group>
	</process>
	<process id="ORMR011213" name="최종확정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정 최종 확정" type="S" mode="update" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
UPDATE TB_OR_GA_INLMT
SET RZT_YN = 'Y'
WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
AND BASYY = TRIM(#sch_bas_yy#)					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR011401" name="운영리스크 개별 위기상황분석 결과조회" forward="/msr/ORMR0114" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 									
	SUBSTR(BAS_YM,1,4) AS BAS_YY  	
 FROM TB_OR_GA_FNASTM_UPLOAD  		
 WHERE GRP_ORG_C=TRIM(#grp_org_c#) 				
 GROUP BY SUBSTR(BAS_YM,1,4) 			
 ORDER BY SUBSTR(BAS_YM,1,4) DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011402" name="BIC 및 LC 증감률" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH
M1 AS(
    SELECT MIN(BAS_YM) BAS_YM FROM TB_OR_GA_MSRELM WHERE MSR_ELM_DSCD = 'E600'
), T1 AS (
    SELECT
        BAS_YM
        ,MSR_AM
        FROM TB_OR_GA_MSRELM
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
      AND BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-63),'YYYYMMDD')
      AND BAS_YM &lt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1),'YYYYMMDD')
      AND MSR_ELM_DSCD = 'E400'
      AND RGO_IN_DSC = '1'
      AND SBDR_C = '00'
    GROUP BY BAS_YM , MSR_AM
    ORDER BY BAS_YM ASC
), T2 AS (
    SELECT
        BAS_YM
        ,MSR_AM
        FROM TB_OR_GA_MSRELM
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
      AND BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-63),'YYYYMMDD')
      AND BAS_YM &lt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1),'YYYYMMDD')
      AND MSR_ELM_DSCD = 'E500'
      AND RGO_IN_DSC = '1'
      AND SBDR_C = '00'
    GROUP BY BAS_YM , MSR_AM
    ORDER BY BAS_YM ASC
), T3 AS (
    SELECT
        BAS_YM
        ,RGO_IN_DSC
        ,SUM(MSR_AM) / 10 AS MSR_AM
        FROM TB_OR_GA_MSRELM
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
      AND BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-63),'YYYYMMDD')
      AND BAS_YM &lt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),1),'YYYYMMDD')
      AND MSR_ELM_DSCD = 'E600'
      AND RGO_IN_DSC = '2'
    GROUP BY BAS_YM , RGO_IN_DSC
    ORDER BY BAS_YM ASC
), T4 AS (
    SELECT
        TO_CHAR(ADD_MONTHS(TO_DATE(BAS_YM,'YYYYMM'),3),'YYYYMM') AS BAS_YM
        ,MSR_AM
        FROM TB_OR_GA_MSRELM
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
      AND BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-66),'YYYYMMDD')
      AND BAS_YM &lt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-3),'YYYYMMDD')
      AND MSR_ELM_DSCD = 'E500'
      AND RGO_IN_DSC = '1'
      AND SBDR_C = '00'
    
UNION ALL
SELECT
       TO_CHAR(ADD_MONTHS(TO_DATE(#sch_bas_ym#,'YYYYMM'),-60),'YYYYMM') AS BAS_YM, 0 MSR_AM
       FROM DUAL
    ORDER BY BAS_YM ASC
), T5 AS (
    SELECT
        TO_CHAR(ADD_MONTHS(TO_DATE(BAS_YM,'YYYYMM'),3),'YYYYMM') AS BAS_YM
        ,RGO_IN_DSC
        ,SUM(MSR_AM)  / 10 AS MSR_AM
        FROM TB_OR_GA_MSRELM
    WHERE GRP_ORG_C = TRIM(#grp_org_c#)
      AND BAS_YM &gt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-66),'YYYYMMDD')
      AND BAS_YM &lt; TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#sch_bas_ym#),'YYYYMM'),-3),'YYYYMMDD')
      AND MSR_ELM_DSCD = 'E600'
      AND RGO_IN_DSC = '2'
    GROUP BY BAS_YM, RGO_IN_DSC
UNION ALL
SELECT
       TO_CHAR(ADD_MONTHS(TO_DATE(B.BAS_YM,'YYYYMM'),0),'YYYYMM') AS BAS_YM, '2' RGO_IN_DSC, 0 MSR_AM
       FROM DUAL A
       ,M1 B
    ORDER BY BAS_YM ASC
), T21 AS (
    SELECT 
        A.BAS_YM
        , DECODE(B.MSR_AM, 0, 0, (A.MSR_AM - B.MSR_AM) / A.MSR_AM) * 100 AS MSR_AM
    FROM T2 A
    LEFT JOIN T4 B
      ON B.BAS_YM = A.BAS_YM
), T22 AS (
    SELECT 
        A.BAS_YM
        , DECODE(B.MSR_AM, 0, 0, (A.MSR_AM - B.MSR_AM) / A.MSR_AM) * 100 AS MSR_AM
    FROM T3 A
    LEFT JOIN T5 B
      ON B.BAS_YM = A.BAS_YM
) SELECT '' AS GUBUN
    , CASE 
    WHEN A.BAS_YM LIKE '%03' THEN REPLACE(A.BAS_YM, '03', ' 1Q')
    WHEN A.BAS_YM LIKE '%06' THEN REPLACE(A.BAS_YM, '06', ' 2Q')
    WHEN A.BAS_YM LIKE '%09' THEN REPLACE(A.BAS_YM, '09', ' 3Q')
    WHEN A.BAS_YM LIKE '%12' THEN REPLACE(A.BAS_YM, '12', ' 4Q')
    END AS BAS_YM
    ,A.MSR_AM AS BI
    ,B.MSR_AM AS BIC
    ,ROUND(C.MSR_AM,2) AS BIC_CH
    ,D.MSR_AM / (SELECT LEAST(MONTHS_BETWEEN(TO_DATE(#sch_bas_ym#,'YYYYMM'), TO_DATE(TRIM(RMK_CNTN),'YYYYMM'))+3, 120)
           FROM TB_OR_OM_CODE 
         WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
           AND INTG_GRP_C = 'SBDR_C' 
           AND IDVDC_VAL = '01')
     * 12 AS YEAR_AVG_LC
    ,D.MSR_AM AS LC
    ,ROUND(E.MSR_AM,2) AS LC_CH
  FROM T1 A
  LEFT JOIN T2 B
    ON A.BAS_YM = B.BAS_YM
  LEFT JOIN T21 C
    ON A.BAS_YM = C.BAS_YM
  LEFT JOIN T3 D
    ON A.BAS_YM = D.BAS_YM
  LEFT JOIN T22 E
    ON A.BAS_YM = E.BAS_YM					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011403" name="위기단계 별 적용계수 설정 및 위기단계 별 Op.RWA 산출" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">		
SELECT '위기수준' AS SIM1
    ,'단계' AS SIM2
    ,'BIC계수' AS GUBUN1
    ,'LC계수' AS GUBUN2
    ,'' AS BIC
    ,'' AS LC
    ,'' AS ILM
    ,'' AS ORC
    ,'' AS RWA
    ,'' AS ORC1
    ,'' AS ORC2
FROM DUAL
UNION ALL
SELECT '주의'
    ,'1단계'
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
FROM DUAL
UNION ALL
SELECT '경계'
    ,'2단계'
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
FROM DUAL
UNION ALL
SELECT '심각'
    ,'3단계'
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
FROM DUAL
UNION ALL
SELECT 'Simulation'
    ,'Simulation'
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
    ,''
FROM DUAL		
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011601" name="측정업무보고서" forward="/msr/ORMR0116" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 									
	SUBSTR(BAS_YM,1,4) AS BAS_YY  	
 FROM TB_OR_GA_FNASTM_UPLOAD  		
 WHERE GRP_ORG_C=TRIM(#grp_org_c#) 				
 GROUP BY SUBSTR(BAS_YM,1,4) 			
 ORDER BY SUBSTR(BAS_YM,1,4) DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011602" name="측정 업무 보고서 결재 상신" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit04" name="측정 업무 보고서 결재 상신" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_MSRRZT_DCZ (
      GRP_ORG_C
     , BAS_YM
     , DCZ_SQNO
     , DCZ_DT
     , RK_EVL_DCZ_STSC
     , RTN_CNTN
     , FIR_INP_DTM
     , FIR_INPMN_ENO
     , LSCHG_DTM
     , LS_WKR_ENO
  )
SELECT 
      GRP_ORG_C
     , BAS_YM
     , DCZ_SQNO + 1
     , DCZ_DT
     , '14'
     , RTN_CNTN
     , FIR_INP_DTM
     , FIR_INPMN_ENO
     , SYSDATE
     , LS_WKR_ENO    
FROM TB_OR_GA_MSRRZT_DCZ
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND BAS_YM = TRIM(#sch_rtn_cntn#)
					</data>					
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit99" name="측정 업무 보고서 결재" type="S" mode="update" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
UPDATE  TB_OR_GA_MSRRZT
SET	DCZ_SQNO = DCZ_SQNO + 1,
	LSCHG_DTM = SYSDATE
WHERE GRP_ORG_C = TRIM(#grp_org_c#)
  AND BAS_YM = TRIM(#sch_rtn_cntn#)
					</data>					
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR011801" name="내부 자본량 연간 한도 및 소진율 관련 가이드라인" forward="/msr/ORMR0118" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
	</process>
	
	<process id="ORMR031401" name="내부자본한도설정" forward="/msr/ORMR0314" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="유효년도 조회" type="S" mode="select" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
SELECT 									
	SUBSTR(BAS_YM,1,4) AS BAS_YY  	
 FROM TB_OR_GA_FNASTM_UPLOAD  		
 WHERE GRP_ORG_C=TRIM(#grp_org_c#) 				
 GROUP BY SUBSTR(BAS_YM,1,4) 			
 ORDER BY SUBSTR(BAS_YM,1,4) DESC					
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<process id="ORMR031402" name="내부자본한도설정" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="법인" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))+1) BAS_YY, DECODE(B.BASYY,'','N','Y') SAVE_YN, A.UPLOAD_SQNO
						   FROM TB_OR_GA_MSRRZT A
						   LEFT JOIN TB_OR_GA_INLMT B
						     ON A.GRP_ORG_C = B.GRP_ORG_C
						    AND TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))+1) = B.BASYY
						  WHERE A.GRP_ORG_C = #grp_org_c#
						    AND SUBSTR(A.BAS_YM,5,2) = '03'
						  ORDER BY TO_CHAR(TO_NUMBER(SUBSTR(A.BAS_YM,1,4))+1) DESC
						 --SELECT '2021' BAS_YY, 'N' SAVE_YN FROM DUAL
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORMR031404" name="내부자본한도설정CASE조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정CASE조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(BIZ_IX_FCTR_AM,0) BIC
      FROM TB_OR_GA_MSRRZT
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 5) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T1 --BIC평균
),
T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T1
),
T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T1
),
T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T1
         UNION
        SELECT X,  BIC 
          FROM T1
      )
),
T1_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T1
),
T1_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T1_VARIANCE A
      INNER JOIN T1_COVAR_POP
         ON 1=1
),
T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T1_AVG_BIC A
      INNER JOIN T1_AVG_X
         ON 1=1
      INNER JOIN T1_BETA
         ON 1=1
),
T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM T1_Y
     INNER JOIN T1_MAX_X
       ON 1=1
     INNER JOIN T1_BETA
       ON 1=1
),  
T2 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(BIZ_IX_FCTR_AM,0) BIC
      FROM (
        SELECT BAS_YM, BIZ_IX_FCTR_AM
          FROM TB_OR_GA_MSRRZT
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = #sch_rgo_in_dsc#
		   AND SBDR_C = #sch_sbdr_c#
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 5) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) BIZ_IX_FCTR_AM
          FROM T1_BIC_EST
      )
),
T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T2 --BIC평균
),
T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T2
),
T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T2
),
T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T2
         UNION
        SELECT X,  BIC 
          FROM T2
      )
),
T2_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T2
),
T2_BETA AS (
     SELECT DECODE(VARIANCE_X, 0, 0,COVAR_SAMP / VARIANCE_X) AS BETA
       FROM T2_VARIANCE A
      INNER JOIN T2_COVAR_POP
         ON 1=1
),
T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T2_AVG_BIC A
      INNER JOIN T2_AVG_X
         ON 1=1
      INNER JOIN T2_BETA
         ON 1=1
),
T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T2_Y
     INNER JOIN T2_MAX_X
       ON 1=1
     INNER JOIN T2_BETA
       ON 1=1
     INNER JOIN T2_VARIANCE
       ON 1=1
),
T3 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(LSS_FCTR_AM,0) BIC
      FROM TB_OR_GA_MSRRZT
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       --AND (BAS_YM = TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '09' OR SUBSTR(BAS_YM,5,2) = '12')
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 10) || '00'
       AND BAS_YM &lt;= TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
       AND BAS_YM IN (
            SELECT SUBSTR(BAS_YM,1,4) || MAX(SUBSTR(BAS_YM,5,2))
              FROM TB_OR_GA_MSRRZT
             WHERE GRP_ORG_C = #grp_org_c#
               AND RGO_IN_DSC = #sch_rgo_in_dsc#
               AND SBDR_C = #sch_sbdr_c#
               AND LSS_FCTR_AM IS NOT NULL
             GROUP BY  SUBSTR(BAS_YM,1,4)
	 )
),
T3_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T3 --BIC평균
),
T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T3
),
T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T3
),
T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T3
         UNION
        SELECT X,  BIC 
          FROM T3
      )
),
T3_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T3
),
T3_BETA AS (
     SELECT COVAR_POP / VARIANCE_X AS BETA
       FROM T3_VARIANCE A
      INNER JOIN T3_COVAR_POP
         ON 1=1
),
T3_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T3_AVG_BIC A
      INNER JOIN T3_AVG_X
         ON 1=1
      INNER JOIN T3_BETA
         ON 1=1
),
T3_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T3_Y
     INNER JOIN T3_MAX_X
       ON 1=1
     INNER JOIN T3_BETA
       ON 1=1
     INNER JOIN T3_VARIANCE
       ON 1=1
),
T4 AS (
    SELECT  SUBSTR(BAS_YM,1,4) Y, SUBSTR(BAS_YM,5,2) M, NVL(TOT_NED_OWNFDS,0) ORC
      FROM TB_OR_GA_MSRRZT 
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       AND SUBSTR(BAS_YM,1,4) =  TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
       --AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
CASE_T01 AS (
    SELECT BIC CASE1, BIC CASE2, BIC CASE3, BIC CASE4
      FROM T1_BIC_EST
),
CASE_T02 AS (
    SELECT BIC + (SQRT * 2.33) CASE1
         , BIC + (SQRT * 1.65) CASE2
         , (BIC + (SQRT * 2.33)) * (1 + NVL(TO_NUMBER(#mng_pln_rto#),0)/100) CASE3
         , (BIC + (SQRT * 1.65)) * (1 + NVL(TO_NUMBER(#mng_pln_rto#),0)/100) CASE4
      FROM T2_BIC_EST
),
CASE_T03 AS (
    SELECT BIC + (SQRT * 2.33) CASE1
         , BIC + (SQRT * 1.65) CASE2
         , BIC + (SQRT * 2.33) + NVL(TO_NUMBER(#lss_am#),0) CASE3
         , BIC + (SQRT * 1.65) + NVL(TO_NUMBER(#lss_am#),0) CASE4
      FROM T3_BIC_EST
),
CASE_T04 AS (
    SELECT LN(EXP(1)-1 + POWER((CT3.CASE1/CT2.CASE1),0.8)) CASE1
         , LN(EXP(1)-1 + POWER((CT3.CASE2/CT2.CASE2),0.8)) CASE2
         , LN(EXP(1)-1 + POWER((CT3.CASE3/CT2.CASE3),0.8)) CASE3
         , LN(EXP(1)-1 + POWER((CT3.CASE4/CT2.CASE4),0.8)) CASE4
      FROM CASE_T02 CT2
     INNER JOIN CASE_T03 CT3
       ON 1=1
),
CASE_T05 AS (
    SELECT CT4.CASE1*CT2.CASE1 CASE1
         , CT4.CASE2*CT2.CASE2 CASE2
         , CT4.CASE3*CT2.CASE3 CASE3
         , CT4.CASE4*CT2.CASE4 CASE4
      FROM CASE_T02 CT2
     INNER JOIN CASE_T04 CT4
       ON 1=1
),
CASE_T1 AS (
    SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) Y, MON.M, T4.ORC CASE1
         , T4.ORC / T05.CASE1 RT1
         , T4.ORC CASE2
         , T4.ORC / T05.CASE2 RT2
         , T4.ORC CASE3
         , T4.ORC / T05.CASE3 RT3
         , T4.ORC CASE4
         , T4.ORC / T05.CASE4 RT4
      FROM (
        SELECT '03' M FROM DUAL
         UNION SELECT '06' M FROM DUAL
         UNION SELECT '09' M FROM DUAL
         UNION SELECT '12' M FROM DUAL
      ) MON
      INNER JOIN CASE_T05 T05
         ON 1=1
      LEFT JOIN T4
        ON MON.M = T4.M
)
SELECT '01' GUBUN, '추정BIC' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T01
 UNION
SELECT '02' GUBUN, 'BIC 한도' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T02
 UNION
SELECT '03' GUBUN, 'LC 한도' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T03
 UNION
SELECT '04' GUBUN, 'ILM' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T04
 UNION
SELECT '05' GUBUN, 'ORC 한도' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T05
/*  
 UNION
SELECT '11' GUBUN, Y || '1Q' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T1
 WHERE M = '03'
 UNION
SELECT '12' GUBUN, '한도 소진율' GUBUN_NM, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '03'
 UNION
SELECT '21' GUBUN, Y || '2Q' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T1
 WHERE M = '06'
 UNION
SELECT '22' GUBUN, '한도 소진율' GUBUN_NM, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '06'
 UNION
SELECT '31' GUBUN, Y || '3Q' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T1
 WHERE M = '09'
 UNION
SELECT '32' GUBUN, '한도 소진율' GUBUN_NM, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '09'
 UNION
SELECT '41' GUBUN, Y || '4Q' GUBUN_NM, CASE1, CASE2, CASE3, CASE4
  FROM CASE_T1
 WHERE M = '12'
 UNION
SELECT '42' GUBUN, '한도 소진율' GUBUN_NM, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '12'
*/
 ORDER BY GUBUN 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORMR031405" name="내부자본한도소진율시뮬레이션조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도소진율시뮬레이션조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(BIZ_IX_FCTR_AM,0) BIC
      FROM TB_OR_GA_MSRRZT
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 5) || '00'
       AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
T1_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T1 --BIC평균
),
T1_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T1
),
T1_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T1
),
T1_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T1
         UNION
        SELECT X,  BIC 
          FROM T1
      )
),
T1_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T1
),
T1_BETA AS (
     SELECT COVAR_POP / VARIANCE_X AS BETA
       FROM T1_VARIANCE A
      INNER JOIN T1_COVAR_POP
         ON 1=1
),
T1_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T1_AVG_BIC A
      INNER JOIN T1_AVG_X
         ON 1=1
      INNER JOIN T1_BETA
         ON 1=1
),
T1_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC
      FROM T1_Y
     INNER JOIN T1_MAX_X
       ON 1=1
     INNER JOIN T1_BETA
       ON 1=1
),  
T2 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(BIZ_IX_FCTR_AM,0) BIC
      FROM (
        SELECT BAS_YM, BIZ_IX_FCTR_AM
          FROM TB_OR_GA_MSRRZT
     	 WHERE GRP_ORG_C = #grp_org_c#
		   AND RGO_IN_DSC = #sch_rgo_in_dsc#
		   AND SBDR_C = #sch_sbdr_c#
           AND SUBSTR(BAS_YM,5,2) = '12'
           AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 5) || '00'
           AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
         UNION
        SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12' BAS_YM, CAST(BIC AS NUMBER(21)) BIZ_IX_FCTR_AM
          FROM T1_BIC_EST
      )
),
T2_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T2 --BIC평균
),
T2_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T2
),
T2_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T2
),
T2_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T2
         UNION
        SELECT X,  BIC 
          FROM T2
      )
),
T2_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T2
),
T2_BETA AS (
     SELECT COVAR_POP / VARIANCE_X AS BETA
       FROM T2_VARIANCE A
      INNER JOIN T2_COVAR_POP
         ON 1=1
),
T2_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T2_AVG_BIC A
      INNER JOIN T2_AVG_X
         ON 1=1
      INNER JOIN T2_BETA
         ON 1=1
),
T2_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T2_Y
     INNER JOIN T2_MAX_X
       ON 1=1
     INNER JOIN T2_BETA
       ON 1=1
     INNER JOIN T2_VARIANCE
       ON 1=1
),
T3 AS (
    SELECT RANK() OVER(ORDER BY BAS_YM) X, NVL(LSS_FCTR_AM,0) BIC
      FROM TB_OR_GA_MSRRZT
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       --AND (BAS_YM = TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '09' OR SUBSTR(BAS_YM,5,2) = '12')
       AND BAS_YM &gt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 10) || '00'
       AND BAS_YM &lt;= TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
       AND BAS_YM IN (
            SELECT SUBSTR(BAS_YM,1,4) || MAX(SUBSTR(BAS_YM,5,2))
              FROM TB_OR_GA_MSRRZT
             WHERE GRP_ORG_C = #grp_org_c#
               AND RGO_IN_DSC = #sch_rgo_in_dsc#
               AND SBDR_C = #sch_sbdr_c#
               AND LSS_FCTR_AM IS NOT NULL
             GROUP BY  SUBSTR(BAS_YM,1,4)
	 )
),
T3_AVG_BIC AS (
    SELECT  AVG(BIC) AS AVG_BIC 
      FROM T3 --BIC평균
),
T3_AVG_X AS (
    SELECT  AVG(X) AS AVG_X 
      FROM T3
),
T3_MAX_X AS (
    SELECT  MAX(X) AS MAX_X 
      FROM T3
),
T3_VARIANCE AS (
    SELECT VARIANCE(X) AS VARIANCE_X, VARIANCE(BIC) AS VARIANCE_BIC
      FROM (
        SELECT AVG(X) X, AVG(BIC) BIC 
          FROM T3
         UNION
        SELECT X,  BIC 
          FROM T3
      )
),
T3_COVAR_POP AS (
    SELECT COVAR_POP(BIC,X) AS COVAR_POP 
      FROM T3
),
T3_BETA AS (
     SELECT COVAR_POP / VARIANCE_X AS BETA
       FROM T3_VARIANCE A
      INNER JOIN T3_COVAR_POP
         ON 1=1
),
T3_Y AS (
     SELECT AVG_BIC - BETA * AVG_X AS Y_INTERCEPT
       FROM T3_AVG_BIC A
      INNER JOIN T3_AVG_X
         ON 1=1
      INNER JOIN T3_BETA
         ON 1=1
),
T3_BIC_EST AS (
    SELECT 't' AS T, (MAX_X + 1) X, Y_INTERCEPT + BETA * (MAX_X + 1) BIC, SQRT(VARIANCE_BIC) SQRT
      FROM T3_Y
     INNER JOIN T3_MAX_X
       ON 1=1
     INNER JOIN T3_BETA
       ON 1=1
     INNER JOIN T3_VARIANCE
       ON 1=1
),
T4 AS (
    SELECT  SUBSTR(BAS_YM,1,4) Y, SUBSTR(BAS_YM,5,2) M, NVL(TOT_NED_OWNFDS,0) ORC
      FROM TB_OR_GA_MSRRZT 
     WHERE GRP_ORG_C = #grp_org_c#
	   AND RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND SBDR_C = #sch_sbdr_c#
       AND SUBSTR(BAS_YM,1,4) =  TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1)
       --AND BAS_YM &lt; TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) || '12'
),
CASE_T01 AS (
    SELECT BIC CASE1, BIC CASE2, BIC CASE3, BIC CASE4
      FROM T1_BIC_EST
),
CASE_T02 AS (
    SELECT BIC + (SQRT * 2.33) CASE1
         , BIC + (SQRT * 1.65) CASE2
         , (BIC + (SQRT * 2.33)) * (1 + NVL(TO_NUMBER(#mng_pln_rto#),0)/100) CASE3
         , (BIC + (SQRT * 1.65)) * (1 + NVL(TO_NUMBER(#mng_pln_rto#),0)/100) CASE4
      FROM T2_BIC_EST
),
CASE_T03 AS (
    SELECT BIC + (SQRT * 2.33) CASE1
         , BIC + (SQRT * 1.65) CASE2
         , BIC + (SQRT * 2.33) + NVL(TO_NUMBER(#lss_am#),0) CASE3
         , BIC + (SQRT * 1.65) + NVL(TO_NUMBER(#lss_am#),0) CASE4
      FROM T3_BIC_EST
),
CASE_T04 AS (
    SELECT LN(EXP(1)-1 + POWER((CT3.CASE1/CT2.CASE1),0.8)) CASE1
         , LN(EXP(1)-1 + POWER((CT3.CASE2/CT2.CASE2),0.8)) CASE2
         , LN(EXP(1)-1 + POWER((CT3.CASE3/CT2.CASE3),0.8)) CASE3
         , LN(EXP(1)-1 + POWER((CT3.CASE4/CT2.CASE4),0.8)) CASE4
      FROM CASE_T02 CT2
     INNER JOIN CASE_T03 CT3
       ON 1=1
),
CASE_T05 AS (
    SELECT CT4.CASE1*CT2.CASE1 CASE1
         , CT4.CASE2*CT2.CASE2 CASE2
         , CT4.CASE3*CT2.CASE3 CASE3
         , CT4.CASE4*CT2.CASE4 CASE4
      FROM CASE_T02 CT2
     INNER JOIN CASE_T04 CT4
       ON 1=1
),
CASE_T1 AS (
    SELECT TO_CHAR(TO_NUMBER(#sch_bas_yy#) - 1) Y, MON.M, T4.ORC CASE1
         , T4.ORC / T05.CASE1 RT1
         , T4.ORC CASE2
         , T4.ORC / T05.CASE2 RT2
         , T4.ORC CASE3
         , T4.ORC / T05.CASE3 RT3
         , T4.ORC CASE4
         , T4.ORC / T05.CASE4 RT4
      FROM (
        SELECT '03' M FROM DUAL
         UNION SELECT '06' M FROM DUAL
         UNION SELECT '09' M FROM DUAL
         UNION SELECT '12' M FROM DUAL
      ) MON
      INNER JOIN CASE_T05 T05
         ON 1=1
      LEFT JOIN T4
        ON MON.M = T4.M
)
SELECT '11' GUBUN, SUBSTR(Y,3,2) || '.1Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE1/100000000 CASE1, CASE2/100000000 CASE2, CASE3/100000000 CASE3, CASE4/100000000 CASE4
  FROM CASE_T1
 WHERE M = '03'
 UNION
SELECT '12' GUBUN, SUBSTR(Y,3,2) || '.1Q' GUBUN_NM1, '소진율' GUBUN_NM2, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '03'
 UNION
SELECT '21' GUBUN, SUBSTR(Y,3,2) || '.2Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE1/100000000 CASE1, CASE2/100000000 CASE2, CASE3/100000000 CASE3, CASE4/100000000 CASE4
  FROM CASE_T1
 WHERE M = '06'
 UNION
SELECT '22' GUBUN, SUBSTR(Y,3,2) || '.2Q' GUBUN_NM1, '소진율' GUBUN_NM2, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '06'
 UNION
SELECT '31' GUBUN, SUBSTR(Y,3,2) || '.3Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE1/100000000 CASE1, CASE2/100000000 CASE2, CASE3/100000000 CASE3, CASE4/100000000 CASE4
  FROM CASE_T1
 WHERE M = '09'
 UNION
SELECT '32' GUBUN, SUBSTR(Y,3,2) || '.3Q' GUBUN_NM1, '소진율' GUBUN_NM2, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '09'
 UNION
SELECT '41' GUBUN, SUBSTR(Y,3,2) || '.4Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE1/100000000 CASE1, CASE2/100000000 CASE2, CASE3/100000000 CASE3, CASE4/100000000 CASE4
  FROM CASE_T1
 WHERE M = '12'
 UNION
SELECT '42' GUBUN, SUBSTR(Y,3,2) || '.4Q' GUBUN_NM1, '소진율' GUBUN_NM2, RT1, RT2, RT3, RT4
  FROM CASE_T1
 WHERE M = '12'
 ORDER BY GUBUN 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORMR031406" name="내부자본 한도 설정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>

		<parm id="sv_bas_yy" name="기준년도" parmid="sv_bas_yy" attr="S" default_value=""/>
		<parm id="sv_rgo_in_dsc" name="자본량기준" parmid="sv_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sv_sbdr_c" name="자회사코드" parmid="sv_sbdr_c" attr="S" default_value=""/>

		<parm id="coic_case_dsc" name="선택케이스구분코드" parmid="coic_case_dsc" attr="S" default_value=""/>
		<parm id="sv_mng_pln_rto" name="경영계획" parmid="sv_mng_pln_rto" attr="S" default_value="0"/>
		<parm id="sv_lss_am" name="손실금액" parmid="sv_lss_am" attr="S" default_value="0"/>
		<parm id="upload_sqno" name="업로드일련번호" parmid="upload_sqno" attr="S" default_value="0"/>
		
		
		<parm id="case_dsc" name="케이스구분코드" parmid="case_dsc" attr="A" default_value=""/>
		<parm id="est_buix_am" name="추정영업지수요소금액" parmid="est_buix_am" attr="A" default_value=""/>
		<parm id="buix_lmt_am" name="영업지수요소한도금액" parmid="buix_lmt_am" attr="A" default_value=""/>
		<parm id="lsx_lmt_am" name="손실요소한도금액" parmid="lsx_lmt_am" attr="A" default_value=""/>
		<parm id="in_lss_mltplr_val" name="내부손실승수값" parmid="in_lss_mltplr_val" attr="A" default_value=""/>
		<parm id="tot_ned_ownfds_lmt_am" name="총소요자기자본한도금액" parmid="tot_ned_ownfds_lmt_am" attr="A" default_value=""/>
		
		<parm id="rt_case_dsc" name="소진율케이스구분코드" parmid="rt_case_dsc" attr="A" default_value=""/>
		<parm id="bas_mm" name="기준월" parmid="bas_mm" attr="A" default_value=""/>
		<parm id="tot_ned_ownfds" name="총소요자기자본" parmid="tot_ned_ownfds" attr="A" default_value=""/>
		<parm id="lmt_rto" name="소진율" parmid="lmt_rto" attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="내부한도설정삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE TB_OR_GA_INLMT            
 WHERE GRP_ORG_C = #grp_org_c#
   AND BASYY = #sch_bas_yy#
   AND RGO_IN_DSC = #sv_rgo_in_dsc#
   AND SBDR_C = #sv_sbdr_c#
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit02" name="내부한도케이스삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE TB_OR_GA_INLMT_CASE            
 WHERE GRP_ORG_C = #grp_org_c#
   AND BASYY = #sch_bas_yy#
   AND RGO_IN_DSC = #sv_rgo_in_dsc#
   AND SBDR_C = #sv_sbdr_c#
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit04" name="한도소진율삭제" type="S" mode="delete" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
DELETE TB_OR_GA_LMT_EXRAT            
 WHERE GRP_ORG_C = #grp_org_c#
   AND BASYY = #sch_bas_yy#
   AND RGO_IN_DSC = #sv_rgo_in_dsc#
   AND SBDR_C = #sv_sbdr_c#
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit04" name="내부한도설정Insert" type="S" mode="insert" multiid="">
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
INSERT INTO TB_OR_GA_INLMT (
   GRP_ORG_C, BASYY, RGO_IN_DSC, 
   SBDR_C, UPLOAD_SQNO, COIC_CASE_DSC, MNG_PLN_RTO, LSS_AM, FIR_INP_DTM, 
   FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO) 
VALUES ( #grp_org_c#,
 #sch_bas_yy#,
 #sv_rgo_in_dsc#,
 #sv_sbdr_c#,
 #upload_sqno#,
 #coic_case_dsc#,
 #sv_mng_pln_rto#,
 #sv_lss_am#,
 SYSDATE,
 #userid#,
 SYSDATE,
 #userid# )
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit05" name="내부한도케이스Insert" type="M" mode="insert" multiid="case_dsc">
				<multivalue id="est_buix_am" name="est_buix_am" multiid="est_buix_am"/>
				<multivalue id="buix_lmt_am" name="buix_lmt_am" multiid="buix_lmt_am"/>
				<multivalue id="lsx_lmt_am" name="lsx_lmt_am" multiid="lsx_lmt_am"/>
				<multivalue id="in_lss_mltplr_val" name="in_lss_mltplr_val" multiid="in_lss_mltplr_val"/>
				<multivalue id="tot_ned_ownfds_lmt_am" name="tot_ned_ownfds_lmt_am" multiid="tot_ned_ownfds_lmt_am"/>
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
 INSERT INTO TB_OR_GA_INLMT_CASE (
   GRP_ORG_C, BASYY, RGO_IN_DSC, 
   SBDR_C, CASE_DSC, EST_BUIX_AM, 
   BUIX_LMT_AM, LSX_LMT_AM, IN_LSS_MLTPLR_VAL, 
   TOT_NED_OWNFDS_LMT_AM, FIR_INP_DTM, FIR_INPMN_ENO, 
   LSCHG_DTM, LS_WKR_ENO) 
VALUES ( #grp_org_c#,
 #sch_bas_yy#,
 #sv_rgo_in_dsc#,
 #sv_sbdr_c#,
 #case_dsc#,
 #est_buix_am#,
 #buix_lmt_am#,
 #lsx_lmt_am#,
 #in_lss_mltplr_val#,
 #tot_ned_ownfds_lmt_am#,
 SYSDATE,
 #userid#,
 SYSDATE,
 #userid# )
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="한도소진율Insert" type="M" mode="insert" multiid="rt_case_dsc">
				<multivalue id="bas_mm" name="bas_mm" multiid="bas_mm"/>
				<multivalue id="tot_ned_ownfds" name="tot_ned_ownfds" multiid="tot_ned_ownfds"/>
				<multivalue id="lmt_rto" name="lmt_rto" multiid="lmt_rto"/>
				<sql id="sql11" name="sql11">
					<data id="data11" name="data11">
 INSERT INTO TB_OR_GA_LMT_EXRAT (
   GRP_ORG_C, BASYY, RGO_IN_DSC, 
   SBDR_C, CASE_DSC, BAS_MM, 
   TOT_NED_OWNFDS, LMT_RTO, FIR_INP_DTM, 
   FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO) 
VALUES ( #grp_org_c#,
 #sch_bas_yy#,
 #sv_rgo_in_dsc#,
 #sv_sbdr_c#,
 #rt_case_dsc#,
 #bas_mm#,
 #tot_ned_ownfds#,
 #lmt_rto#,
 SYSDATE,
 #userid#,
 SYSDATE,
 #userid# )
					</data>					
				</sql>
				<result id="result" name="result" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORMR031407" name="내부자본한도저장조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT A.GRP_ORG_C, A.BASYY, A.RGO_IN_DSC, A.SBDR_C, A.MNG_PLN_RTO, A.LSS_AM, A.COIC_CASE_DSC
						   FROM TB_OR_GA_INLMT A
						  WHERE A.GRP_ORG_C = #grp_org_c#
						    AND A.BASYY = #sch_bas_yy#
						    AND A.RGO_IN_DSC = #sch_rgo_in_dsc#
						    AND A.SBDR_C = #sch_sbdr_c#
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORMR031408" name="내부자본한도설정CASE조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도설정CASE조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
	SELECT A.EST_BUIX_AM CASE11,           B.EST_BUIX_AM CASE21,           C.EST_BUIX_AM CASE31,           D.EST_BUIX_AM CASE41
         , A.BUIX_LMT_AM CASE12,           B.BUIX_LMT_AM CASE22,           C.BUIX_LMT_AM CASE32,           D.BUIX_LMT_AM CASE42
         , A.LSX_LMT_AM CASE13,            B.LSX_LMT_AM CASE23,            C.LSX_LMT_AM CASE33,            D.LSX_LMT_AM CASE43
         , A.IN_LSS_MLTPLR_VAL CASE14,     B.IN_LSS_MLTPLR_VAL CASE24,     C.IN_LSS_MLTPLR_VAL CASE34,     D.IN_LSS_MLTPLR_VAL CASE44
         , A.TOT_NED_OWNFDS_LMT_AM CASE15, B.TOT_NED_OWNFDS_LMT_AM CASE25, C.TOT_NED_OWNFDS_LMT_AM CASE35, D.TOT_NED_OWNFDS_LMT_AM CASE45
	  FROM TB_OR_GA_INLMT_CASE A
	 INNER JOIN TB_OR_GA_INLMT_CASE B
	    ON A.GRP_ORG_C = B.GRP_ORG_C
	   AND A.BASYY = B.BASYY
	   AND A.RGO_IN_DSC = B.RGO_IN_DSC
	   AND A.SBDR_C = B.SBDR_C
	   AND B.CASE_DSC = '02'
	 INNER JOIN TB_OR_GA_INLMT_CASE C
	    ON A.GRP_ORG_C = C.GRP_ORG_C
	   AND A.BASYY = C.BASYY
	   AND A.RGO_IN_DSC = C.RGO_IN_DSC
	   AND A.SBDR_C = C.SBDR_C
	   AND C.CASE_DSC = '03'
	 INNER JOIN TB_OR_GA_INLMT_CASE D
	    ON A.GRP_ORG_C = D.GRP_ORG_C
	   AND A.BASYY = D.BASYY
	   AND A.RGO_IN_DSC = D.RGO_IN_DSC
	   AND A.SBDR_C = D.SBDR_C
	   AND D.CASE_DSC = '04'
	 WHERE A.GRP_ORG_C = #grp_org_c# 
	   AND A.BASYY = #sch_bas_yy#
	   AND A.RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND A.SBDR_C = #sch_sbdr_c#
	   AND A.CASE_DSC = '01'
)   
SELECT '01' GUBUN, '추정 BIC' GUBUN_NM, CASE11 CASE1, CASE21 CASE2, CASE31 CASE3, CASE41 CASE4
  FROM T1
 UNION
SELECT '02' GUBUN, 'BIC 한도' GUBUN_NM, CASE12 CASE1, CASE22 CASE2, CASE32 CASE3, CASE42 CASE4
  FROM T1
 UNION
SELECT '03' GUBUN, 'LC 한도' GUBUN_NM, CASE13 CASE1, CASE23 CASE2, CASE33 CASE3, CASE43 CASE4
  FROM T1
 UNION
SELECT '04' GUBUN, 'ILM' GUBUN_NM, CASE14 CASE1, CASE24 CASE2, CASE34 CASE3, CASE44 CASE4
  FROM T1
 UNION
SELECT '05' GUBUN, 'ORC 한도' GUBUN_NM, CASE15 CASE1, CASE25 CASE2, CASE35 CASE3, CASE45 CASE4
  FROM T1
 ORDER BY GUBUN 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORMR031409" name="내부자본한도소진율시뮬레이션조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="msr" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="검색년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_rgo_in_dsc" name="자본량기준" parmid="sch_rgo_in_dsc" attr="S" default_value=""/>
		<parm id="sch_sbdr_c" name="자회사코드" parmid="sch_sbdr_c" attr="S" default_value="00"/>
		<parm id="mng_pln_rto" name="경영계획" parmid="mng_pln_rto" attr="S" default_value="0"/>
		<parm id="lss_am" name="손실금액" parmid="lss_am" attr="S" default_value="0"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="내부자본한도소진율시뮬레이션조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
WITH 
T1 AS (
	SELECT A.BASYY, A.BAS_MM, A.TOT_NED_OWNFDS CASE11,           B.TOT_NED_OWNFDS CASE21,           C.TOT_NED_OWNFDS CASE31,           D.TOT_NED_OWNFDS CASE41
         , A.LMT_RTO CASE12,           B.LMT_RTO CASE22,           C.LMT_RTO CASE32,           D.LMT_RTO CASE42
	  FROM TB_OR_GA_LMT_EXRAT A
	 INNER JOIN TB_OR_GA_LMT_EXRAT B
	    ON A.GRP_ORG_C = B.GRP_ORG_C
	   AND A.BASYY = B.BASYY
	   AND A.RGO_IN_DSC = B.RGO_IN_DSC
	   AND A.SBDR_C = B.SBDR_C
	   AND A.BAS_MM = B.BAS_MM
	   AND B.CASE_DSC = '02'
	 INNER JOIN TB_OR_GA_LMT_EXRAT C
	    ON A.GRP_ORG_C = C.GRP_ORG_C
	   AND A.BASYY = C.BASYY
	   AND A.RGO_IN_DSC = C.RGO_IN_DSC
	   AND A.SBDR_C = C.SBDR_C
	   AND A.BAS_MM = C.BAS_MM
	   AND C.CASE_DSC = '03'
	 INNER JOIN TB_OR_GA_LMT_EXRAT D
	    ON A.GRP_ORG_C = D.GRP_ORG_C
	   AND A.BASYY = D.BASYY
	   AND A.RGO_IN_DSC = D.RGO_IN_DSC
	   AND A.SBDR_C = D.SBDR_C
	   AND A.BAS_MM = D.BAS_MM
	   AND D.CASE_DSC = '04'
	 WHERE A.GRP_ORG_C = #grp_org_c# 
	   AND A.BASYY = #sch_bas_yy#
	   AND A.RGO_IN_DSC = #sch_rgo_in_dsc#
	   AND A.SBDR_C = #sch_sbdr_c#
	   AND A.CASE_DSC = '01'
)   
SELECT '11' GUBUN, SUBSTR(BASYY,3,2) || '.1Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE11 CASE1, CASE21 CASE2, CASE31 CASE3, CASE41 CASE4
  FROM T1
 WHERE BAS_MM = '03'
 UNION
SELECT '12' GUBUN, SUBSTR(BASYY,3,2) || '.1Q' GUBUN_NM1, '소진율' GUBUN_NM2, CASE12, CASE22, CASE32, CASE42
  FROM T1
 WHERE BAS_MM = '03'
 UNION
SELECT '21' GUBUN, SUBSTR(BASYY,3,2) || '.2Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE11 CASE1, CASE21 CASE2, CASE31 CASE3, CASE41 CASE4
  FROM T1
 WHERE BAS_MM = '06'
 UNION
SELECT '22' GUBUN, SUBSTR(BASYY,3,2) || '.2Q' GUBUN_NM1, '소진율' GUBUN_NM2, CASE12, CASE22, CASE32, CASE42
  FROM T1
 WHERE BAS_MM = '06'
 UNION
SELECT '31' GUBUN, SUBSTR(BASYY,3,2) || '.3Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE11 CASE1, CASE21 CASE2, CASE31 CASE3, CASE41 CASE4
  FROM T1
 WHERE BAS_MM = '09'
 UNION
SELECT '32' GUBUN, SUBSTR(BASYY,3,2) || '.3Q' GUBUN_NM1, '소진율' GUBUN_NM2, CASE12, CASE22, CASE32, CASE42
  FROM T1
 WHERE BAS_MM = '09'
 UNION
SELECT '41' GUBUN, SUBSTR(BASYY,3,2) || '.4Q' GUBUN_NM1, 'ORC' GUBUN_NM2, CASE11 CASE1, CASE21 CASE2, CASE31 CASE3, CASE41 CASE4
  FROM T1
 WHERE BAS_MM = '12'
 UNION
SELECT '42' GUBUN, SUBSTR(BASYY,3,2) || '.4Q' GUBUN_NM1, '소진율' GUBUN_NM2, CASE12, CASE22, CASE32, CASE42
  FROM T1
 WHERE BAS_MM = '12'
 ORDER BY GUBUN 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
</com_servlet>