<?xml version="1.0" encoding="utf-8"?>
<com_servlet id="rsa" name="ORMS RCSA" commkind="rsa">
	<lib id="lib1" name="라이브러리정의" value="com.shbank.orms.execproc"/>

	<process id="ORRC010101" name="리스크풀 조회" forward="/rsa/ORRC0101" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RKP_TPC"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND INTG_GRP_C = TRIM(#intg_grp_c#)  
						    AND C_UYN = 'Y'  
						  ORDER BY SORT_SQ   
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010102" name="리스크풀 조회(목록)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_st_rkp_tpc" name="RP유형" parmid="sch_st_rkp_tpc" attr="S" default_value=""/>
		<parm id="sch_hd_bsn_prss_c" name="업무프로세스코드" parmid="sch_hd_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_hpn_tpc" name="손실사건유형코드" parmid="sch_hd_hpn_tpc" attr="S" default_value=""/>
		<parm id="sch_hd_cas_tpc" name="원인유형코드" parmid="sch_hd_cas_tpc" attr="S" default_value=""/>
		<parm id="sch_hd_ifn_tpc" name="영향유형코드" parmid="sch_hd_ifn_tpc" attr="S" default_value=""/>
		<parm id="sch_hd_emrk_tpc" name="이머징리스크유형코드" parmid="sch_hd_emrk_tpc" attr="S" default_value=""/>
		<parm id="sch_rkp_id" name="RP ID" parmid="sch_rkp_id" attr="S" default_value=""/>
		<parm id="sch_rk_isc_cntn" name="리스크프로파일" parmid="sch_rk_isc_cntn" attr="S" default_value=""/>
		<parm id="sch_bas_dt" name="기준일자" parmid="sch_bas_dt" attr="S" default_value=""/>
		<parm id="sch_rk_isc_cntn" name="리스크프로파일" parmid="sch_rk_isc_cntn" attr="S" default_value=""/>
		<parm id="sch_brc" name="사용부서" parmid="sch_brc" attr="S" default_value=""/>
		<parm id="sch_reg_st_dt" name="등록일자(부터)" parmid="sch_reg_st_dt" attr="S" default_value=""/>
		<parm id="sch_reg_ed_dt" name="등록일자(까지)" parmid="sch_reg_ed_dt" attr="S" default_value=""/>
		<parm id="sch_chg_st_dt" name="변경일자(부터)" parmid="sch_chg_st_dt" attr="S" default_value=""/>
		<parm id="sch_chg_ed_dt" name="변경일자(까지)" parmid="sch_chg_ed_dt" attr="S" default_value=""/>
		<parm id="sch_rkp_fq" name="평가주기" parmid="sch_rkp_fq" attr="S" default_value=""/>
		<parm id="sch_krk_yn" name="중요리스크여부" parmid="sch_krk_yn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크풀 목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					  SELECT * 
				 		FROM ( 
				 		WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, CAS AS ( 
				 		    SELECT SUBSTR(CAS, INSTR(CAS,'|',1,2) + 1, INSTR(CAS,'|',1,3) - INSTR(CAS,'|',1,2) -1) CAS1 
				 		         , SUBSTR(CAS, INSTR(CAS,'|',1,3) + 1, INSTR(CAS,'|',1,4) - INSTR(CAS,'|',1,3) -1) CAS2 
				 		         , SUBSTR(CAS, INSTR(CAS,'|',1,4) + 1) CAS 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,2) + 1, INSTR(CASNM,'|',1,3) - INSTR(CASNM,'|',1,2) -1) CASNM1 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,3) + 1, INSTR(CASNM,'|',1,4) - INSTR(CASNM,'|',1,3) -1) CASNM2 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,4) + 1) CASNM3 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(CAS_TPC,'|') AS CAS 
				 		              , SYS_CONNECT_BY_PATH(CAS_TPNM,'|') AS CASNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_CAS 
				 		         WHERE LVL_NO='3' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_CAS_TPC IS NULL 
				 		         CONNECT BY PRIOR CAS_TPC = UP_CAS_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		) 
				 		, IFN AS ( 
				 		     SELECT SUBSTR(IFN, INSTR(IFN,'|',1,2) + 1, INSTR(IFN,'|',1,3) - INSTR(IFN,'|',1,2) -1) IFN1 
				 		          , SUBSTR(IFN, INSTR(IFN,'|',1,3) + 1) IFN 
				 		          , SUBSTR(IFNNM, INSTR(IFNNM,'|',1,2) + 1, INSTR(IFNNM,'|',1,3) - INSTR(IFNNM,'|',1,2) -1) IFNNM1 
				 		          , SUBSTR(IFNNM, INSTR(IFNNM,'|',1,3) + 1) IFNNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(IFN_TPC,'|') AS IFN 
				 		              , SYS_CONNECT_BY_PATH(IFN_TPNM,'|') AS IFNNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_IFN 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_IFN_TPC IS NULL 
				 		         CONNECT BY PRIOR IFN_TPC = UP_IFN_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, HPN AS ( 
				 		     SELECT SUBSTR(HPN, INSTR(HPN,'|',1,2) + 1, INSTR(HPN,'|',1,3) - INSTR(HPN,'|',1,2) -1) HPN1 
				 		          , SUBSTR(HPN, INSTR(HPN,'|',1,3) + 1, INSTR(HPN,'|',1,4) - INSTR(HPN,'|',1,3) -1) HPN2 
				 		          , SUBSTR(HPN, INSTR(HPN,'|',1,4) + 1) HPN 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,2) + 1, INSTR(HPNNM,'|',1,3) - INSTR(HPNNM,'|',1,2) -1) HPNNM1 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,3) + 1, INSTR(HPNNM,'|',1,4) - INSTR(HPNNM,'|',1,3) -1) HPNNM2 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,4) + 1) HPNNM3 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(HPN_TPC,'|') AS HPN 
				 		              , SYS_CONNECT_BY_PATH(HPN_TPNM,'|') AS HPNNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_HPN 
				 		         WHERE LVL_NO='3' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_HPN_TPC IS NULL 
				 		         CONNECT BY PRIOR HPN_TPC = UP_HPN_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, EMRK AS ( 
				 		     SELECT SUBSTR(EMRK, INSTR(EMRK,'|',1,2) + 1, INSTR(EMRK,'|',1,3) - INSTR(EMRK,'|',1,2) -1) EMRK1 
				 		          , SUBSTR(EMRK, INSTR(EMRK,'|',1,3) + 1) EMRK 
				 		          , SUBSTR(EMRKNM, INSTR(EMRKNM,'|',1,2) + 1, INSTR(EMRKNM,'|',1,3) - INSTR(EMRKNM,'|',1,2) -1) EMRKNM1 
				 		          , SUBSTR(EMRKNM, INSTR(EMRKNM,'|',1,3) + 1) EMRKNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(EMRK_TPC,'|') AS EMRK 
				 		              , SYS_CONNECT_BY_PATH(EMRK_TPNM,'|') AS EMRKNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_EMRK 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_EMRK_TPC IS NULL 
				 		         CONNECT BY PRIOR EMRK_TPC = UP_EMRK_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		) 
				 		, CTL AS ( 
				 		     SELECT SUBSTR(CTL, INSTR(CTL,'|',1,2) + 1, INSTR(CTL,'|',1,3) - INSTR(CTL,'|',1,2) -1) CTL1 
				 		          , SUBSTR(CTL, INSTR(CTL,'|',1,3) + 1) CTL 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,2) + 1, INSTR(CTLNM,'|',1,3) - INSTR(CTLNM,'|',1,2) -1) CTLNM1 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,3) + 1) CTLNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(RK_CTL_TPC,'|') AS CTL 
				 		              , SYS_CONNECT_BY_PATH(CTL_TPNM,'|') AS CTLNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_CTL 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_RK_CTL_TPC IS NULL 
				 		         CONNECT BY PRIOR RK_CTL_TPC = UP_RK_CTL_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		)
                        , BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C, B.UP_BRC ,                            
						       B.BRNM,
						       B.BRC,
                               A.OPRK_RKP_ID
						      FROM TB_OR_RH_BRC A                              
						       LEFT JOIN TB_OR_OM_ORGZ B                             
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC                                       
						        AND B.UYN = 'Y'
                             GROUP BY A.GRP_ORG_C,B.UP_BRC,B.BRNM,B.BRC,A.OPRK_RKP_ID
						)
				  		SELECT A.OPRK_RKP_ID RKP_ID, A.RK_ISC_CNTN 
				 		     , A.KRK_YN 
				 		     , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKP_TPC' AND GRP_ORG_C = A.GRP_ORG_C AND A.RKP_TPC = IDVDC_VAL) AS RKP_TPC_NM 
				 		     , B.PRSS, B.PRSSNM1, B.PRSSNM2, B.PRSSNM3, B.PRSSNM4 
				 		     , C.CAS, C.CASNM1, C.CASNM2, C.CASNM3 
				 		     , D.IFN, D.IFNNM1, D.IFNNM2 
				 		     , E.HPN, E.HPNNM1, E.HPNNM2, E.HPNNM3 
				 		     , F.EMRK, F.EMRKNM1, F.EMRKNM2 
				 		     , G.RK_CP_CNTN CP_CNTN 
				 		     , H.CTLNM1, H.CTLNM2 
				  		     , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN J.BRNM
				  		     		END BRNM
				  		     , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN K.BRNM
				  		     		END DEPT_BRNM
				  		     , I.INTG_IDVD_CNM RPT_FQ_DSCNM
				  		     , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') REG_DT
				  		     , TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') CHG_DT
				 		FROM TB_OR_RM_RKP A 
				 		   , PRSS B 
				 		   , CAS C 
				 		   , IFN D 
				 		   , HPN E 
				 		   , EMRK F 
				 		   , TB_OR_RH_CTL_SCF G 
				 		   , CTL H 
				 		   , TB_OR_OM_CODE I 
				 		   , BRNM J
                           , TB_OR_OM_ORGZ K
		 			  WHERE A.GRP_ORG_C = B.GRP_ORG_C 
				 		AND A.BSN_PRSS_C = B.PRSS 
				 		AND A.GRP_ORG_C = C.GRP_ORG_C 
				 		AND A.CAS_TPC = C.CAS 
				 		AND A.GRP_ORG_C = D.GRP_ORG_C 
				 		AND A.IFN_TPC = D.IFN 
				 		AND A.GRP_ORG_C = E.GRP_ORG_C 
				 		AND A.HPN_TPC = E.HPN 
				 		AND A.GRP_ORG_C = F.GRP_ORG_C(+) 
				 		AND A.EMRK_TPC = F.EMRK(+) 
				 		AND A.GRP_ORG_C = G.GRP_ORG_C 
				 		AND A.OPRK_RKP_ID = G.OPRK_RKP_ID 
				 		AND G.RK_CTL_SQNO = '1' 
				 		AND G.GRP_ORG_C = H.GRP_ORG_C 
				 		AND G.RK_CTL_TPC = H.CTL 
				 		AND A.OPRK_RKP_ID = J.OPRK_RKP_ID(+)
				 		AND I.INTG_GRP_C(+) = 'RPT_FQ_DSC'
						AND I.IDVDC_VAL(+) = A.RPT_FQ_DSC
 						AND J.UP_BRC = K.BRC (+)
				 		AND A.GRP_ORG_C = #grp_org_c# 
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_st_rkp_tpc#"  />
					<data id="data1" name = "">
						AND A.RKP_TPC = #sch_st_rkp_tpc#  
					</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_rkp_id#" />  
					<data id="data1" name = "">
				 		AND A.OPRK_RKP_ID LIKE '%%'|| #sch_rkp_id# || '%%' 
					</data>
				</sql>
				<sql id="sql4" name = "SQL4">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_rk_isc_cntn#"  /> 
					<data id="data1" name = "">
				 		AND (UPPER(A.RK_ISC_CNTN) LIKE '%%' || UPPER(TRIM(#sch_rk_isc_cntn#)) || '%%' OR UPPER(A.ENG_RK_ISC_CNTN) LIKE '%%' || UPPER(TRIM(#sch_rk_isc_cntn#)) || '%%') 
					</data>
				</sql>
				<sql id="sql5" name = "SQL5">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_hd_bsn_prss_c#" /> 
					<data id="data1" name = "">
				 		AND A.BSN_PRSS_C LIKE TRIM(#sch_hd_bsn_prss_c#) ||'%%' 
					</data>
				</sql>
				<sql id="sql6" name = "SQL6">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_hd_hpn_tpc#" /> 
					<data id="data1" name = "">
						AND A.HPN_TPC LIKE TRIM(#sch_hd_hpn_tpc#) ||'%%' 
					</data>
				</sql>
				<sql id="sql7" name = "SQL7">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_hd_cas_tpc#" /> 
					<data id="data1" name = "">
						AND A.CAS_TPC LIKE TRIM(#sch_hd_cas_tpc#) ||'%%' 
					</data>
				</sql>
				<sql id="sql8" name = "SQL8">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_hd_ifn_tpc#" />
					<data id="data1" name = "">
						AND A.IFN_TPC LIKE TRIM(#sch_hd_ifn_tpc#) ||'%%' 
					</data>
				</sql>
				<sql id="sql9" name = "SQL9">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_hd_emrk_tpc#" />
					<data id="data1" name = "">
						AND A.EMRK_TPC LIKE TRIM(#sch_hd_emrk_tpc#) ||'%%' 
					</data>
				</sql>
				<sql id="sql10" name = "SQL10">
					<condition id="cond1" name="조건1" comparison="eq" value="Y" variable="#sch_krk_yn#"  />
					<data id="data1" name = "">
						AND A.KRK_YN = 'Y'
					</data>
				</sql>
				<sql id="sql11" name = "SQL11">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_brc#" />
					<data id="data1" name = "">
						AND (J.BRC = TRIM(#sch_brc#) OR J.BRC = (SELECT UP_BRC FROM TB_OR_OM_ORGZ WHERE BRC = TRIM(#sch_brc#))) 
					</data>
				</sql>
				<sql id="sql12" name = "SQL12">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_reg_st_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') &gt;= REPLACE(TRIM(#sch_reg_st_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql13" name = "SQL13">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_reg_ed_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') &lt;= REPLACE(TRIM(#sch_reg_ed_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql14" name = "SQL14">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_chg_st_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') &gt;= REPLACE(TRIM(#sch_chg_st_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql15" name = "SQL15">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_chg_ed_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') &lt;= REPLACE(TRIM(#sch_chg_ed_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql16" name = "SQL16">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_rkp_fq#" />
					<data id="data1" name = "">
						   AND A.RPT_FQ_DSC = TRIM(#sch_rkp_fq#) 
					</data>
				</sql>				
				<sql id="sql17" name = "SQL17">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_krk_yn#" />
					<data id="data1" name = "">
						   AND A.KRK_YN = TRIM(#sch_krk_yn#) 
					</data>
				</sql>
				<sql id="sql18" name = "SQL18">
					<data id="data1" name = "">
						ORDER BY A.OPRK_RKP_ID  
						) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010103" name="리스크풀삭제" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="del_rkp_id" name="삭제할 RP ID" parmid="del_rkp_id" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="M" multiid="del_rkp_id">
			<multivalue id="del_rkp_id" name="del_rkp_id" multiid="del_rkp_id"/>
			<unit id="unit1" name="리스크풀통제유형내역삭제" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 DELETE FROM TB_OR_RH_CTL_SCF     
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
						    AND OPRK_RKP_ID = TRIM(#del_rkp_id#)  
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit2" name="관련손실내역삭제" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 DELETE FROM TB_OR_RH_REL_LSS     
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
						    AND OPRK_RKP_ID = TRIM(#del_rkp_id#)  
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit3" name="관련KRI내역삭제" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 DELETE FROM TB_OR_RH_REL_KRI     
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
						    AND OPRK_RKP_ID = TRIM(#del_rkp_id#)  
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit4" name="리스크풀통제유형내역삭제" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				 		 UPDATE TB_OR_RM_RKP                   
						    SET VLD_ED_DT = TO_CHAR(SYSDATE,'YYYYMMDD') 
						      , VLD_YN = 'N'                            
						      , LSCHG_DTM = SYSDATE                     
						      , LS_WKR_ENO = TRIM(#userid#)    
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
						    AND OPRK_RKP_ID = TRIM(#del_rkp_id#)   
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
		
	<process id="ORRC010201" name="리스크풀 신규등록화면" forward="/rsa/ORRC0102" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RKP_TPC"/>
		<parm id="rkp_id" name="RP ID" parmid="rkp_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND INTG_GRP_C = TRIM(#intg_grp_c#)  
						    AND C_UYN = 'Y'  
						  ORDER BY SORT_SQ
					</data>
				</sql>
				
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit02" name="팀코드,사무소코드" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
                            SELECT B.BRC,B.BRNM,A.TEAM_CD 
                              FROM TB_OR_OM_EMP A
                                  ,TB_OR_OM_ORGZ B
                             WHERE A.BRC = B.BRC
                             GROUP BY B.BRC,B.BRNM,A.TEAM_CD
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit05" name="통제유형1레벨조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT A.RK_CTL_TPC, NVL(A.CTL_TPNM,' ') CTL_NM, NVL(A.ENG_CTL_TPNM,' ') ENG_CTL_NM  
						  FROM TB_OR_OC_CTL A 
						 WHERE A.GRP_ORG_C = #grp_org_c# 
						   AND A.LVL_NO = 1
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<data id="data1" name = "">
						 ORDER BY A.RK_CTL_TPC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	<process id="ORRC010202" name="리스크풀등록/수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rkp_id" name="RP ID" parmid="rkp_id" attr="S" default_value=""/>
		<parm id="mode" name="실행모드" parmid="mode" attr="S" default_value=""/>
		<parm id="prss" name="업무프로세스코드" parmid="prss" attr="S" default_value=""/>
		<parm id="cas" name="원인유형코드" parmid="cas" attr="S" default_value=""/>
		<parm id="hpn" name="손실사건유형코드" parmid="hpn" attr="S" default_value=""/>
		<parm id="ifn" name="영향유형코드" parmid="ifn" attr="S" default_value=""/>
		<parm id="emrk" name="이머징리스크유형코드" parmid="emrk" attr="S" default_value=""/>
		<parm id="rkp_tpc" name="RP유형코드" parmid="rkp_tpc" attr="S" default_value=""/>
		<parm id="rk_isc_cntn" name="리스크프로파일사례" parmid="rk_isc_cntn" attr="S" default_value=""/>
		<parm id="rk_ctl_tpc_lv2" name="통제 유형코드" parmid="rk_ctl_tpc_lv2" attr="A" default_value=""/>
		<parm id="ctl_cntn" name="통제내용" parmid="ctl_cntn" attr="A" default_value=""/>
		<parm id="lshp_amnno" name="손실사건 관리번호" parmid="lshp_amnno" attr="A" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크풀기본수정" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<condition id="con1" name="조건1" variable="#mode#" comparison="eq" value="U" />
					<data id="data1" name = "">
						 DELETE FROM TB_OR_RH_CTL_SCF     
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
						    AND OPRK_RKP_ID = TRIM(#rkp_id#)  
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit02" name="리스크풀기본수정" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<condition id="con1" name="조건1" variable="#mode#" comparison="eq" value="U" />
					<data id="data1" name = "">
						 DELETE FROM TB_OR_RH_REL_LSS     
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
						    AND OPRK_RKP_ID = TRIM(#rkp_id#)  
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit03" name="리스크풀기본수정" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<condition id="con1" name="조건1" variable="#mode#" comparison="eq" value="U" />
					<data id="data1" name = "">
						 DELETE FROM TB_OR_RH_REL_KRI     
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
						    AND OPRK_RKP_ID = TRIM(#rkp_id#)  
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
 			<unit id="unit04" name="리스크풀기본수정" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<condition id="con1" name="조건1" variable="#mode#" comparison="eq" value="U" />
					<data id="data1" name = "">
						 UPDATE TB_OR_RM_RKP      
						   SET BSN_PRSS_C = TRIM(#prss#)   
						     , CAS_TPC = TRIM(#cas#)         
						     , HPN_TPC = TRIM(#hpn#)         
						     , IFN_TPC = TRIM(#ifn#)         
						     , EMRK_TPC = TRIM(#emrk#)       
						     , RKP_TPC = TRIM(#rkp_tpc#)         
						     , APL_AFLCO_DSC = TRIM(#apl_aflco_dsc#)    
						     , RK_ISC_CNTN = TRIM(#rk_isc_cntn#) 
						     , LSCHG_DTM = SYSDATE        
						     , LS_WKR_ENO = TRIM(#userid#)       
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)     
						   AND OPRK_RKP_ID = TRIM(#rkp_id#)      
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
 			<unit id="unit05" name="리스크풀기본수정" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<condition id="con1" name="조건1"  comparison="eq" value="I" variable="#mode#"/>
					<condition id="con1" name="조건1"  comparison="eq" value="03"  variable="#rkp_tpc#" operator="and"/>
					<data id="data1" name = "">
						 SELECT 'BR_RP' || TRIM(TO_CHAR(NVL(TO_NUMBER(MAX(SUBSTR(OPRK_RKP_ID,6,7))),0)+1,'00000')) NEW_RKP_ID
						   FROM TB_OR_RM_RKP
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						    AND OPRK_RKP_ID LIKE 'BR%%'
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="con2" name="조건2" variable="#mode#" comparison="eq" value="I" />
					<condition id="con2" name="조건2" variable="#rkp_tpc#" comparison="eq" value="02" operator="and"/>
					<data id="data1" name = "">
						 SELECT 'HQ_RP' || TRIM(TO_CHAR(NVL(TO_NUMBER(MAX(SUBSTR(OPRK_RKP_ID,6,7))),0)+1,'00000')) NEW_RKP_ID
						   FROM TB_OR_RM_RKP
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						  	AND OPRK_RKP_ID LIKE 'HQ%%'
					</data>
				</sql>
 				<result id="result" name="new_rkp_id" attrname="new_rkp_id" type="single_string"/>
 			</unit>
 			<unit id="unit08" name="통제유형내역수정" mode="update" type="M" multiid="rk_ctl_tpc_lv2">
 				<multivalue id="rk_ctl_tpc_lv2" name="rk_ctl_tpc_lv2" multiid="rk_ctl_tpc_lv2"/>
				<multivalue id="ctl_cntn" name="ctl_cntn" multiid="ctl_cntn"/>
				<sql id="sql1" name = "SQL1">
					<condition id="con1" name="조건1"  comparison="eq" value="U" variable="#mode#"/>
					<data id="data1" name = "">
						 INSERT INTO TB_OR_RH_CTL_SCF (                                                                               
						 GRP_ORG_C, OPRK_RKP_ID, RK_CTL_SQNO, RK_CTL_TPC, RK_CP_CNTN, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)    
						 SELECT TRIM(#grp_org_c#), TRIM(#rkp_id#), NVL(MAX(RK_CTL_SQNO),0)+1,                                             
						  TRIM(#rk_ctl_tpc_lv2#), TRIM(#ctl_cntn#), SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#) 
						   FROM TB_OR_RH_CTL_SCF                                                                                      
						  WHERE GRP_ORG_C = TRIM(#grp_org_c#)                                                                                      
						    AND OPRK_RKP_ID = TRIM(#rkp_id#)                                                                                       
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="con1" name="조건1"  comparison="eq" value="I" variable="#mode#"/>
					<data id="data1" name = "">
						 INSERT INTO TB_OR_RH_CTL_SCF 
                         VALUES(TRIM(#grp_org_c#),TRIM(#new_rkp_id#),(SELECT NVL(MAX(RK_CTL_SQNO),0)+1 FROM TB_OR_RH_CTL_SCF WHERE OPRK_RKP_ID = TRIM(#new_rkp_id#)),
                         TRIM(#rk_ctl_tpc_lv2#), TRIM(#ctl_cntn#),'', SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#))                                                                             
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
 			<unit id="unit10" name="관련손실사건수정" mode="update" type="M" multiid="lshp_amnno">
 				<multivalue id="lshp_amnno" name="lshp_amnno" multiid="lshp_amnno"/>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT INTO TB_OR_RH_REL_LSS (                                                           
						        GRP_ORG_C, OPRK_RKP_ID, LSHP_AMNNO, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)    
						 VALUES (                                                                                         
						        TRIM(#grp_org_c#), TRIM(#new_rkp_id#), TRIM(#lshp_amnno#), SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)) 
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
 			<unit id="unit11" name="관련KRI수정" mode="update" type="M" multiid="rki_id">
 				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT INTO TB_OR_RH_REL_KRI (                                                           
						        GRP_ORG_C, OPRK_RKP_ID, OPRK_RKI_ID, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)   
						 VALUES (                                                                                         
						        TRIM(#grp_org_c#), TRIM(#new_rkp_id#), TRIM(#rki_id#), SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)) 
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
 			<unit id="unit99" name="리스크풀 신규등록" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<condition id="con1" name="조건1" variable="#mode#" comparison="eq" value="I" />
					<data id="data1" name = "">
						 INSERT INTO TB_OR_RM_RKP (                                                               
						        GRP_ORG_C, OPRK_RKP_ID, BSN_PRSS_C, HPN_TPC, CAS_TPC, IFN_TPC, EMRK_TPC, BRC, TEAM_CD, RKP_DIGITAL_YN, RKP_NFTF_YN
						      , RK_ISC_CNTN, ENG_RK_ISC_CNTN, RKP_TPC, KRK_SLT_BASCD, KRK_SLT_ST_DT, KRK_SLT_ED_DT, APL_AFLCO_DSC, VLD_YN                       
						      , VLD_ST_DT, VLD_ED_DT, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)          
						 VALUES (                                                                                         
						        TRIM(#grp_org_c#), TRIM(#new_rkp_id#), TRIM(#prss#), TRIM(#hpn#), TRIM(#cas#), TRIM(#ifn#), TRIM(#emrk#)
						      , TRIM(#brc#), TRIM(#team_cd#), TRIM(#rkp_digital_yn#), TRIM(#rkp_nftf_yn#), TRIM(#rk_isc_cntn#)
						      , NULL, TRIM(#rkp_tpc#), '04', TO_CHAR(SYSDATE,'YYYYMMDD'), TO_CHAR(ADD_MONTHS(SYSDATE,12),'YYYYMMDD')
						      , TRIM(#apl_aflco_dsc#), 'Y', TO_CHAR(SYSDATE,'YYYYMMDD'), '99991231', SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#))                             
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
		</group>
	</process>
	
	<process id="ORRC010203" name="통제 목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rkp_id" name="RP ID" parmid="rkp_id" attr="S" default_value=""/>
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="통제 목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(B1.CTL_TPNM,' ') CTL_NM_LV1, B1.RK_CTL_TPC RK_CTL_TPC_LV1, NVL(B2.CTL_TPNM,' ') CTL_NM_LV2,  
						 B2.RK_CTL_TPC RK_CTL_TPC_LV2, NVL(A.RK_CP_CNTN,' ') CP_CNTN
						  FROM TB_OR_RH_CTL_SCF A 
						 INNER JOIN TB_OR_OC_CTL B2 
						    ON A.GRP_ORG_C = B2.GRP_ORG_C 
						   AND A.RK_CTL_TPC = B2.RK_CTL_TPC 
						   AND B2.LVL_NO = 2 
						   AND B2.VLD_YN = 'Y' 
						 INNER JOIN TB_OR_OC_CTL B1 
						    ON B2.GRP_ORG_C = B1.GRP_ORG_C 
						   AND B2.UP_RK_CTL_TPC = B1.RK_CTL_TPC 
						   AND B1.LVL_NO = 1 
						   AND B1.VLD_YN = 'Y' 
						 WHERE A.GRP_ORG_C = #grp_org_c# 
						   AND A.OPRK_RKP_ID = #rkp_id# 
						 ORDER BY B1.RK_CTL_TPC, B2.RK_CTL_TPC 
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010204" name="손실사건 목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rkp_id" name="RP ID" parmid="rkp_id" attr="S" default_value=""/>
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="손실사건 목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT A.LSHP_AMNNO, B.OCU_DT, B.LSS_TINM LSHP_TINM, B.TTLS_AM TOT_LSSAM, B.GULS_AM GU_LSSAM
						   FROM TB_OR_RH_REL_LSS A 
						  INNER JOIN TB_OR_LM_LSHP B 
						     ON A.GRP_ORG_C = B.GRP_ORG_C 
						    AND A.LSHP_AMNNO = B.LSHP_AMNNO 
						  WHERE A.GRP_ORG_C = #grp_org_c# 
						    AND A.OPRK_RKP_ID = #rkp_id# 
						    AND B.VLD_YN = 'Y' 
						  ORDER BY B.OCU_DT DESC 
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010205" name="관련KRI 목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rkp_id" name="RP ID" parmid="rkp_id" attr="S" default_value=""/>
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="관련KRI 목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						  SELECT A.OPRK_RKI_ID RKI_ID, B.OPRK_RKINM RKI_NM, B.RKI_OBV_CNTN 
						   FROM TB_OR_RH_REL_KRI A 
						  INNER JOIN TB_OR_KM_RKI B 
						     ON A.GRP_ORG_C = B.GRP_ORG_C 
						    AND A.OPRK_RKI_ID = B.OPRK_RKI_ID 
						  WHERE A.GRP_ORG_C = #grp_org_c# 
						    AND A.OPRK_RKP_ID = #rkp_id# 
						    AND B.VLD_YN = 'Y' 
						  ORDER BY A.OPRK_RKP_ID 
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010206" name="통제2레벨조회" forward="/rsa/ORRC0139" forwardng="/rsa/ORRC0139" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="up_rk_ctl_tpc" name="상위통제유형코드" parmid="up_rk_ctl_tpc" attr="S" default_value=""/>
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="통제2레벨조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT A.RK_CTL_TPC, NVL(A.CTL_TPNM,' ') CTL_NM, NVL(A.ENG_CTL_TPNM,' ') ENG_CTL_NM  
						  FROM TB_OR_OC_CTL A 
						 WHERE A.GRP_ORG_C = #grp_org_c# 
						   AND A.LVL_NO = 2
						   AND A.UP_RK_CTL_TPC = #up_rk_ctl_tpc# 
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<data id="data1" name = "">
						 ORDER BY A.RK_CTL_TPC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010301" name="리스크풀 수정화면(조회)" forward="/rsa/ORRC0103" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RKP_TPC"/>
		<parm id="rkp_id" name="RP ID" parmid="rkp_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">			
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND INTG_GRP_C = TRIM(#intg_grp_c#)  
						    AND C_UYN = 'Y'  
						  ORDER BY SORT_SQ  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit02" name="리스크풀조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						  SELECT * 
				 		  FROM ( 
				 		  WITH 
				 		  PRSS AS ( 
				 		      SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		           , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		           , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		           , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS 
				 		           , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		           , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		           , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		           , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		           , GRP_ORG_C 
				 		       FROM ( 
				 		       SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		            , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		            , GRP_ORG_C 
				 		       FROM TB_OR_OC_PRSS 
				 		       WHERE LVL_NO='4' 
				 		           AND VLD_YN='Y' 
				 		       START WITH UP_BSN_PRSS_C IS NULL 
				 		       CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		       AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		      ) 
				 		  ) 
				 		  , CAS AS ( 
				 		      SELECT SUBSTR(CAS, INSTR(CAS,'|',1,2) + 1, INSTR(CAS,'|',1,3) - INSTR(CAS,'|',1,2) -1) CAS1 
				 		           , SUBSTR(CAS, INSTR(CAS,'|',1,3) + 1, INSTR(CAS,'|',1,4) - INSTR(CAS,'|',1,3) -1) CAS2 
				 		           , SUBSTR(CAS, INSTR(CAS,'|',1,4) + 1) CAS 
				 		           , SUBSTR(CASNM, INSTR(CASNM,'|',1,2) + 1, INSTR(CASNM,'|',1,3) - INSTR(CASNM,'|',1,2) -1) CASNM1 
				 		           , SUBSTR(CASNM, INSTR(CASNM,'|',1,3) + 1, INSTR(CASNM,'|',1,4) - INSTR(CASNM,'|',1,3) -1) CASNM2 
				 		           , SUBSTR(CASNM, INSTR(CASNM,'|',1,4) + 1) CASNM3 
				 		           , GRP_ORG_C 
				 		       FROM ( 
				 		           SELECT SYS_CONNECT_BY_PATH(CAS_TPC,'|') AS CAS 
				 		                , SYS_CONNECT_BY_PATH(CAS_TPNM,'|') AS CASNM 
				 		                , GRP_ORG_C 
				 		           FROM TB_OR_OC_CAS 
				 		           WHERE LVL_NO='3' 
				 		           AND VLD_YN='Y' 
				 		           START WITH UP_CAS_TPC IS NULL 
				 		           CONNECT BY PRIOR CAS_TPC = UP_CAS_TPC 
				 		          AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		       ) 
				 		  ) 
				 		  , IFN AS ( 
				 		       SELECT SUBSTR(IFN, INSTR(IFN,'|',1,2) + 1, INSTR(IFN,'|',1,3) - INSTR(IFN,'|',1,2) -1) IFN1 
				 		            , SUBSTR(IFN, INSTR(IFN,'|',1,3) + 1) IFN 
				 		            , SUBSTR(IFNNM, INSTR(IFNNM,'|',1,2) + 1, INSTR(IFNNM,'|',1,3) - INSTR(IFNNM,'|',1,2) -1) IFNNM1 
				 		            , SUBSTR(IFNNM, INSTR(IFNNM,'|',1,3) + 1) IFNNM2 
				 		            , GRP_ORG_C 
				 		       FROM ( 
				 		           SELECT SYS_CONNECT_BY_PATH(IFN_TPC,'|') AS IFN 
				 		                , SYS_CONNECT_BY_PATH(IFN_TPNM,'|') AS IFNNM 
				 		                , GRP_ORG_C 
				 		           FROM TB_OR_OC_IFN 
				 		           WHERE LVL_NO='2' 
				 		           AND VLD_YN='Y' 
				 		           START WITH UP_IFN_TPC IS NULL 
				 		           CONNECT BY PRIOR IFN_TPC = UP_IFN_TPC 
				 		          AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		      ) 
				 		  ) 
				 		  , HPN AS ( 
				 		       SELECT SUBSTR(HPN, INSTR(HPN,'|',1,2) + 1, INSTR(HPN,'|',1,3) - INSTR(HPN,'|',1,2) -1) HPN1 
				 		            , SUBSTR(HPN, INSTR(HPN,'|',1,3) + 1, INSTR(HPN,'|',1,4) - INSTR(HPN,'|',1,3) -1) HPN2 
				 		            , SUBSTR(HPN, INSTR(HPN,'|',1,4) + 1) HPN 
				 		            , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,2) + 1, INSTR(HPNNM,'|',1,3) - INSTR(HPNNM,'|',1,2) -1) HPNNM1 
				 		            , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,3) + 1, INSTR(HPNNM,'|',1,4) - INSTR(HPNNM,'|',1,3) -1) HPNNM2 
				 		            , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,4) + 1) HPNNM3 
				 		            , GRP_ORG_C 
				 		       FROM ( 
				 		           SELECT SYS_CONNECT_BY_PATH(HPN_TPC,'|') AS HPN 
				 		                , SYS_CONNECT_BY_PATH(HPN_TPNM,'|') AS HPNNM 
				 		                , GRP_ORG_C 
				 		           FROM TB_OR_OC_HPN 
				 		           WHERE LVL_NO='3' 
				 		           AND VLD_YN='Y' 
				 		           START WITH UP_HPN_TPC IS NULL 
				 		           CONNECT BY PRIOR HPN_TPC = UP_HPN_TPC 
				 		          AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		      ) 
				 		  ) 
				 		  , EMRK AS ( 
				 		       SELECT SUBSTR(EMRK, INSTR(EMRK,'|',1,2) + 1, INSTR(EMRK,'|',1,3) - INSTR(EMRK,'|',1,2) -1) EMRK1 
				 		            , SUBSTR(EMRK, INSTR(EMRK,'|',1,3) + 1) EMRK 
				 		            , SUBSTR(EMRKNM, INSTR(EMRKNM,'|',1,2) + 1, INSTR(EMRKNM,'|',1,3) - INSTR(EMRKNM,'|',1,2) -1) EMRKNM1 
				 		            , SUBSTR(EMRKNM, INSTR(EMRKNM,'|',1,3) + 1) EMRKNM2 
				 		            , GRP_ORG_C 
				 		       FROM ( 
				 		           SELECT SYS_CONNECT_BY_PATH(EMRK_TPC,'|') AS EMRK 
				 		                , SYS_CONNECT_BY_PATH(EMRK_TPNM,'|') AS EMRKNM 
				 		                , GRP_ORG_C 
				 		           FROM TB_OR_OC_EMRK 
				 		           WHERE LVL_NO='2' 
				 		           AND VLD_YN='Y' 
				 		           START WITH UP_EMRK_TPC IS NULL 
				 		           CONNECT BY PRIOR EMRK_TPC = UP_EMRK_TPC 
				 		          AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		       ) 
				 		  ) 
				 		  , CTL AS ( 
				 		       SELECT SUBSTR(CTL, INSTR(CTL,'|',1,2) + 1, INSTR(CTL,'|',1,3) - INSTR(CTL,'|',1,2) -1) CTL1 
				 		            , SUBSTR(CTL, INSTR(CTL,'|',1,3) + 1) CTL 
				 		            , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,2) + 1, INSTR(CTLNM,'|',1,3) - INSTR(CTLNM,'|',1,2) -1) CTLNM1 
				 		            , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,3) + 1) CTLNM2 
				 		            , GRP_ORG_C 
				 		       FROM ( 
				 		           SELECT SYS_CONNECT_BY_PATH(RK_CTL_TPC,'|') AS CTL 
				 		                , SYS_CONNECT_BY_PATH(CTL_TPNM,'|') AS CTLNM 
				 		                , GRP_ORG_C 
				 		           FROM TB_OR_OC_CTL 
				 		           WHERE LVL_NO='2' 
				 		           AND VLD_YN='Y' 
				 		           START WITH UP_RK_CTL_TPC IS NULL 
				 		           CONNECT BY PRIOR RK_CTL_TPC = UP_RK_CTL_TPC 
				 		          AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		       ) 
				 		  ) 
				  		  SELECT A.OPRK_RKP_ID RKP_ID, A.RK_ISC_CNTN 
				 		       , CASE WHEN A.KRK_SLT_BASCD IS NOT NULL AND TO_CHAR(SYSDATE,'YYYYMMDD') &gt; KRK_SLT_ED_DT THEN 'Y' ELSE 'N' END AS KRK_YN 
				 		       , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKP_TPC' AND GRP_ORG_C = A.GRP_ORG_C AND A.RKP_TPC = IDVDC_VAL) AS RKP_TPC_NM 
				 		       , B.PRSS, B.PRSSNM1, B.PRSSNM2, B.PRSSNM3, B.PRSSNM4 
				 		       , C.CAS, C.CASNM1, C.CASNM2, C.CASNM3 
				 		       , D.IFN, D.IFNNM1, D.IFNNM2 
				 		       , E.HPN, E.HPNNM1, E.HPNNM2, E.HPNNM3 
				 		       , F.EMRK, F.EMRKNM1, F.EMRKNM2 
				 		       , G.RK_CP_CNTN 
				 		       , H.CTLNM1, H.CTLNM2 
				 		       , CASE WHEN A.RKP_TPC ='01' THEN 'SHBK'
				  		            WHEN A.RKP_TPC ='03' THEN 'SHBR'
				  		            ELSE J.BRC 
                                    END BRC
                               , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		ELSE NVL(J.BRNM,'부서매핑필요') 
				  		     		END BRNM
                               , A.TEAM_CD
                               , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		            WHEN A.RKP_TPC ='03' THEN '-'
				  		            ELSE CASE WHEN I.INTG_IDVD_CNM LIKE '%-%' THEN SUBSTR(I.INTG_IDVD_CNM,INSTR(I.INTG_IDVD_CNM,'-') +1) 
                     						  WHEN I.INTG_IDVD_CNM LIKE '%_%' THEN SUBSTR(I.INTG_IDVD_CNM,INSTR(I.INTG_IDVD_CNM,'_') +1) 
                     			    ELSE I.INTG_IDVD_CNM END
                     			END TARGET_EVL_TEAM
				 		  FROM TB_OR_RM_RKP A 
				 		     , PRSS B 
				 		     , CAS C 
				 		     , IFN D 
				 		     , HPN E 
				 		     , EMRK F 
				 		     , TB_OR_RH_CTL_SCF G 
				 		     , CTL H
				 		     , TB_OR_OM_CODE I 
				 		     , TB_OR_OM_ORGZ J 
				 		     , TB_OR_RH_BRC K
				 		  WHERE A.GRP_ORG_C = B.GRP_ORG_C 
				 		    AND A.BSN_PRSS_C = B.PRSS 
				 		    AND A.GRP_ORG_C = C.GRP_ORG_C 
				 		    AND A.CAS_TPC = C.CAS 
				 		    AND A.GRP_ORG_C = D.GRP_ORG_C 
				 		    AND A.IFN_TPC = D.IFN 
				 		    AND A.GRP_ORG_C = E.GRP_ORG_C 
				 		    AND A.HPN_TPC = E.HPN 
				 		    AND A.GRP_ORG_C = F.GRP_ORG_C(+) 
				 		    AND A.EMRK_TPC = F.EMRK(+) 
				 		    AND A.GRP_ORG_C = G.GRP_ORG_C 
				 		    AND A.OPRK_RKP_ID = G.OPRK_RKP_ID 
				 		    AND G.RK_CTL_SQNO = '1' 
				 		    AND G.GRP_ORG_C = H.GRP_ORG_C 
				 		    AND G.RK_CTL_TPC = H.CTL 
				 		    AND A.GRP_ORG_C = #grp_org_c# 
						    AND A.OPRK_RKP_ID = #rkp_id# 
                            AND A.TEAM_CD = I.IDVDC_VAL(+)
                            AND I.INTG_GRP_C(+) = 'TEAM_CD'
                            AND K.BRC = J.BRC(+)
                            AND A.OPRK_RKP_ID = K.OPRK_RKP_ID(+)
				 		    AND J.BR_LKO_YN(+) = 'N'
						  ) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit05" name="통제유형1레벨조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT A.RK_CTL_TPC, NVL(A.CTL_TPNM,' ') CTL_NM, NVL(A.ENG_CTL_TPNM,' ') ENG_CTL_NM  
						  FROM TB_OR_OC_CTL A 
						 WHERE A.GRP_ORG_C = #grp_org_c# 
						   AND A.LVL_NO = 1 
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<data id="data1" name = "">
					<condition id="cond1" name="조건1" comparison="ne" value="1" variable="#lvl_no#" />
						   AND A.UP_RK_CTL_TPC = #up_rk_ctl_tpc# 
					</data>
				</sql>
				<sql id="sql5" name = "SQL3">
					<data id="data1" name = "">
						 ORDER BY A.RK_CTL_TPC 
					</data>
				</sql>				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	
	
	
	<process id="ORRC010401" name="리스크풀 등급 설정" forward="/rsa/ORRC0104" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>

	<process id="ORRC010402" name="리스크풀 등급 설정 조회_재무적 영향 기준" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S"> 
			<unit id="unit99" name="리스크풀 등급 설정 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				    		  SELECT GRP_ORG_C,FNA_IFN_C RK_GRD_SQNO, FNA_IFN_GRDNM||'('||ENG_FNA_IFN_GRDNM||')' RK_GRD_NM , ROUND(IFN_EVL_ST_NVL/1000000) CSA_IFN_EVL_ST_NVL, IFN_EVL_ST_BASCD, ROUND(IFN_EVL_ED_NVL/1000000) CSA_IFN_EVL_ED_NVL, IFN_EVL_ED_BASCD,
				    		    TO_NUMBER(DECODE(IFN_EVL_ED_NVL,0,NULL,(IFN_EVL_ST_NVL+IFN_EVL_ED_NVL)/2)) AS MID_NVL 
				    		 , ENG_IFN_EVL_ST_NVL, ENG_IFN_EVL_ST_BASCD, ENG_IFN_EVL_ED_NVL, ENG_IFN_EVL_ED_BASCD,
				    		    TO_NUMBER(DECODE(ENG_IFN_EVL_ED_NVL,0,NULL,(ENG_IFN_EVL_ST_NVL+ENG_IFN_EVL_ED_NVL)/2)) AS ENG_MID_NVL 
				    		   FROM TB_OR_RM_GRD
				    		  WHERE GRP_ORG_C = #grp_org_c#
					</data>
				</sql>
							
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC010403" name="리스크풀 등급 설정 조회_비재무적 영향 기준" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S"> 
			<unit id="unit99" name="리스크풀 등급 설정 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT A.NFNA_IFN_C , A.NFNA_IFN_GRDNM , B.NFNA_CNTN_C , C.INTG_IDVD_CNM CODE_CNTN , B.NFNA_CNTN , A.NFNA_IBI_CNTN
						      , ROW_NUMBER() OVER(PARTITION BY A.NFNA_IFN_C ORDER BY A.NFNA_IFN_C) PARTITION_ROW
						  FROM TB_OR_RM_NGRD A
						      ,TB_OR_RM_NGRD_CNTN B
						      ,TB_OR_OM_CODE C
						 WHERE A.NFNA_IFN_C = B.NFNA_IFN_C
						   AND B.NFNA_CNTN_C = C.IDVDC_VAL(+)
						   AND C.INTG_GRP_C(+) = 'NFNA_CNTN_C'
						 ORDER BY A.NFNA_IFN_C ASC , NFNA_CNTN_C ASC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC010404" name="리스크풀 등급 설정 저장_재무적영향기준" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rk_grd_sqno" name="재무영향등급코드" parmid="rk_grd_sqno" attr="A" default_value=""/>
		<parm id="rk_grd_nm" name="수준" parmid="rk_grd_nm" attr="A" default_value=""/>
		<parm id="csa_ifn_evl_st_nvl" name="영향평가시작수치" parmid="csa_ifn_evl_st_nvl" attr="A" default_value=""/>
		<parm id="ifn_evl_st_bascd" name="영향평가시작기준코드" parmid="ifn_evl_st_bascd" attr="A" default_value=""/>
		<parm id="csa_ifn_evl_ed_nvl" name="영향평가종료수치" parmid="csa_ifn_evl_ed_nvl" attr="A" default_value=""/>
		<parm id="ifn_evl_ed_bascd" name="영향평가종료기준코드" parmid="ifn_evl_ed_bascd" attr="A" default_value=""/>
		<parm id="bsn_prsnm" name="중간값" parmid="bsn_prsnm" attr="A" default_value=""/>
		<parm id="eng_ifn_evl_st_nvl" name="해외영향평가시작수치" parmid="eng_ifn_evl_st_nvl" attr="A" default_value=""/>
		<parm id="eng_ifn_evl_st_bascd" name="해외영향평가시작기준코드" parmid="eng_ifn_evl_st_bascd" attr="A" default_value=""/>
		<parm id="eng_ifn_evl_ed_nvl" name="해외영향평가종료수치" parmid="eng_ifn_evl_ed_nvl" attr="A" default_value=""/>
		<parm id="eng_ifn_evl_ed_bascd" name="해외영향평가종료기준코드" parmid="eng_ifn_evl_ed_bascd" attr="A" default_value=""/>
		<parm id="eng_bsn_prsnm" name="중간값" parmid="eng_bsn_prsnm" attr="A" default_value=""/>
				
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크풀 등급 설정 저장_재무적영향기준" type="M" mode="update" multiid="rk_grd_sqno" >
				<multivalue id="rk_grd_sqno" name="rk_grd_sqno" multiid="rk_grd_sqno"/>
				<multivalue id="rk_grd_nm" name="rk_grd_nm" multiid="rk_grd_nm"/>
				<multivalue id="csa_ifn_evl_st_nvl" name="csa_ifn_evl_st_nvl" multiid="csa_ifn_evl_st_nvl"/>
				<multivalue id="ifn_evl_st_bascd" name="ifn_evl_st_bascd" multiid="ifn_evl_st_bascd"/>
				<multivalue id="csa_ifn_evl_ed_nvl" name="csa_ifn_evl_ed_nvl" multiid="csa_ifn_evl_ed_nvl"/>
				<multivalue id="ifn_evl_ed_bascd" name="ifn_evl_ed_bascd" multiid="ifn_evl_ed_bascd"/>
				<multivalue id="bsn_prsnm" name="bsn_prsnm" multiid="bsn_prsnm"/>
				<multivalue id="eng_ifn_evl_st_nvl" name="eng_ifn_evl_st_nvl" multiid="eng_ifn_evl_st_nvl"/>
				<multivalue id="eng_ifn_evl_st_bascd" name="eng_ifn_evl_st_bascd" multiid="eng_ifn_evl_st_bascd"/>
				<multivalue id="eng_ifn_evl_ed_nvl" name="eng_ifn_evl_ed_nvl" multiid="eng_ifn_evl_ed_nvl"/>
				<multivalue id="eng_ifn_evl_ed_bascd" name="eng_ifn_evl_ed_bascd" multiid="eng_ifn_evl_ed_bascd"/>
				<multivalue id="eng_bsn_prsnm" name="eng_bsn_prsnm" multiid="eng_bsn_prsnm"/>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			            UPDATE  TB_OR_RM_GRD
			            SET     IFN_EVL_ST_NVL          = NVL(TRIM(#csa_ifn_evl_st_nvl#),0) * 1000000
			                ,   IFN_EVL_ED_NVL          = NVL(TRIM(#csa_ifn_evl_ed_nvl#),0) * 1000000
			                ,   IFN_EVL_ST_BASCD        = TRIM(#ifn_evl_st_bascd#)
			                ,   IFN_EVL_ED_BASCD        = TRIM(#ifn_evl_ed_bascd#)
			                ,   ENG_IFN_EVL_ST_NVL      = NVL(TRIM(#eng_ifn_evl_st_nvl#),0)
			                ,   ENG_IFN_EVL_ED_NVL      = NVL(TRIM(#eng_ifn_evl_ed_nvl#),0)
			                ,   ENG_IFN_EVL_ST_BASCD    = TRIM(#eng_ifn_evl_st_bascd#)
			                ,   ENG_IFN_EVL_ED_BASCD    = TRIM(#eng_ifn_evl_ed_bascd#)
			                ,   LS_WKR_ENO          	= TRIM(#userid#)
			                ,   LSCHG_DTM               = SYSDATE
			            WHERE   GRP_ORG_C               = #grp_org_c#
			            AND     FNA_IFN_C               = #rk_grd_sqno#
            		</data>
				</sql>
				
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010405" name="리스크풀 등급 설정 저장_비재무적영향기준" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="nfna_ifn_c" name="등급" parmid="nfna_ifn_c" attr="A" default_value=""/>
		<parm id="nfna_ifn_grdnm" name="수준" parmid="nfna_ifn_grdnm" attr="A" default_value=""/>
		<parm id="nfna_cntn_c" name="비재무적영향기준내용코드" parmid="nfna_cntn_c" attr="A" default_value=""/>
		<parm id="code_cntn" name="내용" parmid="code_cntn" attr="A" default_value=""/>
		<parm id="nfna_cntn" name="내용" parmid="nfna_cntn" attr="A" default_value=""/>
		<parm id="nfna_ibi_cntn" name="업무 중단 영향" parmid="nfna_ibi_cntn" attr="A" default_value=""/>
		<parm id="partition_row" name="PARTITION_ROW" parmid="partition_row" attr="A" default_value=""/>
				
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크풀 등급 설정 저장_비재무영향등급기본" type="M" mode="update" multiid="nfna_ifn_c" >
				<multivalue id="nfna_ifn_c" name="등급" multiid="nfna_ifn_c"/>
				<multivalue id="nfna_cntn_c" name="비재무적영향기준내용코드" multiid="nfna_cntn_c"/>
				<multivalue id="nfna_ibi_cntn" name="업무 중단 영향" multiid="nfna_ibi_cntn"/>
				<multivalue id="partition_row" name="PARTITION_ROW" multiid="partition_row"/>
				<sql id="sql1" name = "SQL1">
					<condition id="cond111" name="PARTITION_ROW=1" variable="#partition_row#" comparison="eq" value="1" />
					<data id="data1" name = "">
			            UPDATE  TB_OR_RM_NGRD
			            SET     NFNA_IBI_CNTN          = TRIM(#nfna_ibi_cntn#)
			                ,   LS_WKR_ENO           	= TRIM(#userid#)
			                ,   LSCHG_DTM               = SYSDATE
			            WHERE   NFNA_IFN_C               = #nfna_ifn_c#
            		</data>
				</sql>
				
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="리스크풀 등급 설정 저장_비재무영향등급내용" type="M" mode="update" multiid="nfna_ifn_c" >
				<multivalue id="nfna_ifn_c" name="등급" multiid="nfna_ifn_c"/>
				<multivalue id="nfna_cntn_c" name="비재무적영향기준내용코드" multiid="nfna_cntn_c"/>
				<multivalue id="nfna_cntn" name="내용" multiid="nfna_cntn"/>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			            UPDATE  TB_OR_RM_NGRD_CNTN
			            SET     NFNA_CNTN          = TRIM(#nfna_cntn#)
			                ,   LS_WKR_ENO           	= TRIM(#userid#)
			                ,   LSCHG_DTM               = SYSDATE
			             WHERE  NFNA_IFN_C               = #nfna_ifn_c#
			               AND  NFNA_CNTN_C = #nfna_cntn_c#
            		</data>
				</sql>
				
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010501" name="일정관리" forward="/rsa/ORRC0105" 	forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RK_EVL_PRG_STSC"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c# 
						    AND INTG_GRP_C = #intg_grp_c#  
						    AND C_UYN = 'Y'  
						  ORDER BY SORT_SQ   
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>

	<process id="ORRC010502" name="일정관리 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="일정관리조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT  GRP_ORG_C
						  , BAS_YM
						  , SUBSTR(BAS_YM,0,4)||'년 '||
						    CASE WHEN SUBSTR(BAS_YM,5,2) &lt;= 03 THEN '1분기'
						         WHEN SUBSTR(BAS_YM,5,2) &lt;= 06 THEN '2분기'
						         WHEN SUBSTR(BAS_YM,5,2) &lt;= 09 THEN '3분기'
						         WHEN SUBSTR(BAS_YM,5,2) &lt;= 12 THEN '4분기'
						      END ||'('||BAS_YM||')' BAS_YM_NM
						  , RK_EVL_TPC, RK_EVL_ST_DT, RK_EVL_ED_DT, RK_EVL_PRG_STSC,RK_EVL_CHG_RSN
						    FROM  TB_OR_OM_SCHD
						   WHERE GRP_ORG_C = #grp_org_c# 
						     AND RK_EVL_TGT_YN = 'Y'
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#bas_yy#" />
					<data id="data1" name = "">
			    		  AND BAS_YM &gt;  #bas_yy#||'00' 
			    		  AND BAS_YM &lt;= #bas_yy#||'99' 
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#rk_evl_prg_stsc#" />
					<data id="data1" name = "">
			    		  AND RK_EVL_PRG_STSC = #rk_evl_prg_stsc# 
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		  ORDER BY BAS_YM DESC 
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC010601" name="일정등록" forward="/rsa/ORRC0106" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RK_EVL_TPC"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND INTG_GRP_C = TRIM(#intg_grp_c#)  
						    AND C_UYN = 'Y'  
						  ORDER BY SORT_SQ   
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010602" name="RCSA일정변경" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="RCSA평가회차" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rk_evl_st_dt" name="RCSA평가시작일" parmid="evl_st_btn" attr="S" default_value=""/>
		<parm id="rk_evl_ed_dt" name="RCSA평가종료일" parmid="evl_ed_btn" attr="S" default_value=""/>
		<parm id="rk_evl_chg_rsn" name="등록 및 변경 사유" parmid="rk_evl_chg_rsn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="RCSA일정변경" type="S" mode="update">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE TB_OR_OM_SCHD SET RK_EVL_ST_DT = TRIM(#rk_evl_st_dt#)
						 						 ,RK_EVL_ED_dT = TRIM(#rk_evl_ed_dt#)
						 						 ,RK_EVL_CHG_RSN = TRIM(#rk_evl_chg_rsn#)
						 				    WHERE BAS_YM = TRIM(#bas_ym#)    
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC010701" name="평가대상리스크선정" forward="/rsa/ORRC0107" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RKP_TPC" />
  		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND INTG_GRP_C = TRIM(#intg_grp_c#)  
						    AND C_UYN = 'Y'  
						  ORDER BY SORT_SQ   
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
			<unit id="unit02" name="회차조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT  GRP_ORG_C
						  , BAS_YM
						  , SUBSTR(BAS_YM,0,4)||'년 '||
						    CASE WHEN SUBSTR(BAS_YM,5,2) &lt;= 03 THEN '1분기'
						         WHEN SUBSTR(BAS_YM,5,2) &lt;= 06 THEN '2분기'
						         WHEN SUBSTR(BAS_YM,5,2) &lt;= 09 THEN '3분기'
						         WHEN SUBSTR(BAS_YM,5,2) &lt;= 12 THEN '4분기'
						      END ||'('||BAS_YM||')' BAS_YM_NM
						  , RK_EVL_TPC, RK_EVL_ST_DT, RK_EVL_ED_DT, RK_EVL_PRG_STSC,RK_EVL_CHG_RSN
						    FROM  TB_OR_OM_SCHD
						   WHERE GRP_ORG_C = #grp_org_c# 
						     AND RK_EVL_TGT_YN = 'Y'
						   ORDER BY BAS_YM DESC
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group> 
	</process>

	<process id="ORRC010702" name="평가대상리스크선정 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="bas_ym" name="RCSA평가일정" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="sch_rkp_fq" name="RCSA평가주기" parmid="sch_rkp_fq" attr="S" default_value=""/>
		<parm id="bsn_prss_c" name="업무프로세스코드" parmid="bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_krk_yn" name="중요리스크" parmid="sch_krk_yn" attr="S" default_value=""/>
		<parm id="sch_evl_obj_yn" name="평가대상" parmid="sch_evl_obj_yn" attr="S" default_value=""/>
		<parm id="sch_reg_st_dt" name="등록일자(부터)" parmid="sch_reg_st_dt" attr="S" default_value=""/>
		<parm id="sch_reg_ed_dt" name="등록일자(까지)" parmid="sch_reg_ed_dt" attr="S" default_value=""/>
		<parm id="sch_chg_st_dt" name="변경일자(부터)" parmid="sch_chg_st_dt" attr="S" default_value=""/>
		<parm id="sch_chg_ed_dt" name="변경일자(까지)" parmid="sch_chg_ed_dt" attr="S" default_value=""/>
		<parm id="sch_brc" name="평가부서/팀" parmid="sch_brc" attr="S" default_value=""/>
		<parm id="rpk_id" name="리스크사례ID" parmid="rpk_id" attr="S" default_value=""/>
		<parm id="rk_isc_cntn" name="리스크사례" parmid="rk_isc_cntn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="일정관리조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				      SELECT * 
				 		FROM ( 
				 		WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, CTL AS ( 
				 		     SELECT SUBSTR(CTL, INSTR(CTL,'|',1,2) + 1, INSTR(CTL,'|',1,3) - INSTR(CTL,'|',1,2) -1) CTL1 
				 		          , SUBSTR(CTL, INSTR(CTL,'|',1,3) + 1) CTL 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,2) + 1, INSTR(CTLNM,'|',1,3) - INSTR(CTLNM,'|',1,2) -1) CTLNM1 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,3) + 1) CTLNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(RK_CTL_TPC,'|') AS CTL 
				 		              , SYS_CONNECT_BY_PATH(CTL_TPNM,'|') AS CTLNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_CTL 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_RK_CTL_TPC IS NULL 
				 		         CONNECT BY PRIOR RK_CTL_TPC = UP_RK_CTL_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		)
                        , BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C, B.UP_BRC ,                            
						       B.BRNM,
						       B.BRC,
                               A.OPRK_RKP_ID
						      FROM TB_OR_RH_BRC A                              
						       LEFT JOIN TB_OR_OM_ORGZ B                             
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC                                       
						        AND B.UYN = 'Y'
                             GROUP BY A.GRP_ORG_C,B.UP_BRC,B.BRNM,B.BRC,A.OPRK_RKP_ID
						)
				  		SELECT A.OPRK_RKP_ID RKP_ID
                             , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN F.BRNM
				  		     		END BRNM
				  		     , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN G.BRNM
				  		     		END DEPT_BRNM
                             , B.PRSSNM1
                             , B.PRSSNM2
                             , B.PRSSNM3
                             , B.PRSSNM4 
                             , B.PRSS
                             , A.RK_ISC_CNTN 
                             , C.RK_CP_CNTN CP_CNTN 
                             , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') REG_DT
				  		     , TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') CHG_DT
				 		     , A.KRK_YN 
				 		     , E.INTG_IDVD_CNM RPT_FQ_DSCNM
				 		     , H.EVL_OBJ_YN
				 		FROM TB_OR_RM_RKP A 
				 		   , PRSS B 
				 		   , TB_OR_RH_CTL_SCF C 
				 		   , CTL D 
				 		   , TB_OR_OM_CODE E 
				 		   , BRNM F
                           , TB_OR_OM_ORGZ G
                           , TB_OR_RH_RKSLT H
		 			  WHERE A.GRP_ORG_C = B.GRP_ORG_C 
				 		AND A.BSN_PRSS_C = B.PRSS 
				 		AND A.GRP_ORG_C = C.GRP_ORG_C 
				 		AND A.OPRK_RKP_ID = C.OPRK_RKP_ID 
				 		AND C.RK_CTL_SQNO = '1' 
				 		AND C.GRP_ORG_C = D.GRP_ORG_C 
				 		AND C.RK_CTL_TPC = D.CTL 
				 		AND A.OPRK_RKP_ID = F.OPRK_RKP_ID(+)
				 		AND E.INTG_GRP_C(+) = 'RPT_FQ_DSC'
						AND E.IDVDC_VAL(+) = A.RPT_FQ_DSC
 						AND F.UP_BRC = G.BRC (+)
				 		AND A.GRP_ORG_C = TRIM(#grp_org_c#)
                        AND A.OPRK_RKP_ID = H.OPRK_RKP_ID
                        AND H.BAS_YM = TRIM(#bas_ym#)                                    
				
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_rkp_fq#" />
					<data id="data1" name = "">
			    		AND A.RPT_FQ_DSC = TRIM(#sch_rkp_fq#) 
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="cond2" name="조건2" comparison="ne" value="" variable="#bsn_prss_c#" />
					<data id="data1" name = "">
			    		AND A.BSN_PRSS_C = TRIM(#bsn_prss_c#)                
					</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond3" name="조건3" comparison="ne" value="" variable="#sch_krk_yn#" />
					<data id="data1" name = "">
			    		  AND A.KRK_YN = TRIM(#sch_krk_yn#)
					</data>
				</sql>
				<sql id="sql4" name = "SQL4">
					<condition id="cond4" name="조건4" comparison="ne" value="" variable="#sch_evl_obj_yn#" />
					<data id="data1" name = "">
			    		  AND H.EVL_OBJ_YN = TRIM(#sch_evl_obj_yn#)
					</data>
				</sql>
				<sql id="sql5" name = "SQL5">
					<condition id="cond5" name="조건5" comparison="ne" value="" variable="#sch_brc#" />
					<data id="data1" name = "">
			    		  AND G.BRC = TRIM(#sch_brc#) 
					</data>
				</sql>
				<sql id="sql16" name = "SQL16">
					<condition id="cond6" name="조건6" comparison="ne" value="" variable="#sch_reg_st_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') &gt;= REPLACE(TRIM(#sch_reg_st_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql17" name = "SQL17">
					<condition id="cond7" name="조건7" comparison="ne" value="" variable="#sch_reg_ed_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') &lt;= REPLACE(TRIM(#sch_reg_ed_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql18" name = "SQL18">
					<condition id="cond8" name="조건8" comparison="ne" value="" variable="#sch_chg_st_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') &gt;= REPLACE(TRIM(#sch_chg_st_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql19" name = "SQL19">
					<condition id="cond9" name="조건9" comparison="ne" value="" variable="#sch_chg_ed_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') &lt;= REPLACE(TRIM(#sch_chg_ed_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql20" name = "SQL20">
					<condition id="cond10" name="조건10" comparison="ne" value="" variable="#rpk_id#" />
					<data id="data1" name = "">
			    		  AND  A.OPRK_RKP_ID LIKE '%%'||TRIM(#rpk_id#)||'%%'                       
					</data>
				</sql>
				<sql id="sql21" name = "SQL21">
					<condition id="cond11" name="조건11" comparison="ne" value="" variable="#rk_isc_cntn#" />
					<data id="data1" name = "">
			    		  AND     A.RK_ISC_CNTN LIKE '%%'||TRIM(#rk_isc_cntn#)||'%%'  
					</data>
				</sql>
				<sql>
					<data>
					ORDER BY A.OPRK_RKP_ID
						)
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC010703" name="평가대상 리스크 선정 및 제외" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="input_ds" name="입력구분" parmid="input_ds" attr="S" default_value=""/>
		<parm id="rkp_id" name="리스크풀ID" parmid="rkp_id" attr="A" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="평가대상리스크선정결재처리" type="S" mode="select" >
			<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  RK_EVL_PRG_STSC        
						 FROM    TB_OR_OM_SCHD  
						 WHERE   GRP_ORG_C   = #grp_org_c# 
						 AND     BAS_YM   = #bas_ym# 
					</data>
				</sql>
				<result id="rk_evl_prg_stsc" name="rk_evl_prg_stsc" attrname="rk_evl_prg_stsc" type="single_string"/>
			</unit>
		</group>
		<group id="grp01" name="grp01" type="M" multiid="rkp_id">
			<multivalue id="rkp_id" name="rkp_id" multiid="rkp_id"/>
			<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
			<unit id="unit99" name="평가대상리스크선정결재처리" type="S" mode="update">
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="cond1" variable="#rk_evl_prg_stsc#" comparison="ne" value="02" />
					<condition id="cond2" name="cond2" variable="#rk_evl_prg_stsc#" comparison="ne" value="03" operator="and" />
					<condition id="cond3" name="cond3" variable="#input_ds#" comparison="eq" value="1" operator="and" />
					<data id="data1" name = "">
						 UPDATE  TB_OR_RH_RKSLT   
						 SET     EVL_OBJ_YN  = 'Y'          
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     OPRK_RKP_ID = #rkp_id# 
						 AND     BAS_YM   = #bas_ym#   
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="cond1" name="cond1" variable="#rk_evl_prg_stsc#" comparison="ne" value="02" />
					<condition id="cond2" name="cond2" variable="#rk_evl_prg_stsc#" comparison="ne" value="03" operator="and" />
					<condition id="cond3" name="cond3" variable="#input_ds#" comparison="eq" value="2" operator="and" />
					<data id="data1" name = "">
						 UPDATE  TB_OR_RH_RKSLT   
						 SET     EVL_OBJ_YN  = 'N'          
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     OPRK_RKP_ID = #rkp_id# 
						 AND     BAS_YM   = #bas_ym#   
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>

	<process id="ORRC010801" name="평가자지정" forward="/rsa/ORRC0108" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<session id="brc" name="사무소코드" sessionid="brc" object="String" />
  		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="평가자지정리스트조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT              
						         A.ENO VLR_ENO                       
						        ,A0.CHRG_EMPNM VLR_ENPNM               
						        ,C1.BRNM VLR_UP_BRNM                   
						        ,C0.BRNM VLR_BRNM                       
						        ,CO02.INTG_IDVD_CNM VLR_OFT                          
						        ,CASE WHEN CO01.INTG_IDVD_CNM = '텔러직' AND C1.BRNM = C0.BRNM THEN '4'
						              WHEN C1.BRNM = C0.BRNM THEN '1'       
						              ELSE '3' END NUM                
						         FROM  TB_OR_OH_ORGZ_EMP A                       
						        INNER JOIN TB_OR_OM_EMP A0                         
						                ON A.GRP_ORG_C = A0.GRP_ORG_C                      
						             AND A.ENO = A0.ENO                               
						        INNER JOIN TB_OR_OM_ORGZ C1                        
						                ON A.GRP_ORG_C = C1.GRP_ORG_C                      
						               AND A.BRC = C1.BRC                       
						        INNER JOIN TB_OR_OM_ORGZ C0                        
						                ON A0.GRP_ORG_C = C0.GRP_ORG_C                     
						               AND A0.BRC = C0.BRC
						        LEFT OUTER JOIN TB_OR_OM_CODE CO01
						                ON A0.PZCC = CO01.IDVDC_VAL
						               AND CO01.INTG_GRP_C = 'PZCC'
						        LEFT OUTER JOIN TB_OR_OM_CODE CO02
						                ON A0.OFT_C = CO02.IDVDC_VAL
						               AND CO02.INTG_GRP_C = 'OFT_C'                         
						         WHERE                               
						               A.GRP_ORG_C = TRIM(#grp_org_c#)                            
						           AND A.BRC = TRIM(#brc#)                       
						        ORDER BY DECODE(CO01.INTG_IDVD_CNM,'텔러직','XX',NVL(A0.PZCC,'XX')), A.ENO	
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC010802" name="평가자지정 상단 집계" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<session id="brc" name="사무소코드" sessionid="brc" object="String" />
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="평가자지정합계조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                      
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string"/>
			</unit>
			<unit id="unit99" name="평가자지정합계조회" type="S" mode="select">
				<sql id="sql2" name = "SQL2">
					<data id="data2" name = "">
                SELECT NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),0) EVL_OBJ_CNT
                      ,ROUND(((NVL(SUM(CASE WHEN A.VLR_ENO IS NOT NULL THEN 1 END),0)
                        /NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),1)*100)
                        ),2)||'%' EVL_DCZ_PCT
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_OM_ORGZ       C
                        WHERE A.GRP_ORG_C = B.GRP_ORG_C
                          AND B.GRP_ORG_C = C.GRP_ORG_C
                          AND A.BAS_YM = B.BAS_YM
                          AND A.OPRK_RKP_ID = B.OPRK_RKP_ID
                          AND A.BRC = C.BRC
                          AND A.BRC = B.BRC
                          AND A.DCZ_SQNO = B.DCZ_SQNO
                          AND A.BRC = TRIM(#brc#)
                          AND A.BAS_YM = TRIM(#bas_ym#)
                    </data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
 		</group>
	</process>
	
	<process id="ORRC010803" name="평가자지정조회" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="bsn_prss_c" name="업무프로세스검색조건" parmid="bsn_prss_c" attr="A" default_value=""/>
		<parm id="evl_app_yn" name="평가자지정 이행여부 YN" parmid="evl_app_yn" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="평가자지정조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'   
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="평가자지정조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		)
                        , DEPT_BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C
                             , B.UP_BRC 
                             , C.BRNM
						     , B.BRC    
						      FROM TB_OR_RH_BRC A                              
						    LEFT JOIN TB_OR_OM_ORGZ B
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC
						        AND B.UYN = 'Y'
                            LEFT JOIN TB_OR_OM_ORGZ C
                                 ON B.UP_BRC = C.BRC
                                AND C.UYN = 'Y'
						      GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC
						)
                         SELECT  
                               B.GRP_ORG_C                                                  
						     , B.BRC
                             , A.OPRK_RKP_ID RKP_ID
                             , TRIM(#bas_ym#) BAS_YM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN C.RKP_TPC ='02' THEN F.BRNM
				  		     		END DEPT_BRNM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN D.BRNM
				  		     		WHEN C.RKP_TPC ='02' THEN D.BRNM
				  		     		END BRNM
                             , G.PRSSNM1
                             , G.PRSSNM2
                             , G.PRSSNM3
                             , G.PRSSNM4
                             , C.RK_ISC_CNTN
                             , H.RK_CP_CNTN CP_CNTN
                             , CASE WHEN A.VLR_ENO IS NOT NULL THEN 'Y' ELSE 'N' END EVL_APP_YN
                             , A.EVL_OBJ_YN
                             , A.VLR_ENO
                             , E.CHRG_EMPNM VLR_NM
                             , A.REEVL_YN
						     , B.RK_EVL_DCZ_STSC                                           
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   TB_OR_OM_ORGZ       D
                             ,   TB_OR_OM_EMP        E
                             ,   DEPT_BRNM           F
                             ,   PRSS                G
                             ,   TB_OR_RH_CTL_SCF    H
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.BRC = B.BRC
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BRC = D.BRC                           
                           AND A.VLR_ENO = E.ENO(+)
                           AND ((D.BRC = F.BRC AND D.HOFC_BIZO_DSC = '02') OR (D.UP_BRC = F.BRC AND D.HOFC_BIZO_DSC = '03'))
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.OPRK_RKP_ID = H.OPRK_RKP_ID
                           AND A.BAS_YM = TRIM(#bas_ym#)
                           AND A.BAS_YM = C.BAS_YM
                           AND A.BRC = TRIM(#brc#)                                 
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#bsn_prss_c#" />
						<data id="data1" name = "">
							AND TRIM(#bsn_prss_c#) IN (G.PRSS1,G.PRSS2,G.PRSS3, G.PRSS4)
						</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="eq" value="Y" variable="#evl_app_yn#" />
						<data id="data1" name = "">
							AND A.VLR_ENO IS NOT NULL 
						</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="eq" value="N" variable="#evl_app_yn#" />
						<data id="data1" name = "">
							AND A.VLR_ENO IS NULL 
						</data>
				</sql>
				<sql id="sql4" name = "SQL4">
						<data id="data1" name = "">
							)
						</data>
				</sql>
				<sql id="sql5" name = "SQL5">
						<data id="data1" name = "">
						ORDER BY RKP_ID ASC
						</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
							
 		</group>
	</process>
	
	<process id="ORRC010804" name="평가자지정결재처리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="A" default_value=""/>
		<parm id="rkp_id" name="리스크풀ID" parmid="rkp_id" attr="A" default_value=""/>
		<parm id="bas_ym" name="평가기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<parm id="vlr_eno1" name="평가자개인번호" parmid="vlr_eno1" attr="S" default_value=""/>
		<parm id="dcz_dc" name="결재진행코드" parmid="dcz_dc" attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="M" multiid="rkp_id">
			<multivalue id="brc" name="brc" multiid="brc"/>
			<multivalue id="rkp_id" name="rkp_id" multiid="rkp_id"/>
			<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
			<unit id="unit01" name="평가자지정결재처리" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="cond1" variable="#input_ds#" comparison="eq" value="1" />        
					
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_EVL     
						 SET     VLR_ENO     = TRIM(#vlr_eno1#)
						     ,   EVL_OBJ_YN  = 'Y'   
						     ,   LSCHG_DTM   = SYSDATE    
						     ,   LS_WKR_ENO  = TRIM(#userid#)  
						 WHERE   GRP_ORG_C   = TRIM(#grp_org_c#)    
						 AND     BRC         = TRIM(#brc#)    
						 AND     OPRK_RKP_ID = TRIM(#rkp_id#)   
						 AND     BAS_YM   = TRIM(#bas_ym#)   
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="cond1" variable="#input_ds#" comparison="eq" value="2" />        
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_EVL     
						 SET     VLR_ENO     = '' 
						     ,   EVL_OBJ_YN  = 'N'   
						     ,   LSCHG_DTM   = SYSDATE    
						     ,   LS_WKR_ENO  = TRIM(#userid#)  
						 WHERE   GRP_ORG_C   = TRIM(#grp_org_c#)    
						 AND     BRC         = TRIM(#brc#)    
						 AND     OPRK_RKP_ID = TRIM(#rkp_id#)   
						 AND     BAS_YM   = TRIM(#bas_ym#)   
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit01" name="MAX결재일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  MAX(DCZ_SQNO)+1 DCZ_SQNO   
						 FROM    TB_OR_RH_EVL_DCZ   
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     BRC         = TRIM(#brc#)        
						 AND     OPRK_RKP_ID = #rkp_id#
						 AND     BAS_YM   = #bas_ym#                 
					</data>
				</sql>
				<result id="result" name="dcz_sqno" attrname="dcz_sqno" type="single_string"/>
			</unit>
			<unit id="unit02" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_EVL_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   OPRK_RKP_ID                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   RK_EVL_DCZ_STSC  
						     ,	 RTN_CNTN             
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#bas_ym#)        
						     ,   TRIM(#rkp_id#)    
						     ,   TRIM(#brc#)      
						     ,   #dcz_sqno#                     
						     ,   TO_CHAR(SYSDATE,'YYYYMMDD')   
						     ,   ''       
						     ,   #dcz_dc#
						     ,	 ''                          
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_EVL                         
						 SET     DCZ_SQNO       = #dcz_sqno#                                      
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     OPRK_RKP_ID     = #rkp_id#                   
						 AND     BAS_YM       = #bas_ym#                               
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
				
		</group>
	</process>
	
	<process id="ORRC010901" name="리스크 평가" forward="/rsa/ORRC0109" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="rcsa_menu_dsc" name="RCSA메뉴구분" parmid="rcsa_menu_dsc" attr="A" default_value=""/>
  		<group id="grp01" name="grp01" type="S">
			<unit id="unit00" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                   
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit02" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="1" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
				    		 SELECT ENO VLR_ENO, CHRG_EMPNM||'('||ENO||')' VLR_ENPNM
				    		   FROM TB_OR_OM_EMP 
				    		  WHERE GRP_ORG_C = #grp_org_c#        
				    		  AND   TRIM(ENO) = TRIM(#userid#)  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
			<unit id="unit03" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="2" variable="#rcsa_menu_dsc#" />
					<condition id="cond1" name="조건1" comparison="eq" value="3" variable="#rcsa_menu_dsc#" operator="or"/>
					<data id="data1" name = "">
			        		 SELECT  DISTINCT B.ENO VLR_ENO, B.CHRG_EMPNM||'('||B.ENO||')' VLR_ENPNM
			        		 FROM    TB_OR_RM_EVL     A  
			        		     ,   TB_OR_OM_EMP     B  
			        		 WHERE   A.GRP_ORG_C = #grp_org_c#             
			        		 AND     A.BAS_YM = #bas_ym#             
			        		 AND     A.GRP_ORG_C = B.GRP_ORG_C   
			        		 AND     TRIM(A.VLR_ENO)   = TRIM(B.ENO)                 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC010902" name="리스크평가집계조회" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<session id="brc" name="사무소코드" sessionid="brc" object="String" />
		<parm id="rcsa_menu_dsc" name="RCSA메뉴구분" parmid="rcsa_menu_dsc" attr="A" default_value=""/>
		<parm id="evl_eno" name="평가자 검색조건" parmid="evl_eno" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                   
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="리스크평가집계조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
                    SELECT A.BAS_YM
                   		 , SUBSTR(A.BAS_YM,0,4)||'년 '||
						    	CASE WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 03 THEN '1분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 06 THEN '2분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 09 THEN '3분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 12 THEN '4분기'
						      	END ||'('||A.BAS_YM||')' BAS_YM_NM
					      ,NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),0) EVL_CNT
					      ,NVL(SUM(CASE WHEN A.EVL_CPL_YN = 'Y' THEN 1 END),0) EVL_CPL_CNT
					      ,ROUND(NVL(NVL((SUM(CASE WHEN A.EVL_CPL_YN = 'Y' THEN 1 END)),0)/NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),1) * 100,0),2) EVL_RATE
					      ,TO_CHAR(TO_DATE(B.RK_EVL_ST_DT,'YYYY-MM-DD'))||'~'||TO_CHAR(TO_DATE(B.RK_EVL_ED_DT,'YYYY-MM-DD')) EVL_DATE
					      ,NVL(MIN(A.EVL_CPL_YN),'N') ALL_EVL_CPL_YN
					  FROM TB_OR_RM_EVL A
					      ,TB_OR_OM_SCHD B
					  WHERE A.BAS_YM = B.BAS_YM
					    AND A.BAS_YM=  TRIM(#bas_ym#)
                        AND A.BRC = TRIM(#brc#)
                                           
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#evl_eno#" />
					<data id="data1" name = "">
			    		 AND     A.VLR_ENO           = TRIM(#evl_eno#)                                    
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="1" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND     A.VLR_ENO           = TRIM(#userid#)                                
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<data id="data2" name = "">
			    		 GROUP BY A.BAS_YM,B.RK_EVL_ST_DT,B.RK_EVL_ED_DT                                  
					</data>
				</sql>    
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
 		</group>
	</process>
	
	<process id="ORRC010903" name="리스크평가조회" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="rcsa_menu_dsc" name="RCSA메뉴구분" parmid="rcsa_menu_dsc" attr="A" default_value=""/>
		<parm id="evl_eno" name="평가자 검색조건" parmid="evl_eno" attr="A" default_value=""/>
		<parm id="sc_evl_stsc" name="평가상태 검색조건" parmid="sc_evl_stsc" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                     
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="리스크평가조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				 SELECT * FROM (
                    WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		)
                        , DEPT_BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C
                             , B.UP_BRC 
                             , C.BRNM
						     , B.BRC    
						      FROM TB_OR_RH_BRC A                              
						    LEFT JOIN TB_OR_OM_ORGZ B
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC
						        AND B.UYN = 'Y'
                            LEFT JOIN TB_OR_OM_ORGZ C
                                 ON B.UP_BRC = C.BRC
                                AND C.UYN = 'Y'
						      GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC
						)

                        SELECT  
                               B.GRP_ORG_C                                                  
						     , B.BRC
                             , A.OPRK_RKP_ID RKP_ID
                             , A.BAS_YM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN C.RKP_TPC ='02' THEN F.BRNM
				  		     		END DEPT_BRNM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN D.BRNM
				  		     		WHEN C.RKP_TPC ='02' THEN D.BRNM
				  		     		END BRNM
                             , G.PRSSNM1
                             , G.PRSSNM2
                             , G.PRSSNM3
                             , G.PRSSNM4
                             , C.RK_ISC_CNTN
                             , H.RK_CP_CNTN CP_CNTN
                             , A.RK_EVL_GRD_C
                             , A.CTEV_GRD_C
                             , A.RMN_RSK_GRD_C RMN_RSK_GRD_C
                             , CASE WHEN B.RK_EVL_DCZ_STSC &lt;=02 AND NVL(A.REEVL_YN,'N')&lt;&gt;'Y' THEN '미평가'
                                    WHEN B.RK_EVL_DCZ_STSC &gt;=03 AND NVL(A.REEVL_YN,'N')&lt;&gt;'Y' THEN '평가완료'
                                    WHEN B.RK_EVL_DCZ_STSC &lt;=02 AND NVL(A.REEVL_YN,'N')='Y' THEN '재평가'
                                    WHEN B.RK_EVL_DCZ_STSC &gt;=03 AND NVL(A.REEVL_YN,'N')='Y' THEN '재평가완료'
                                    END EVL_STSC
                             , A.VLR_ENO
                             , E.CHRG_EMPNM VLR_NM
                             , NVL(A.REEVL_YN,'N') REEVL_YN
                             , CASE WHEN B.RK_EVL_DCZ_STSC&gt;=04 THEN 'Y' ELSE 'N' END DCZ_RQ_YN
						     , CASE WHEN B.RK_EVL_DCZ_STSC&gt;=13 THEN 'Y' ELSE 'N' END DCZ_YN
						     , B.RTN_CNTN                             
						     , B.RK_EVL_DCZ_STSC                             
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   TB_OR_OM_ORGZ       D
                             ,   TB_OR_OM_EMP        E
                             ,   DEPT_BRNM           F
                             ,   PRSS                G
                             ,   TB_OR_RH_CTL_SCF    H
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.BAS_YM = C.BAS_YM
                           AND A.BRC = B.BRC
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BRC = D.BRC                           
                           AND A.VLR_ENO = E.ENO(+)
                           AND ((D.BRC = F.BRC AND D.HOFC_BIZO_DSC = '02') OR (D.UP_BRC = F.BRC AND D.HOFC_BIZO_DSC = '03'))
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.OPRK_RKP_ID = H.OPRK_RKP_ID
                           AND A.BAS_YM = TRIM(#bas_ym#)
					</data>
				</sql>
                <sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="3" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND A.BRC = TRIM(#brc#)                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="3" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND  B.DCZ_OBJR_ENO = TRIM(#userid#)                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="1" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 	AND A.VLR_ENO           = TRIM(#userid#)                                    
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#bsn_prss_c#" />
						<data id="data1" name = "">
							AND TRIM(#bsn_prss_c#) IN (G.PRSS1,G.PRSS2,G.PRSS3, G.PRSS4)
						</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="eq" value="1" variable="#sc_evl_stsc#" />
						<data id="data1" name = "">
							AND B.RK_EVL_DCZ_STSC &lt;03 AND NVL(A.REEVL_YN,'N')&lt;&gt;'Y'
						</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="eq" value="2" variable="#sc_evl_stsc#" />
						<data id="data1" name = "">
							AND NVL(A.REEVL_YN,'N')='Y'
						</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="eq" value="3" variable="#sc_evl_stsc#" />
						<data id="data1" name = "">
							AND B.RK_EVL_DCZ_STSC &gt;=03
						</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#evl_eno#" />
					<data id="data1" name = "">
			    		 AND     A.VLR_ENO           = TRIM(#evl_eno#)                                    
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="3" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND     B.RK_EVL_DCZ_STSC = '04'                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
 						)                                 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC010904" name="리스크평가결재처리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="A" default_value=""/>
		<parm id="rkp_id" name="리스크풀ID" parmid="rkp_id" attr="A" default_value=""/>
		<parm id="dcz_dc" name="결재진행코드" parmid="dcz_dc" attr="A" default_value=""/>
		<parm id="dcz_objr_eno" name="결재확인자개인번호" parmid="dcz_objr_eno" attr="A" default_value=""/>
		<parm id="sch_rtn_cntn" name="결재/반려의견" parmid="sch_rtn_cntn" attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="M" multiid="rkp_id">
			<multivalue id="brc" name="brc" multiid="brc"/>
			<multivalue id="rkp_id" name="rkp_id" multiid="rkp_id"/>
			<multivalue id="dcz_dc" name="dcz_dc" multiid="dcz_dc"/>
			<multivalue id="dcz_objr_eno" name="dcz_objr_eno" multiid="dcz_objr_eno"/>
			<multivalue id="sch_rtn_cntn" name="sch_rtn_cntn" multiid="sch_rtn_cntn"/>
			<unit id="unit01" name="MAX결재일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  MAX(DCZ_SQNO)+1 DCZ_SQNO
						 FROM    TB_OR_RH_EVL_DCZ   
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     BRC         = TRIM(#brc#)        
						 AND     OPRK_RKP_ID = #rkp_id#
						 AND     BAS_YM   = #bas_ym#                 
					</data>
				</sql>
				<result id="result" name="dcz_sqno" attrname="dcz_sqno" type="single_string"/>
			</unit>
			<unit id="unit02" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_EVL_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   OPRK_RKP_ID                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   RK_EVL_DCZ_STSC  
						     ,	 RTN_CNTN
						     ,   DCZ_OBJR_ENO             
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#bas_ym#)        
						     ,   TRIM(#rkp_id#)    
						     ,   TRIM(#brc#)      
						     ,   #dcz_sqno#                     
						     ,   TO_CHAR(SYSDATE,'YYYYMMDD')   
						     ,   TRIM(#userid#)       
						     ,   #dcz_dc#
						     ,	 #sch_rtn_cntn#
						     ,   #dcz_objr_eno#                          
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_EVL                         
						 SET     DCZ_SQNO       = #dcz_sqno#                                      
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     OPRK_RKP_ID     = #rkp_id#                   
						 AND     BAS_YM       = #bas_ym#                               
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011001" name="리스크 자가진단" forward="/rsa/ORRC0110" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="link_rkp_id" name="리스크풀아이디" parmid="link_rkp_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="link_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit01" name="리스크평가 부서 정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">
							SELECT																				            
					 		   GRP_ORG_C																					
				   			   , BRC																						
				   			   , UP_BRC																						
				   			   , BRNM
				   			   , LEVEL  AS "LEVEL"
				   			   , NVL(ORGZ_CFC, 'N') AS ORGZ_CFC
				   			   , NVL(LWST_ORGZ_YN, 'N') AS LWST_ORGZ_YN
				   			   , NVL(UYN, 'N') AS UYN
				   			    FROM (																						
			     				 SELECT DISTINCT *																			
			       				   FROM TB_OR_OM_ORGZ																
			      				  WHERE GRP_ORG_C = TRIM(#grp_org_c#)																	
			        			    AND UYN = 'Y'																			
			        				AND BR_LKO_YN = 'N'																		
			      			 START WITH BRC = TRIM(#brc#)
                             CONNECT BY PRIOR UP_BRC = BRC																
			 			  	   )	A
		 	 		    START WITH HOFC_BIZO_DSC = '01'																	
		 	  		    CONNECT BY PRIOR BRC = UP_BRC																	
		 	 		      ORDER SIBLINGS BY BRC	           
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
				<unit id="unit02" name="리스크평가 프로세스 정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">
					    	SELECT																				            
					 		   BSN_PRSS_C,BSN_PRSNM
				   			    FROM (																						
			     				 SELECT DISTINCT *																			
			       				   FROM TB_OR_OC_PRSS A
			      				  WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)																	
			        			    AND A.VLD_YN = 'Y'
			      			 START WITH A.BSN_PRSS_C = (SELECT B.BSN_PRSS_C FROM TB_OR_RM_RKP B WHERE VLD_YN = 'Y' AND B.OPRK_RKP_ID = TRIM(#link_rkp_id#)) 
                             CONNECT BY PRIOR A.UP_BSN_PRSS_C = A.BSN_PRSS_C																
			 			  	   )	A
		 	 		    START WITH LVL_NO = '1'																	
		 	  		    CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C																	
		 	 		      ORDER SIBLINGS BY BSN_PRSS_C	  
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC011002" name="리스크평가내역조회" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<session id="brc" name="부서" sessionid="brc" object="String" />
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<parm id="rkp_id" name="리스크풀 ID" parmid="rkp_id" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크평가내역조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT 
                                 NVL(A.IFN_EVL_C,'1') IFN_EVL_C
			    		     ,   NVL(A.NIFN_EVL_C,'1') NIFN_EVL_C                                                                                              
			    		     ,   NVL(A.RK_EVL_GRD_C,'1') RK_EVL_GRD_C                                                                                              
			    		     ,   NVL(A.CTL_DSG_EVL_C,'1') CTL_DSG_EVL_C                                                                                           
			    		     ,   NVL(A.CTL_MNGM_EVL_C,'1') CTL_MNGM_EVL_C                                                           
			    		     ,   NVL(A.CTEV_GRD_C,'1') CTEV_GRD_C
                             ,   NVL(A.RMN_RSK_GRD_C,'1') RMN_RSK_GRD_C
                             ,   CASE WHEN NVL(A.IFN_EVL_C,'1')&gt;NVL(A.NIFN_EVL_C,'1') THEN NVL(A.IFN_EVL_C,'1')
                                      ELSE NVL(A.NIFN_EVL_C,'1')
                                  END EVL_IFN
                             ,   NVL(A.FRQ_EVL_C,'1') EVL_FRQ
                             ,   B.RK_ISC_CNTN
                             ,   C.RK_CP_CNTN
			    		 FROM   TB_OR_RM_EVL A
			    		 	   ,TB_OR_RN_RKPMM B
			    		 	   ,TB_OR_RN_CTL_SCFMM C
                        WHERE A.BAS_YM = TRIM(#bas_ym#)
                          AND A.BRC = TRIM(#brc#)
                          AND A.OPRK_RKP_ID = TRIM(#rkp_id#)  
                          AND A.OPRK_RKP_ID = B.OPRK_RKP_ID
                          AND A.BAS_YM = B.BAS_YM  
                          AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                          AND A.BAS_YM = C.BAS_YM                                                                         
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC011003" name="위험등급기준_영향 조회" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크평가내역조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    SELECT RK_GRD_SQNO 
			          , RK_GRD_NM 
			          , CASE WHEN DECODE(CSA_IFN_EVL_ST_NVL,0,'',CSA_IFN_EVL_ST_NVL) IS NOT NULL AND LENGTH(CSA_IFN_EVL_ST_NVL) &lt; 5 THEN CSA_IFN_EVL_ST_NVL||'만원'
			                 WHEN DECODE(CSA_IFN_EVL_ST_NVL,0,'',CSA_IFN_EVL_ST_NVL) IS NOT NULL AND LENGTH(CSA_IFN_EVL_ST_NVL) &gt;= 5 THEN (CSA_IFN_EVL_ST_NVL/10000)||'억'
			                 ELSE DECODE(CSA_IFN_EVL_ST_NVL,0,'',CSA_IFN_EVL_ST_NVL)
			              END
			            || CASE WHEN DECODE(CSA_IFN_EVL_ST_NVL,0,'',CSA_IFN_EVL_ST_NVL) IS NOT NULL AND IFN_EVL_ST_BASCD = '01' THEN ' 이상'
			                    WHEN DECODE(CSA_IFN_EVL_ST_NVL,0,'',CSA_IFN_EVL_ST_NVL) IS NOT NULL AND IFN_EVL_ST_BASCD = '02' THEN ' 초과'
			                END
			            || CASE WHEN RK_GRD_SQNO NOT IN ('1','5') THEN ' ~ ' END ||
			            CASE WHEN DECODE(CSA_IFN_EVL_ED_NVL,0,'',CSA_IFN_EVL_ED_NVL) IS NOT NULL AND LENGTH(CSA_IFN_EVL_ED_NVL) &lt; 5 THEN CSA_IFN_EVL_ED_NVL||'만원'
			                 WHEN DECODE(CSA_IFN_EVL_ED_NVL,0,'',CSA_IFN_EVL_ED_NVL) IS NOT NULL AND LENGTH(CSA_IFN_EVL_ED_NVL) &gt;= 5 THEN (CSA_IFN_EVL_ED_NVL/10000)||'억'
			                 ELSE DECODE(CSA_IFN_EVL_ED_NVL,0,'',CSA_IFN_EVL_ED_NVL)
			              END
			            || CASE WHEN DECODE(CSA_IFN_EVL_ED_NVL,0,'',CSA_IFN_EVL_ED_NVL) IS NOT NULL AND IFN_EVL_ED_BASCD = '01' THEN ' 이하'
			                    WHEN DECODE(CSA_IFN_EVL_ED_NVL,0,'',CSA_IFN_EVL_ED_NVL) IS NOT NULL AND IFN_EVL_ED_BASCD = '02' THEN ' 미만'
			                END
			            AM_RANGE
			            ,B.CODE_CNTN
			            ,B.NFNA_CNTN
			            ,B.NFNA_IBI_CNTN
			            ,B.PARTITION_ROW
			            FROM 
			     (SELECT GRP_ORG_C,FNA_IFN_C RK_GRD_SQNO, FNA_IFN_GRDNM||'('||ENG_FNA_IFN_GRDNM||')' RK_GRD_NM , ROUND(IFN_EVL_ST_NVL/10000) CSA_IFN_EVL_ST_NVL, IFN_EVL_ST_BASCD, ROUND(IFN_EVL_ED_NVL/10000) CSA_IFN_EVL_ED_NVL, IFN_EVL_ED_BASCD,
				    		    TO_NUMBER(DECODE(IFN_EVL_ED_NVL,0,NULL,(IFN_EVL_ST_NVL+IFN_EVL_ED_NVL)/2)) AS MID_NVL 
				    		 , ENG_IFN_EVL_ST_NVL, ENG_IFN_EVL_ST_BASCD, ENG_IFN_EVL_ED_NVL, ENG_IFN_EVL_ED_BASCD,
				    		    TO_NUMBER(DECODE(ENG_IFN_EVL_ED_NVL,0,NULL,(ENG_IFN_EVL_ST_NVL+ENG_IFN_EVL_ED_NVL)/2)) AS ENG_MID_NVL 
				    		   FROM TB_OR_RM_GRD
				    		  WHERE GRP_ORG_C = 01
                              ) A
                             ,(
						SELECT A.NFNA_IFN_C , A.NFNA_IFN_GRDNM , B.NFNA_CNTN_C , C.INTG_IDVD_CNM CODE_CNTN , B.NFNA_CNTN , A.NFNA_IBI_CNTN
						      , ROW_NUMBER() OVER(PARTITION BY A.NFNA_IFN_C ORDER BY A.NFNA_IFN_C) PARTITION_ROW
						  FROM TB_OR_RM_NGRD A
						      ,TB_OR_RM_NGRD_CNTN B
						      ,TB_OR_OM_CODE C
						 WHERE A.NFNA_IFN_C = B.NFNA_IFN_C
						   AND B.NFNA_CNTN_C = C.IDVDC_VAL(+)
						   AND C.INTG_GRP_C(+) = 'NFNA_CNTN_C'
						 ORDER BY A.NFNA_IFN_C ASC , NFNA_CNTN_C ASC 
                            ) B
                            WHERE A.RK_GRD_SQNO = B.NFNA_IFN_C                                                   
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC011004" name="위험등급기준_빈도 조회" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크평가내역조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				SELECT FRQ_GRDC , B.INTG_IDVD_CNM FRQ_GRDNM , A.AVG_FRQ_CNTN , A.AVG_FQCN
				  FROM TB_OR_RM_FRQ A
				      ,TB_OR_OM_CODE B
				 WHERE A.FRQ_GRDC = B.IDVDC_VAL
				   AND B.INTG_GRP_C = 'FRQ_GRDC'
				 ORDER BY A.FRQ_GRDC ASC                                                  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC011005" name="손실사건 및 KRI 건수 조회" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                     
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="손실사건 및 KRI 건수 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					SELECT B.LSS_CNT,A.KRI_CNT
					  FROM
					(
					SELECT COUNT(*) KRI_CNT
					   FROM TB_OR_KM_RKI A
					      ,TB_OR_RH_REL_KRI B
					 WHERE A.OPRK_RKI_ID = B.OPRK_RKI_ID
					   AND A.VLD_YN = 'Y'
					   AND B.OPRK_RKP_ID = #rkp_id#
					 ) A
					,(	
					SELECT COUNT(*) LSS_CNT
					  FROM TB_OR_LM_LSHP A
					      ,TB_OR_RH_REL_LSS B
					      ,TB_OR_OM_SCHD C
					      ,TB_OR_OM_ORGZ D
					 WHERE A.LSHP_AMNNO = B.LSHP_AMNNO
					   AND C.BAS_YM = #bas_ym#
					   AND B.OPRK_RKP_ID = #rkp_id#
					   AND A.OCU_DT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(C.RK_EVL_ED_DT),-36),'YYYYMMDD') AND C.RK_EVL_ED_DT
					   AND A.AMN_BRC = D.BRC
   					  ) B                  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC011006" name="리스크 매트릭스" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="환산손실조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						  SELECT 
				    		 GRP_ORG_C, AVERAGE_AMT, FNA_IFN_C, FRQ1, FRQ2, FRQ3, FRQ4, FRQ5                                                             
				 		 FROM(                                                                                                                       
				    		 SELECT                                                                                                                      
				    		     GRP_ORG_C, AVERAGE_AMT, FNA_IFN_C, MAX(FRQ1) AS FRQ1, MAX(FRQ2) AS FRQ2,                                                
				    		     MAX(FRQ3) AS FRQ3, MAX(FRQ4) AS FRQ4, MAX(FRQ5) AS FRQ5                                                                 
				    		 FROM (                                                                                                                      
				    		     SELECT                                                                                                                  
				    		         GRP_ORG_C, AVERAGE_AMT, FNA_IFN_C,                                                                                  
				    		         DECODE(FRQ_GRDC, 1, AMT) AS FRQ1,                                                                                   
				    		         DECODE(FRQ_GRDC, 2, AMT) AS FRQ2,                                                                                   
				    		         DECODE(FRQ_GRDC, 3, AMT) AS FRQ3,                                                                                   
				    		         DECODE(FRQ_GRDC, 4, AMT) AS FRQ4,                                                                                   
				    		         DECODE(FRQ_GRDC, 5, AMT) AS FRQ5                                                                                    
				    		     FROM (                                                                                                                  
						             SELECT                                                                                                          
						                 A.GRP_ORG_C                                                                                                 
						                 , A.FNA_IFN_C                                                                                               
						                 , A.AVERAGE_AMT                                                                                             
						                 , B.FRQ_GRDC                                                                                                
						                 , B.AVG_FQCN                                                                                                
						                 , A.AVERAGE_AMT * B.AVG_FQCN AMT                                                                            
						             FROM (                                                                                                          
						                 SELECT                                                                                                      
						                      GRP_ORG_C                                                                                              
						                    , FNA_IFN_C                                                                                              
						                    , IFN_EVL_ST_NVL                                                                                         
						                    , IFN_EVL_ED_NVL                                                                                         
						                    , ((IFN_EVL_ST_NVL+DECODE(IFN_EVL_ED_NVL,0,IFN_EVL_ST_NVL,IFN_EVL_ED_NVL))/2)*0.00000001 AS AVERAGE_AMT  
						                 FROM TB_OR_RM_GRD                                                                                   
						                 WHERE GRP_ORG_C = #grp_org_c#                                                                                         
						             ) A INNER JOIN TB_OR_RM_FRQ B                                                                           
						             ON A.GRP_ORG_C = B.GRP_ORG_C                                                                                    
						             ORDER BY FNA_IFN_C DESC, FRQ_GRDC                                                                               
						         )                                                                                                                   
						     )                                                                                                                       
						     GROUP BY GRP_ORG_C, AVERAGE_AMT, FNA_IFN_C                                                                              
						     ORDER BY FNA_IFN_C DESC                                                                                                 
						 )                                                                                                                           
						 UNION ALL                                                                                                                   
						 SELECT                                                                                                                      
						     GRP_ORG_C, 0 AS AVERAGE_AMT, '빈도등급' AS FRQ_GRDC,                                                                       
						     TO_NUMBER(MAX(FRQ1)) AS FRQ1, TO_NUMBER(MAX(FRQ2)) AS FRQ2, TO_NUMBER(MAX(FRQ3)) AS FRQ3,                               
						     TO_NUMBER(MAX(FRQ4)) AS FRQ4, TO_NUMBER(MAX(FRQ5)) AS FRQ5                                                              
						  FROM(                                                                                                                      
						     SELECT                                                                                                                  
						         GRP_ORG_C,                                                                                                          
						         DECODE(FRQ_GRDC, 1, FRQ_GRDC) FRQ1,                                                                                 
						         DECODE(FRQ_GRDC, 2, FRQ_GRDC) FRQ2,                                                                                 
						         DECODE(FRQ_GRDC, 3, FRQ_GRDC) FRQ3,                                                                                 
						         DECODE(FRQ_GRDC, 4, FRQ_GRDC) FRQ4,                                                                                 
						         DECODE(FRQ_GRDC, 5, FRQ_GRDC) FRQ5                                                                                  
						     FROM TB_OR_RM_FRQ                                                                                               
						 )                                                                                                                           
						 GROUP BY GRP_ORG_C                                                                                                          
						 UNION ALL                                                                                                                   
						 SELECT                                                                                                                      
						     GRP_ORG_C,                                                                                                              
						     0 AS AVERAGE_AMT,                                                                                                       
						     '연 평균 발생횟수' AS FNA_IFN_C,                                                                                               
						     MAX(FRQ1) AS FRQ1,                                                                                                      
						     MAX(FRQ2) AS FRQ2,                                                                                                      
						     MAX(FRQ3) AS FRQ3,                                                                                                      
						     MAX(FRQ4) AS FRQ4,                                                                                                      
						     MAX(FRQ5) AS FRQ5                                                                                                       
						 FROM (                                                                                                                      
						     SELECT                                                                                                                  
						         GRP_ORG_C,                                                                                                          
						         DECODE(FRQ_GRDC, 1, AVG_FQCN) FRQ1,                                                                                 
						         DECODE(FRQ_GRDC, 2, AVG_FQCN) FRQ2,                                                                                 
						         DECODE(FRQ_GRDC, 3, AVG_FQCN) FRQ3,                                                                                 
						         DECODE(FRQ_GRDC, 4, AVG_FQCN) FRQ4,                                                                                 
						         DECODE(FRQ_GRDC, 5, AVG_FQCN) FRQ5                                                                                  
						     FROM TB_OR_RM_FRQ                                                                                               
						 )                                                                                                                           
						 GROUP BY GRP_ORG_C                                                                                                          
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	<process id="ORRC011007" name="리스크평가저장" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rkp_id" name="리스크풀아이디" parmid="rkp_id" attr="A" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="A" default_value=""/>
		<parm id="ifn_evl_c" name="영향평가코드(재무)" parmid="ifn_evl_c" attr="A" default_value=""/>
		<parm id="nifn_evl_c" name="영향평가코드(비재무)" parmid="nifn_evl_c" attr="A" default_value=""/>
		<parm id="frq_evl_c" name="빈도평가코드" parmid="frq_evl_c" attr="A" default_value=""/>
		<parm id="rk_evl_grd_c" name="리스크평가등급코드" parmid="rk_evl_grd_c" attr="A" default_value=""/>
		<parm id="ctl_dsg_evl_c" name="통제설계평가코드" parmid="ctl_dsg_evl_c" attr="A" default_value=""/>
		<parm id="ctl_mngm_evl_c" name="통제운영평가코드" parmid="ctl_mngm_evl_c" attr="A" default_value=""/>
		<parm id="ctev_grd_c" name="통제평가등급코드" parmid="ctev_grd_c" attr="A" default_value=""/>
		<parm id="rmn_rsk_grd_c" name="잔여위험등급코드" parmid="rmn_rsk_grd_c" attr="A" default_value=""/>
		<parm id="evl_cpl_yn" name="평가완료여부" parmid="evl_cpl_yn" attr="A" default_value=""/>

		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="MAX결재일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
				<condition id="cond1" name="조건1" comparison="eq" value="Y" variable="#evl_cpl_yn#" />
					<data id="data1" name = "">
						 SELECT  MAX(DCZ_SQNO)+1 DCZ_SQNO   
						 FROM    TB_OR_RH_EVL_DCZ   
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     BRC         = TRIM(#brc#)        
						 AND     OPRK_RKP_ID = #rkp_id#
						 AND     BAS_YM   = #bas_ym#                 
					</data>
				</sql>
				<result id="result" name="dcz_sqno" attrname="dcz_sqno" type="single_string"/>
			</unit>
			<unit id="unit99" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
				<condition id="cond1" name="조건1" comparison="eq" value="Y" variable="#evl_cpl_yn#" />
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_EVL_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   OPRK_RKP_ID                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   RK_EVL_DCZ_STSC  
						     ,	 RTN_CNTN             
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#bas_ym#)        
						     ,   TRIM(#rkp_id#)    
						     ,   TRIM(#brc#)      
						     ,   #dcz_sqno#                     
						     ,   TO_CHAR(SYSDATE,'YYYYMMDD')   
						     ,   TRIM(#userid#)       
						     ,   '03'
						     ,	 ''                          
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
				<condition id="cond1" name="조건1" comparison="eq" value="Y" variable="#evl_cpl_yn#" />
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_EVL                         
						 SET     DCZ_SQNO       = #dcz_sqno#                                      
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     OPRK_RKP_ID     = #rkp_id#                   
						 AND     BAS_YM       = #bas_ym#                               
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="리스크평가저장" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_EVL                         
						 SET     IFN_EVL_C       = #ifn_evl_c#                     
						     ,   NIFN_EVL_C      = #nifn_evl_c#                     
						     ,   FRQ_EVL_C       = #evl_frq#                  
						     ,   RK_EVL_GRD_C    = #rk_evl_grd_c#                 
						     ,   CTL_DSG_EVL_C   = #ctl_dsg_evl_c#           
						     ,   CTL_MNGM_EVL_C  = #ctl_mngm_evl_c#                    
						     ,   CTEV_GRD_C      = #ctev_grd_c#                    
						     ,   RMN_RSK_GRD_C   = #rmn_rsk_grd_c#
						     ,   EVL_CPL_YN      = #evl_cpl_yn#
						     ,   EVL_DT          = TO_CHAR(SYSDATE,'YYYYMMDD')
						     ,   LSCHG_DTM       = SYSDATE                    
						     ,   LS_WKR_ENO      = TRIM(#userid#)                  
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     OPRK_RKP_ID     = #rkp_id#                   
						 AND     BAS_YM       = #bas_ym#                     
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
		
	</process>
	
	<process id="ORRC011101" name="최근손실사건(3개년)" forward="/rsa/ORRC0111" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC011102" name="최근손실사건(3개년)_조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
	<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="rkp_id" name="사례ID" parmid="rkp_id" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                     
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="리스크평가조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					SELECT A.LSHP_AMNNO,D.BRNM,A.LSS_TINM,A.OCU_DT,TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') FIR_INP_DTM
					      ,A.TTLS_AM,A.GULS_AM
					  FROM TB_OR_LM_LSHP A
					      ,TB_OR_RH_REL_LSS B
					      ,TB_OR_OM_SCHD C
					      ,TB_OR_OM_ORGZ D
					 WHERE A.LSHP_AMNNO = B.LSHP_AMNNO
					   AND C.BAS_YM = #bas_ym#
					   AND B.OPRK_RKP_ID = #rkp_id#
					   AND A.OCU_DT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(C.RK_EVL_ED_DT),-36),'YYYYMMDD') AND C.RK_EVL_ED_DT
					   AND A.AMN_BRC = D.BRC
					</data>
				  </sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC011201" name="관련KRI(과거1년)" forward="/rsa/ORRC0112" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="관련KRI(과거1년)" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                     
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
				<unit id="unit02" name="관련KRI(과거1년)" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">
					SELECT DISTINCT TO_CHAR(ADD_MONTHS(TO_DATE(#bas_ym#,'YYYYMM'),-11)+LEVEL+1,'YYYYMM') BAS_YM
					         FROM DUAL
					       CONNECT BY LEVEL &lt;= (TO_DATE(#bas_ym#,'YYYYMM')-ADD_MONTHS(TO_DATE(#bas_ym#,'YYYYMM'),-11)+1)
					          ORDER BY BAS_YM  
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC011202" name="관련KRI(과거1년)_조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
	<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="rkp_id" name="사례ID" parmid="rkp_id" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                     
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="리스크평가조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
							SELECT
							 A.OPRK_RKI_ID,A.OPRK_RKINM
							,MAX(DECODE(A.BAS_YM_ROW,1,A.AFLCO_TT_VAL,NULL)) BAS_YM0
							,MAX(DECODE(A.BAS_YM_ROW,2,A.AFLCO_TT_VAL,NULL)) BAS_YM1
							,MAX(DECODE(A.BAS_YM_ROW,3,A.AFLCO_TT_VAL,NULL)) BAS_YM2
							,MAX(DECODE(A.BAS_YM_ROW,4,A.AFLCO_TT_VAL,NULL)) BAS_YM3
							,MAX(DECODE(A.BAS_YM_ROW,5,A.AFLCO_TT_VAL,NULL)) BAS_YM4
							,MAX(DECODE(A.BAS_YM_ROW,6,A.AFLCO_TT_VAL,NULL)) BAS_YM5
							,MAX(DECODE(A.BAS_YM_ROW,7,A.AFLCO_TT_VAL,NULL)) BAS_YM6
							,MAX(DECODE(A.BAS_YM_ROW,8,A.AFLCO_TT_VAL,NULL)) BAS_YM7
							,MAX(DECODE(A.BAS_YM_ROW,9,A.AFLCO_TT_VAL,NULL)) BAS_YM8
							,MAX(DECODE(A.BAS_YM_ROW,10,A.AFLCO_TT_VAL,NULL)) BAS_YM9
							,MAX(DECODE(A.BAS_YM_ROW,11,A.AFLCO_TT_VAL,NULL)) BAS_YM10
							,MAX(DECODE(A.BAS_YM_ROW,12,A.AFLCO_TT_VAL,NULL)) BAS_YM11
							,MAX(DECODE(A.BAS_YM_ROW,13,A.AFLCO_TT_VAL,NULL)) BAS_YM12
							FROM
							 (
							 SELECT A.OPRK_RKI_ID,A.OPRK_RKINM,D.BAS_YM,C.AFLCO_TT_VAL ,DENSE_RANK() OVER(ORDER BY D.BAS_YM) BAS_YM_ROW
							   FROM TB_OR_KM_RKI A
							      ,TB_OR_RH_REL_KRI B
							      ,TB_OR_KS_RKI_SMST C
								  ,(SELECT DISTINCT TO_CHAR(ADD_MONTHS(TO_DATE(#bas_ym#,'YYYYMM'),-11)+LEVEL+1,'YYYYMM') BAS_YM
					         		  FROM DUAL
					       			CONNECT BY LEVEL &lt;= (TO_DATE(#bas_ym#,'YYYYMM')-ADD_MONTHS(TO_DATE(#bas_ym#,'YYYYMM'),-11)+1)
					          		ORDER BY BAS_YM ) D  
							 WHERE A.OPRK_RKI_ID = B.OPRK_RKI_ID
							   AND A.OPRK_RKI_ID = C.OPRK_RKI_ID (+)
							   AND A.VLD_YN = 'Y'
							   AND B.OPRK_RKP_ID = #rkp_id#
							   AND C.BAS_YM (+) = D.BAS_YM
							 GROUP BY A.OPRK_RKI_ID,A.OPRK_RKINM,D.BAS_YM,C.AFLCO_TT_VAL
							 ORDER BY BAS_YM ASC
							 ) A
							 GROUP BY A.OPRK_RKI_ID,A.OPRK_RKINM
					</data>
				  </sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>	
	
	<process id="ORRC011401" name="진행현황" forward="/rsa/ORRC0114" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC011402" name="진행현황조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<session id="brc" name="사무소코드" sessionid="brc" object="String" />
		<parm id="sch_brc" name="검색사무소코드" parmid="sch_brc" attr="A" default_value=""/>
		<parm id="hofc_bizo_dsc" name="영업점유무" parmid="hofc_bizo_dsc" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">

			<unit id="unit99" name="진행현황조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                    
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>				
			<unit id="unit99" name="진행현황조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT   DENSE_RANK() OVER(ORDER BY D.UP_BRC) NUM
                             ,   D.UP_BRC                                        
						     ,   D1.BRNM
                             ,   ROUND(((NVL(SUM(CASE WHEN A.VLR_ENO IS NOT NULL THEN 1 END),0)
                                 /NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),1)*100)
                                 ),2)||'%' EVL_SLT_RAT
                             ,   ROUND(((NVL(SUM(CASE WHEN A.EVL_CPL_YN='Y' THEN 1 END),0)
                                 /NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),1)*100)
                                 ),2)||'%' EVL_PRG_RAT
                             ,   CASE WHEN (NVL(SUM(CASE WHEN A.EVL_CPL_YN='N' THEN 1 END),0)) >= 1 THEN 'N'
                                      ELSE 'Y'
                                  END EVL_CPL_YN
                             ,   CASE WHEN MIN(B.RK_EVL_DCZ_STSC) >='13' THEN 'Y' ELSE 'N' 
                                  END BRC_CPL_YN      
                             ,   CASE WHEN MIN(B.RK_EVL_DCZ_STSC) >='15' THEN 'Y' ELSE 'N' 
                                  END DCZ_CPL_YN
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B                                 
						     ,   TB_OR_OM_ORGZ D                                 
						     ,   TB_OR_OM_ORGZ D1                                
						 WHERE   A.GRP_ORG_C      = B.GRP_ORG_C                             
						 AND     A.BAS_YM         = B.BAS_YM                             
						 AND     A.BRC            = B.BRC                                   
						 AND     A.OPRK_RKP_ID    = B.OPRK_RKP_ID                                
						 AND     A.GRP_ORG_C      = D.GRP_ORG_C                            
						 AND     A.BRC            = D.BRC                                   
						 AND     D.GRP_ORG_C      = D1.GRP_ORG_C                         
						 AND     D.UP_BRC         = D1.BRC                                  
						 AND     D.UYN            = 'Y'                                     
						 AND     D1.UYN           = 'Y'                                     
						 AND     A.DCZ_SQNO       = B.DCZ_SQNO  
						 AND     A.GRP_ORG_C = #grp_org_c#                                      
						 AND     A.BAS_YM = #bas_ym#                                    
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="2" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND     D.UP_BRC = (SELECT UP_BRC FROM TB_OR_OM_ORGZ WHERE BRC = #brc#)                   
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_brc#" />
					<data id="data1" name = "">
			    		 AND (D.UP_BRC = (SELECT UP_BRC FROM TB_OR_OM_ORGZ WHERE BRC = #sch_brc#)  OR D.BRC = #sch_brc# OR D.UP_BRC = #sch_brc#)                 
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#st_dt#" />
					<data id="data1" name = "">
		        		 AND     B.DCZ_DT &gt;= TO_CHAR(TO_DATE(#st_dt#,'YYYYMMDD'),'YYYYMMDD')                                         
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#ed_dt#" />
					<data id="data1" name = "">
		        		 AND     B.DCZ_DT &lt;= TO_CHAR(TO_DATE(#ed_dt#,'YYYYMMDD'),'YYYYMMDD')                                         
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="Y" variable="#rk_evl_dcz_stsc#" />
					<data id="data1" name = "">
			    		 WHERE   T.EVL_PRG_RAT = '100%'                                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="N" variable="#rk_evl_dcz_stsc#" />
					<data id="data1" name = "">
			    		 WHERE   T.EVL_PRG_RAT != '100%'                                                
					</data>
				</sql>
				<sql id='sql1' name = "SQL1">
					<data id="data1" name = "">
                     	GROUP BY D.UP_BRC,D1.BRNM  
                     	ORDER BY UP_BRC  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>	
		</group>
	</process>
	
	<process id="ORRC011403" name="진행현황상세조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="up_brc" name="사무소 코드" parmid="up_brc" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">

			<unit id="unit99" name="진행현황상세조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                       
					</data>
				</sql>
				<result id="result" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="진행현황상세조회" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						WITH BRNM_INFO AS
                         (SELECT B.BRC,A.CHRG_EMPNM,C.INTG_IDVD_CNM,OFFC_TEL_CNTN
                            FROM TB_OR_OM_EMP A
                                ,TB_OR_OH_ORGZ_EMP_AUTH B
                                ,TB_OR_OM_CODE C
                           WHERE A.ENO = B.ENO
                             AND A.OFT_C = C.IDVDC_VAL (+)
                             AND C.INTG_GRP_C (+) = 'OFT_C'
                             AND B.AUTH_GRP_ID = '003'
                          )
                        SELECT   DENSE_RANK() OVER(ORDER BY D.BRC) NUM
                             ,   D.BRC                                        
						     ,   D.BRNM
                             ,   ROUND(((NVL(SUM(CASE WHEN A.VLR_ENO IS NOT NULL THEN 1 END),0)
                                 /NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),1)*100)
                                 ),2)||'%' EVL_SLT_RAT
                             ,   ROUND(((NVL(SUM(CASE WHEN A.EVL_CPL_YN='Y' THEN 1 END),0)
                                 /NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),1)*100)
                                 ),2)||'%' EVL_PRG_RAT
                             ,   CASE WHEN (NVL(SUM(CASE WHEN A.EVL_CPL_YN='N' THEN 1 END),0)) >= 1 THEN 'N'
                                      ELSE 'Y'
                                  END EVL_CPL_YN
                             ,   CASE WHEN (NVL(SUM(CASE WHEN A.EVL_CPL_YN='N' THEN 1 END),0)) = 0 THEN MAX(A.EVL_DT)
                                      ELSE ''
                                  END EVL_CPL_DT
                             ,   CASE WHEN MIN(B.RK_EVL_DCZ_STSC) >='13' THEN 'Y' ELSE 'N' 
                                  END BRC_CPL_YN     
                             ,   CASE WHEN MIN(B.RK_EVL_DCZ_STSC) >='15' THEN 'Y' ELSE 'N' 
                                  END DCZ_CPL_YN     
                             ,   E.INTG_IDVD_CNM OFTNM
                             ,   E.CHRG_EMPNM ENPNM
                             ,   E.OFFC_TEL_CNTN TELNO
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B                                 
						     ,   TB_OR_OM_ORGZ D                                 
						     ,   TB_OR_OM_ORGZ D1
                             ,   BRNM_INFO E
						 WHERE   A.GRP_ORG_C      = B.GRP_ORG_C                             
						 AND     A.BAS_YM         = B.BAS_YM                             
						 AND     A.BRC            = B.BRC                                   
						 AND     A.OPRK_RKP_ID    = B.OPRK_RKP_ID                                
						 AND     A.GRP_ORG_C      = D.GRP_ORG_C                            
						 AND     A.BRC            = D.BRC                                   
						 AND     D.GRP_ORG_C      = D1.GRP_ORG_C                          
						 AND     D.UP_BRC         = D1.BRC                                  
						 AND     D.UYN            = 'Y'                                     
						 AND     D1.UYN           = 'Y'                                     
						 AND     A.DCZ_SQNO       = B.DCZ_SQNO
                         AND     A.BRC = E.BRC(+)
						 AND     A.GRP_ORG_C = '01'                                      
						 AND     A.BAS_YM = #bas_ym#
                         AND     D.UP_BRC = #up_brc#                                       
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#brc#" />
					<data id="data1" name = "">
			    		 AND    D.UP_BRC          = TRIM(#up_brc#)                  
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#st_dt#" />
					<data id="data1" name = "">
		        		 AND     B.DCZ_DT           &gt;= TO_CHAR(TO_DATE(#st_dt#,'YYYYMMDD'),'YYYYMMDD')                                        
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#ed_dt#" />
					<data id="data1" name = "">
		        		 AND     B.DCZ_DT           &lt;= TO_CHAR(TO_DATE(#ed_dt#,'YYYYMMDD'),'YYYYMMDD')                                        
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="Y" variable="#rk_evl_dcz_stsc#"  />
					<data id="data1" name = "">
			    		 WHERE   T.EVL_PRG_RAT = '100%'
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="N" variable="#rk_evl_dcz_stsc#" />
					<data id="data1" name = "">
			    		 WHERE   T.EVL_PRG_RAT != '100%'
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					 	GROUP BY D.BRC,D.BRNM,E.INTG_IDVD_CNM,E.CHRG_EMPNM,E.OFFC_TEL_CNTN
                     	ORDER BY D.BRC
                     </data>  
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
				
		</group>
	</process>
	
	<process id="ORRC011404" name="진행현황상단조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<session id="brc" name="사무소코드" sessionid="brc" object="String" />
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                   
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="진행현황상단조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT A.BAS_YM
                   		 , SUBSTR(A.BAS_YM,0,4)||'년 '||
						    	CASE WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 03 THEN '1분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 06 THEN '2분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 09 THEN '3분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 12 THEN '4분기'
						      	END ||'('||A.BAS_YM||')' BAS_YM_NM
					      ,ROUND(NVL(NVL((SUM(CASE WHEN A.EVL_CPL_YN = 'Y' THEN 1 END)),0)/NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),2) * 100,0),2) EVL_RATE
					      ,TO_CHAR(TO_DATE(B.RK_EVL_ST_DT,'YYYY-MM-DD'))||'~'||TO_CHAR(TO_DATE(B.RK_EVL_ED_DT,'YYYY-MM-DD')) EVL_DATE
					  FROM TB_OR_RM_EVL A
					      ,TB_OR_OM_SCHD B
					      ,TB_OR_OM_ORGZ C
					  WHERE A.BAS_YM = B.BAS_YM
					    AND A.BAS_YM=  TRIM(#bas_ym#)
					    AND A.BRC = C.BRC
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_brc#" />
					<data id="data1" name = "">
			    		 		AND     C.UP_BRC = (SELECT UP_BRC FROM TB_OR_OM_ORGZ WHERE BRC = #brc#)                                              
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<data id="data2" name = "">
			    		 GROUP BY A.BAS_YM,B.RK_EVL_ST_DT,B.RK_EVL_ED_DT                                  
					</data>
				</sql>   
				
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC011501" name="진행현황 상세보기" forward="/rsa/ORRC0115" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC011502" name="진행현황 상세보기" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="brc" name="사무소코드" parmid="brc" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                     
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="리스크평가조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				 SELECT * FROM (
                    WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		)
                        , DEPT_BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C
                             , B.UP_BRC 
                             , C.BRNM
						     , B.BRC    
						      FROM TB_OR_RH_BRC A                              
						    LEFT JOIN TB_OR_OM_ORGZ B
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC
						        AND B.UYN = 'Y'
                            LEFT JOIN TB_OR_OM_ORGZ C
                                 ON B.UP_BRC = C.BRC
                                AND C.UYN = 'Y'
						      GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC
						)

                        SELECT  
                               B.GRP_ORG_C                                                  
						     , B.BRC
                             , A.OPRK_RKP_ID RKP_ID
                             , A.BAS_YM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN C.RKP_TPC ='02' THEN F.BRNM
				  		     		END DEPT_BRNM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN C.RKP_TPC ='02' THEN D.BRNM
				  		     		END BRNM
                             , G.PRSSNM1
                             , G.PRSSNM2
                             , G.PRSSNM3
                             , G.PRSSNM4
                             , C.RK_ISC_CNTN
                             , H.RK_CP_CNTN CP_CNTN
                             , A.RK_EVL_GRD_C
                             , A.CTEV_GRD_C
                             , A.RMN_RSK_GRD_C RMN_RSK_GRD_C
                             , CASE WHEN B.RK_EVL_DCZ_STSC &lt;=02 AND NVL(A.REEVL_YN,'N')&lt;&gt;'Y' THEN '미평가'
                                    WHEN B.RK_EVL_DCZ_STSC &gt;=03 AND NVL(A.REEVL_YN,'N')&lt;&gt;'Y' THEN '평가완료'
                                    WHEN B.RK_EVL_DCZ_STSC &lt;=02 AND NVL(A.REEVL_YN,'N')='Y' THEN '재평가'
                                    WHEN B.RK_EVL_DCZ_STSC &gt;=03 AND NVL(A.REEVL_YN,'N')='Y' THEN '재평가완료'
                                    END EVL_STSC
                             , A.VLR_ENO
                             , E.CHRG_EMPNM VLR_NM
                             , NVL(A.REEVL_YN,'N') REEVL_YN
                             , CASE WHEN B.RK_EVL_DCZ_STSC&gt;=04 THEN 'Y' ELSE 'N' END DCZ_RQ_YN
						     , CASE WHEN B.RK_EVL_DCZ_STSC&gt;=13 THEN 'Y' ELSE 'N' END DCZ_YN
						     , B.RTN_CNTN                             
						     , B.RK_EVL_DCZ_STSC                             
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   TB_OR_OM_ORGZ       D
                             ,   TB_OR_OM_EMP        E
                             ,   DEPT_BRNM           F
                             ,   PRSS                G
                             ,   TB_OR_RH_CTL_SCF    H
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.BAS_YM = C.BAS_YM
                           AND A.BRC = B.BRC
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BRC = D.BRC                           
                           AND A.VLR_ENO = E.ENO(+)
 						   AND ((D.BRC = F.BRC AND D.HOFC_BIZO_DSC = '02') OR (D.UP_BRC = F.BRC AND D.HOFC_BIZO_DSC = '03'))
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.OPRK_RKP_ID = H.OPRK_RKP_ID
                           AND A.BAS_YM = TRIM(#bas_ym#)
                           AND A.BAS_YM = C.BAS_YM
                           AND A.BRC = TRIM(#brc#) 
                       
					</data>
				  </sql>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
 						)                                 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC011601" name="결과 확인 및 재평가 요청" forward="/rsa/ORRC0116" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC011602" name="결과확인 및 재평가 상단 조회 " forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<session id="brc" name="사무소코드" sessionid="brc" object="String" />
		<parm id="rcsa_menu_dsc" name="RCSA메뉴구분" parmid="rcsa_menu_dsc" attr="A" default_value=""/>
		<parm id="evl_eno" name="평가자 검색조건" parmid="evl_eno" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                   
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="리스크평가집계조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
                    SELECT A.BAS_YM
                   		 , SUBSTR(A.BAS_YM,0,4)||'년 '||
						    	CASE WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 03 THEN '1분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 06 THEN '2분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 09 THEN '3분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 12 THEN '4분기'
						      	END ||'('||A.BAS_YM||')' BAS_YM_NM
					      ,NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),0) EVL_CNT
					      ,NVL(SUM(CASE WHEN A.EVL_CPL_YN = 'Y' THEN 1 END),0) EVL_CPL_CNT
					      ,ROUND(NVL(NVL((SUM(CASE WHEN A.EVL_CPL_YN = 'Y' THEN 1 END)),0)/NVL(SUM(CASE WHEN A.EVL_OBJ_YN = 'Y' THEN 1 END),1) * 100,0),2) EVL_RATE
					      ,TO_CHAR(TO_DATE(B.RK_EVL_ST_DT,'YYYY-MM-DD'))||'~'||TO_CHAR(TO_DATE(B.RK_EVL_ED_DT,'YYYY-MM-DD')) EVL_DATE
					      ,NVL(MIN(A.EVL_CPL_YN),'N') ALL_EVL_CPL_YN
					  FROM TB_OR_RM_EVL A
					      ,TB_OR_OM_SCHD B
					  WHERE A.BAS_YM = B.BAS_YM
					    AND A.BAS_YM=  TRIM(#bas_ym#)
                                           
			    	</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<data id="data2" name = "">
			    		 GROUP BY A.BAS_YM,B.RK_EVL_ST_DT,B.RK_EVL_ED_DT                                  
					</data>
				</sql>    
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
 		</group>
	</process>
	
	
	<process id="ORRC011603" name="결과확인 및 재평가  " forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="rcsa_menu_dsc" name="RCSA메뉴구분" parmid="rcsa_menu_dsc" attr="A" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="A" default_value=""/>
		<parm id="sc_evl_stsc" name="평가상태 검색조건" parmid="sc_evl_stsc" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM    
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                     
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="리스크평가조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				 SELECT * FROM (
                    WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		)
                        , DEPT_BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C
                             , B.UP_BRC 
                             , C.BRNM
						     , B.BRC    
						      FROM TB_OR_RH_BRC A                              
						    LEFT JOIN TB_OR_OM_ORGZ B
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC
						        AND B.UYN = 'Y'
                            LEFT JOIN TB_OR_OM_ORGZ C
                                 ON B.UP_BRC = C.BRC
                                AND C.UYN = 'Y'
						      GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC
						)

                        SELECT  
                               B.GRP_ORG_C                                                  
						     , B.BRC
                             , A.OPRK_RKP_ID RKP_ID
                             , A.BAS_YM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN C.RKP_TPC ='02' THEN F.BRNM
				  		     		END DEPT_BRNM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN C.RKP_TPC ='02' THEN D.BRNM
				  		     		END BRNM
                             , G.PRSSNM1
                             , G.PRSSNM2
                             , G.PRSSNM3
                             , G.PRSSNM4
                             , C.RK_ISC_CNTN
                             , H.RK_CP_CNTN CP_CNTN
                             , A.RK_EVL_GRD_C
                             , A.CTEV_GRD_C
                             , A.RMN_RSK_GRD_C RMN_RSK_GRD_C
                             , CASE WHEN B.RK_EVL_DCZ_STSC &lt;02 AND NVL(A.REEVL_YN,'N')&lt;&gt;'Y' THEN '미평가'
                                    WHEN B.RK_EVL_DCZ_STSC &gt;=02 AND NVL(A.REEVL_YN,'N')&lt;&gt;'Y' THEN '평가완료'
                                    WHEN B.RK_EVL_DCZ_STSC &lt;02 AND NVL(A.REEVL_YN,'N')='Y' THEN '재평가'
                                    WHEN B.RK_EVL_DCZ_STSC &gt;=02 AND NVL(A.REEVL_YN,'N')='Y' THEN '재평가완료'
                                    END EVL_STSC
                             , A.VLR_ENO
                             , E.CHRG_EMPNM VLR_NM
                             , NVL(A.REEVL_YN,'N') REEVL_YN
                             , CASE WHEN B.RK_EVL_DCZ_STSC&gt;=04 THEN 'Y' ELSE 'N' END DCZ_RQ_YN
						     , CASE WHEN B.RK_EVL_DCZ_STSC&gt;=13 THEN 'Y' ELSE 'N' END DCZ_YN
						     , B.RTN_CNTN                             
						     , B.RK_EVL_DCZ_STSC                             
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   TB_OR_OM_ORGZ       D
                             ,   TB_OR_OM_EMP        E
                             ,   DEPT_BRNM           F
                             ,   PRSS                G
                             ,   TB_OR_RH_CTL_SCF    H
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.BAS_YM = C.BAS_YM
                           AND A.BRC = B.BRC
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BRC = D.BRC                           
                           AND A.VLR_ENO = E.ENO(+)
                           AND ((D.BRC = F.BRC AND D.HOFC_BIZO_DSC = '02') OR (D.UP_BRC = F.BRC AND D.HOFC_BIZO_DSC = '03'))
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.OPRK_RKP_ID = H.OPRK_RKP_ID
                           AND A.BAS_YM = TRIM(#bas_ym#)
                       
					</data>
				  </sql>
				  <sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#brc#" />
					<data id="data1" name = "">
			    		 	AND A.BRC           = TRIM(#brc#)                                    
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#bsn_prss_c#" />
						<data id="data1" name = "">
							AND TRIM(#bsn_prss_c#) IN (G.PRSS1,G.PRSS2,G.PRSS3, G.PRSS4)
						</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="eq" value="1" variable="#sc_evl_stsc#" />
						<data id="data1" name = "">
							AND B.RK_EVL_DCZ_STSC &lt;02 AND NVL(A.REEVL_YN,'N')&lt;&gt;'Y'
						</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="eq" value="2" variable="#sc_evl_stsc#" />
						<data id="data1" name = "">
							AND NVL(A.REEVL_YN,'N')='Y'
						</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="eq" value="3" variable="#sc_evl_stsc#" />
						<data id="data1" name = "">
							AND B.RK_EVL_DCZ_STSC &gt;=02
						</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="1" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND     B.RK_EVL_DCZ_STSC >= '13'                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="2" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND     B.RK_EVL_DCZ_STSC = '14'                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="3" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND     B.RK_EVL_DCZ_STSC >= '03'                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#vlr_eno#" />
					<data id="data1" name = "">
			    		 AND     A.VLR_ENO = #vlr_eno#                                
					</data>
				</sql>				
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
 						)                                 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC011604" name="리스크평가최종결재처리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="A" default_value=""/>
		<parm id="rkp_id" name="리스크풀ID" parmid="rkp_id" attr="A" default_value=""/>
		<parm id="dcz_dc" name="결재진행코드" parmid="dcz_dc" attr="A" default_value=""/>
		<parm id="reevl_yn_chk" name="재평가여부" parmid="reevl_yn_chk" attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="M" multiid="rkp_id">
			<multivalue id="brc" name="brc" multiid="brc"/>
			<multivalue id="rkp_id" name="rkp_id" multiid="rkp_id"/>
			<multivalue id="dcz_dc" name="dcz_dc" multiid="dcz_dc"/>
			<multivalue id="reevl_yn_chk" name="reevl_yn_chk" multiid="reevl_yn_chk"/>
			<unit id="unit01" name="MAX결재일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  MAX(DCZ_SQNO)+1 DCZ_SQNO   
						 FROM    TB_OR_RH_EVL_DCZ   
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     BRC         = TRIM(#brc#)        
						 AND     OPRK_RKP_ID = #rkp_id#
						 AND     BAS_YM   = #bas_ym#                 
					</data>
				</sql>
				<result id="result" name="dcz_sqno" attrname="dcz_sqno" type="single_string"/>
			</unit>
			<unit id="unit02" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_EVL_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   OPRK_RKP_ID                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   RK_EVL_DCZ_STSC  
						     ,	 RTN_CNTN             
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#bas_ym#)        
						     ,   TRIM(#rkp_id#)    
						     ,   TRIM(#brc#)      
						     ,   #dcz_sqno#                     
						     ,   TO_CHAR(SYSDATE,'YYYYMMDD')   
						     ,   TRIM(#userid#)       
						     ,   #dcz_dc#
						     ,	 ''                          
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_EVL                         
						 SET     DCZ_SQNO       = #dcz_sqno#  
						 	    ,REEVL_YN		= #reevl_yn_chk#                                    
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     OPRK_RKP_ID     = #rkp_id#                   
						 AND     BAS_YM       = #bas_ym#                               
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>

	<process id="ORRC011701" name="동일평가비율확인및재평가요청" forward="/rsa/ORRC0117" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
			<session id="userid" name="사용자ID" sessionid="userid" object="String" />
			<parm id="rcsa_menu_dsc" name="RCSA메뉴구분" parmid="rcsa_menu_dsc" attr="A" default_value=""/>
	  		<group id="grp01" name="grp01" type="S">
				<unit id="unit00" name="리스크평가 평가자 정보 조회" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">
				    		 SELECT  NVL(MAX(A.BAS_YM),0) BAS_YM
				    		 , SUBSTR(A.BAS_YM,0,4)||'년 '||
						    	CASE WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 03 THEN '1분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 06 THEN '2분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 09 THEN '3분기'
						         WHEN SUBSTR(A.BAS_YM,5,2) &lt;= 12 THEN '4분기'
						      	END ||'('||A.BAS_YM||')' BAS_YM_NM
				    		 FROM    TB_OR_OM_SCHD  A             
				    		 WHERE   A.GRP_ORG_C = #grp_org_c#
				    		  AND    A.RK_EVL_TGT_YN = 'Y' 
				    		  GROUP BY A.BAS_YM                  
						</data>
					</sql>
					<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
				</unit>
				<unit id="unit01" name="리스크평가 평가자 정보 조회" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">
				    		 SELECT  SUBSTR(MAX(A.BAS_YM),0,4)||'년 '||
						    	CASE WHEN SUBSTR(MAX(A.BAS_YM),5,2) &lt;= 03 THEN '1분기'
						         WHEN SUBSTR(MAX(A.BAS_YM),5,2) &lt;= 06 THEN '2분기'
						         WHEN SUBSTR(MAX(A.BAS_YM),5,2) &lt;= 09 THEN '3분기'
						         WHEN SUBSTR(MAX(A.BAS_YM),5,2) &lt;= 12 THEN '4분기'
						      	END ||'('||MAX(A.BAS_YM)||')' BAS_YM_NM
				    		 FROM    TB_OR_OM_SCHD  A             
				    		 WHERE   A.GRP_ORG_C = #grp_org_c#
				    		  AND    A.RK_EVL_TGT_YN = 'Y' 
				    		  GROUP BY A.BAS_YM                  
						</data>
					</sql>
					<result id="bas_ym_nm" name="bas_ym_nm" attrname="bas_ym_nm" type="single_string" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC011702" name="동일평가비율확인조회" forward="/comm/jsonLst"	forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="rcsa_menu_dsc" name="RCSA메뉴구분" parmid="rcsa_menu_dsc" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit00" name="리스크평가 평가자 정보 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		 SELECT  NVL(MAX(BAS_YM),0) BAS_YM
			    		 FROM    TB_OR_OM_SCHD              
			    		 WHERE   GRP_ORG_C = #grp_org_c#
			    		  AND    RK_EVL_TGT_YN = 'Y'                   
					</data>
				</sql>
				<result id="bas_ym" name="bas_ym" attrname="bas_ym" type="single_string" />
			</unit>
			<unit id="unit99" name="동일평가비율확인조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				SELECT * FROM (
                    WITH 
				 		DEPT_BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C
                             , B.UP_BRC 
                             , C.BRNM
						     , B.BRC    
						      FROM TB_OR_RH_BRC A                              
						    LEFT JOIN TB_OR_OM_ORGZ B
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC
						        AND B.UYN = 'Y'
                            LEFT JOIN TB_OR_OM_ORGZ C
                                 ON B.UP_BRC = C.BRC
                                AND C.UYN = 'Y'
						      GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC
						)
                        ,EQ_EVL_CNT AS (
                            SELECT  A.GRP_ORG_C                                    
						             ,   A.BAS_YM                                    
						             ,   A.BRC                                          
						             ,   A.VLR_ENO                                      
						             ,   A.FRQ_EVL_C                                    
						             ,   A.IFN_EVL_C 
                                     ,   A.NIFN_EVL_C
                                     ,   A.CTL_DSG_EVL_C
						             ,   A.CTL_MNGM_EVL_C                                
						             ,   COUNT(A.VLR_ENO) AS EQ_EVL_CNT
						             ,   REGEXP_REPLACE(LISTAGG(''''||A.OPRK_RKP_ID||'''',',') WITHIN GROUP(ORDER BY A.OPRK_RKP_ID),'') RKP_GROUP						         
						         FROM    TB_OR_RM_EVL        A                  
						             ,   TB_OR_RH_EVL_DCZ    B                  
						         WHERE   A.GRP_ORG_C         = B.GRP_ORG_C              
						         AND     A.BRC               = B.BRC                    
						         AND     A.BAS_YM         = B.BAS_YM              
						         AND     A.OPRK_RKP_ID       = B.OPRK_RKP_ID            
						         AND     A.DCZ_SQNO          = B.DCZ_SQNO
                                 AND     B.RK_EVL_DCZ_STSC IN ('03','04','13')
                                 AND     A.VLR_ENO IS NOT NULL
                                 AND     A.BAS_YM = TRIM(#bas_ym#)
						         GROUP BY A.GRP_ORG_C,A.BAS_YM,A.BRC,A.VLR_ENO       
						             ,A.FRQ_EVL_C,A.IFN_EVL_C
                                     ,NIFN_EVL_C,A.CTL_DSG_EVL_C,CTL_MNGM_EVL_C 
                        
                        )
                        ,TOT_EVL_CNT AS (
                            SELECT  A.GRP_ORG_C                                    
						             ,   A.BAS_YM                                    
						             ,   A.BRC                                          
						             ,   A.VLR_ENO                               
						             ,   COUNT(A.VLR_ENO) AS TOT_EVL_CNT                 
						         FROM    TB_OR_RM_EVL        A                  
						             ,   TB_OR_RH_EVL_DCZ    B                  
						         WHERE   A.GRP_ORG_C         = B.GRP_ORG_C              
						         AND     A.BRC               = B.BRC                    
						         AND     A.BAS_YM         = B.BAS_YM              
						         AND     A.OPRK_RKP_ID       = B.OPRK_RKP_ID            
						         AND     A.DCZ_SQNO          = B.DCZ_SQNO
                                 AND     A.VLR_ENO IS NOT NULL
                                 AND     A.BAS_YM = TRIM(#bas_ym#)
						         GROUP BY A.GRP_ORG_C,A.BAS_YM,A.BRC,A.VLR_ENO     
                        
                        )
                        SELECT  
                               B.BRC
                             , A.BAS_YM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN C.RKP_TPC ='02' THEN MAX(F.BRNM)
				  		     		END DEPT_BRNM
                             , CASE WHEN C.RKP_TPC ='01' THEN '전사'
				  		    		WHEN C.RKP_TPC ='03' THEN MAX(D.BRNM)
				  		     		WHEN C.RKP_TPC ='02' THEN MAX(D.BRNM)
				  		     		END BRNM
                             , A.VLR_ENO
                             , MAX(E.CHRG_EMPNM) VLR_NM
                             , H.TOT_EVL_CNT
                             , G.EQ_EVL_CNT
                             , ROUND(G.EQ_EVL_CNT/DECODE(H.TOT_EVL_CNT,0,1,H.TOT_EVL_CNT)*100,2)||'%'  AS EQ_EVL_RAT  
                             , G.RKP_GROUP  
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   TB_OR_OM_ORGZ       D
                             ,   TB_OR_OM_EMP        E
                             ,   DEPT_BRNM           F
                             ,   EQ_EVL_CNT G
                             ,   TOT_EVL_CNT H
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.BAS_YM = C.BAS_YM
                           AND A.BRC = B.BRC
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BRC = D.BRC                           
                           AND A.VLR_ENO = E.ENO(+)
                           AND ((D.BRC = F.BRC AND D.HOFC_BIZO_DSC = '02') OR (D.UP_BRC = F.BRC AND D.HOFC_BIZO_DSC = '03'))
                           AND A.BAS_YM = TRIM(#bas_ym#)
                           AND B.RK_EVL_DCZ_STSC IN ('03','04','13')
                           AND A.BAS_YM = G.BAS_YM
                           AND A.BAS_YM = H.BAS_YM
                           AND A.BRC = G.BRC
                           AND A.BRC = H.BRC
                           AND A.VLR_ENO = G.VLR_ENO
                           AND A.VLR_ENO = H.VLR_ENO

					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#eq_evl_rat#" />
					<condition id="cond1" name="조건1" comparison="eq" value="00" variable="#eq_evl_rat#" operator="and" />
					<data id="data1" name = "">
		        		 AND     ROUND(G.EQ_EVL_CNT/DECODE(H.TOT_EVL_CNT,0,1,H.TOT_EVL_CNT)*100,2) = 100                  
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#eq_evl_rat#" />
					<condition id="cond1" name="조건1" comparison="ne" value="00" variable="#eq_evl_rat#" operator="and" />
					<data id="data1" name = "">
		        		 AND     ROUND(G.EQ_EVL_CNT/DECODE(H.TOT_EVL_CNT,0,1,H.TOT_EVL_CNT)*100,2) &gt;= #eq_evl_rat#                   
			    	</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#brc#" />
					<data id="data1" name = "">
			    		 AND     A.BRC               = TRIM(#brc#)                     
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			    		GROUP BY B.BRC,A.BAS_YM,A.VLR_ENO,C.RKP_TPC,H.TOT_EVL_CNT,G.EQ_EVL_CNT,G.RKP_GROUP
                           )                    
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011703" name="동일평가 재평가 요청" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="A" default_value=""/>
		<parm id="vlr_eno" name="리스크풀ID" parmid="rkp_id" attr="A" default_value=""/>
		<parm id="rkp_group" name="리스크아이디그룹" parmid="rkp_group" attr="A" default_value=""/>
		<parm id="reevl_yn_chk" name="재평가여부" parmid="reevl_yn_chk" attr="A" default_value=""/>
		<parm id="dcz_dc" name="결재진행코드" parmid="dcz_dc" attr="A" default_value=""/>
		<parm id="dcz_rmk_c" name="결재비고코드" parmid="dcz_rmk_c" attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="M" multiid="rkp_group">
			<multivalue id="brc" name="brc" multiid="brc"/>
			<multivalue id="vlr_eno" name="vlr_eno" multiid="vlr_eno"/>
			<multivalue id="dcz_dc" name="dcz_dc" multiid="dcz_dc"/>
			<multivalue id="reevl_yn_chk" name="reevl_yn_chk" multiid="reevl_yn_chk"/>
			<multivalue id="rkp_group" name="rkp_group" multiid="rkp_group"/>
			<unit id="unit02" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_EVL_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   OPRK_RKP_ID                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   RK_EVL_DCZ_STSC  
						     ,	 RTN_CNTN             
						     ,	 DCZ_RMK_C            
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     	)                                 
						        SELECT 
						          GRP_ORG_C
		                         ,BAS_YM
		                         ,OPRK_RKP_ID
		                         ,BRC
		                         ,MAX(DCZ_SQNO)+1 DCZ_SQNO
		                         ,TO_CHAR(SYSDATE,'YYYYMMDD') DCZ_DT
		                         ,#userid# DCZMN_ENO
		                         ,#dcz_dc# RK_EVL_DCZ_STSC
		                         ,'' RTN_CNTN
		                         ,#dcz_rmk_c# DCZ_RMK_C
		                         , SYSDATE
		                         ,#userid#
		                         , SYSDATE
		                         ,#userid#
							 FROM    TB_OR_RH_EVL_DCZ   
							 WHERE   GRP_ORG_C   = #grp_org_c#
							 AND     BRC         = TRIM(#brc#)        
							 AND     OPRK_RKP_ID IN ($rkp_group$)
							 AND     BAS_YM   = #bas_ym#
                    	 GROUP BY GRP_ORG_C,BAS_YM,OPRK_RKP_ID,BRC                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					MERGE INTO TB_OR_RM_EVL A
					  USING
                            (
                           SELECT GRP_ORG_C,BAS_YM,OPRK_RKP_ID,BRC,MAX(DCZ_SQNO) DCZ_SQNO
                             FROM TB_OR_RH_EVL_DCZ
                            WHERE BAS_YM = #bas_ym#
                            GROUP BY GRP_ORG_C,BAS_YM,OPRK_RKP_ID,BRC
                            ) B
					    ON (  
					            A.GRP_ORG_C = B.GRP_ORG_C
					        AND A.BAS_YM = B.BAS_YM
					        AND A.OPRK_RKP_ID = B.OPRK_RKP_ID
					        AND A.BRC = B.BRC
					        AND A.OPRK_RKP_ID IN ($rkp_group$)
					        AND A.BAS_YM = #bas_ym#
					       )
					 WHEN MATCHED THEN 
					      UPDATE SET A.DCZ_SQNO = B.DCZ_SQNO
					                ,A.REEVL_YN = #reevl_yn_chk#                                
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011801" name="RCSA평가결과보고서" forward="/rsa/ORRC0118" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="RCSA일정년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT YEAR 
						   FROM ( 
						     SELECT SUBSTR(BAS_YM,1,4) YEAR 
						       FROM TB_OR_OM_SCHD 
						      WHERE GRP_ORG_C = #grp_org_c# 
						       AND RK_EVL_TGT_YN = 'Y'
					</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="ne" value="N" variable="#cur_yn#" />
					<data id="data1" name = "">
						     UNION ALL 
						     SELECT TO_CHAR(SYSDATE,'YYYY') YEAR 
						       FROM DUAL 
						     UNION ALL 
						     SELECT TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY') YEAR 
						       FROM DUAL 
					</data>
				</sql>
				<sql id="sql4" name = "SQL4">
					<data id="data1" name = "">
						 ) 
						  GROUP BY YEAR 
						  ORDER BY YEAR DESC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011802" name="RCSA일정회차조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="RCSA일정회차조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT SUBSTR(BAS_YM,5,2) BAS_MM 
						   FROM TB_OR_OM_SCHD 
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND SUBSTR(BAS_YM,1,4) = #sch_bas_yy# 
						    AND RK_EVL_TGT_YN = 'Y' 
						  ORDER BY BAS_YM DESC  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011803" name="RCSA결과보고서정보조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_bas_mm" name="월" parmid="sch_bas_mm" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="조회부서" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="직전평가 전체 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(DISTINCT OPRK_RKP_ID),0) RBF_ALL_CNT
                          FROM TB_OR_RM_EVL
                          WHERE BAS_YM = NVL((
                         	SELECT MAX(BAS_YM)
						 	  FROM TB_OR_RM_EVL
                         	 WHERE BAS_YM &lt; #sch_bas_yy#||#sch_bas_mm#
                        	 GROUP BY BAS_YM
                        		 ),'999999')
                            AND BRC = #sch_hd_brc#
					</data>
				</sql>
				<result id="result" name="rbf_all_cnt" attrname="rbf_all_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="전체 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(OPRK_RKP_ID),0) TOT_EVL_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
					</data>
				</sql>
				<result id="result" name="tot_evl_cnt" attrname="tot_evl_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="본부부서 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(OPRK_RKP_ID),0) BIZO_02_EVL_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
                            AND B.HOFC_BIZO_DSC ='02'
					</data>
				</sql>
				<result id="result" name="bizo_02_evl_cnt" attrname="bizo_02_evl_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="영업점 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(OPRK_RKP_ID),0) BIZO_03_EVL_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
                            AND B.HOFC_BIZO_DSC ='03'
					</data>
				</sql>
				<result id="result" name="bizo_03_evl_cnt" attrname="bizo_03_evl_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="전체 평가자 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(DISTINCT VLR_ENO),0) TOT_VLR_ENO_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
					</data>
				</sql>
				<result id="result" name="tot_vlr_eno_cnt" attrname="tot_vlr_eno_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="본부부서 평가자 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(DISTINCT VLR_ENO),0) BIZO_02_VLR_ENO_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
                            AND B.HOFC_BIZO_DSC ='02'
					</data>
				</sql>
				<result id="result" name="bizo_02_vlr_eno_cnt" attrname="bizo_02_vlr_eno_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="영업점 평가자 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(DISTINCT VLR_ENO),0) BIZO_03_VLR_ENO_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
                            AND B.HOFC_BIZO_DSC ='03'
					</data>
				</sql>
				<result id="result" name="bizo_03_vlr_eno_cnt" attrname="bizo_03_vlr_eno_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="RCSA결과보고서정보조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT
					     COUNT(A.OPRK_RKP_ID) ALL_CNT
					    ,#rbf_all_cnt# RBF_ALL_CNT
					    ,#tot_evl_cnt# TOT_EVL_CNT
					    ,#bizo_02_evl_cnt# BIZO_02_EVL_CNT
					    ,#bizo_03_evl_cnt# BIZO_03_EVL_CNT
					    ,#tot_vlr_eno_cnt# TOT_VLR_ENO_CNT
					    ,#bizo_02_vlr_eno_cnt# BIZO_02_VLR_ENO_CNT
					    ,#bizo_03_vlr_eno_cnt# BIZO_03_VLR_ENO_CNT
					    ,COUNT(DISTINCT A.VLR_ENO) VLR_ENO_CNT
					    ,NVL(SUM(CASE WHEN RK_EVL_GRD_C = '1' AND RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) GREEN_CNT
					    ,NVL(SUM(CASE WHEN RK_EVL_GRD_C = '2' AND RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) YELLOW_CNT
					    ,NVL(SUM(CASE WHEN RK_EVL_GRD_C = '3' AND RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) RED_CNT
					    ,NVL(SUM(CASE WHEN CTEV_GRD_C = '1' AND CTEV_GRD_C IS NOT NULL THEN 1 END),0) CTEV_HIGH_CNT
					    ,NVL(SUM(CASE WHEN CTEV_GRD_C = '2' AND CTEV_GRD_C IS NOT NULL THEN 1 END),0) CTEV_MID_CNT
					    ,NVL(SUM(CASE WHEN CTEV_GRD_C = '3' AND CTEV_GRD_C IS NOT NULL THEN 1 END),0) CTEV_LOW_CNT
					    ,NVL(SUM(CASE WHEN RMN_RSK_GRD_C = '1' AND RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RMN_RSK_GREEN_CNT
					    ,NVL(SUM(CASE WHEN RMN_RSK_GRD_C = '2' AND RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RMN_RSK_YELLOW_CNT
					    ,NVL(SUM(CASE WHEN RMN_RSK_GRD_C = '3' AND RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RMN_RSK_RED_CNT
					    ,NVL(SUM(CASE WHEN RBF_RK_EVL_GRD_C = '1' AND RBF_RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) RBF_GREEN_CNT
					    ,NVL(SUM(CASE WHEN RBF_RK_EVL_GRD_C = '2' AND RBF_RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) RBF_YELLOW_CNT
					    ,NVL(SUM(CASE WHEN RBF_RK_EVL_GRD_C = '3' AND RBF_RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) RBF_RED_CNT
					    ,NVL(SUM(CASE WHEN RBF_CTEV_GRD_C = '1' AND RBF_CTEV_GRD_C IS NOT NULL THEN 1 END),0) RBF_CTEV_HIGH_CNT
					    ,NVL(SUM(CASE WHEN RBF_CTEV_GRD_C = '2' AND RBF_CTEV_GRD_C IS NOT NULL THEN 1 END),0) RBF_CTEV_MID_CNT
					    ,NVL(SUM(CASE WHEN RBF_CTEV_GRD_C = '3' AND RBF_CTEV_GRD_C IS NOT NULL THEN 1 END),0) RBF_CTEV_LOW_CNT
					    ,NVL(SUM(CASE WHEN RBF_RMN_RSK_GRD_C = '1' AND RBF_RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RBF_RMN_RSK_GREEN_CNT
					    ,NVL(SUM(CASE WHEN RBF_RMN_RSK_GRD_C = '2' AND RBF_RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RBF_RMN_RSK_YELLOW_CNT
					    ,NVL(SUM(CASE WHEN RBF_RMN_RSK_GRD_C = '3' AND RBF_RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RBF_RMN_RSK_RED_CNT
					  FROM
					    TB_OR_RM_EVL A
					   ,TB_OR_RH_EVL_DCZ B
					WHERE A.BRC = B.BRC
					  AND A.DCZ_SQNO = B.DCZ_SQNO
					  AND A.OPRK_RKP_ID = B.OPRK_RKP_ID
					  AND A.BAS_YM = B.BAS_YM
					  AND A.BAS_YM = #sch_bas_yy#||#sch_bas_mm#
					  AND A.BRC = #sch_hd_brc#
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011804" name="잔여 위험 RED 발생 리스크 사례" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_bas_mm" name="월" parmid="sch_bas_mm" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="조회부서" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="잔여 위험 RED 발생 리스크 사례" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT A.RK_ISC_CNTN, A.OPRK_RKP_ID RKP_ID, B.RK_EVL_GRD_C, B.CTEV_GRD_C, B.RMN_RSK_GRD_C	
						   FROM TB_OR_RN_RKPMM A
						       ,TB_OR_RM_EVL B
						       ,TB_OR_RH_EVL_DCZ C
						  WHERE A.BAS_YM = B.BAS_YM
						    AND A.OPRK_RKP_ID = B.OPRK_RKP_ID
						    AND B.OPRK_RKP_ID = C.OPRK_RKP_ID
						    AND B.BAS_YM = C.BAS_YM
						    AND B.DCZ_SQNO = C.DCZ_SQNO
						    AND B.BRC = C.BRC
						    AND A.BAS_YM = #sch_bas_yy# || #sch_bas_mm#
						    AND B.BRC = #sch_hd_brc#
						    AND B.RMN_RSK_GRD_C ='3'
						  ORDER BY A.OPRK_RKP_ID
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011805" name="고위험 업무 프로세스(잔여 위험 Red 발생 업무 프로세스)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
			<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
			<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
			<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
			<parm id="sch_bas_mm" name="월" parmid="sch_bas_mm" attr="S" default_value=""/>
			<parm id="sch_hd_brc" name="조회부서" parmid="sch_hd_brc" attr="S" default_value=""/>
			<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="평가결과세부조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                          MAX(G.PRSSNM1) SHEET2_PRSSNM1
                         ,MAX(G.PRSSNM2) SHEET2_PRSSNM2
                         ,MAX(G.PRSSNM3) SHEET2_PRSSNM3
                         ,G.PRSSNM4 SHEET2_PRSSNM4
                        ,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 1.66 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 2.33 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 3 THEN 'RED' 
                              END SHEET2_RK_EVL_GRD_C
                        ,CASE WHEN NVL(AVG(A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 1.66 THEN '상'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 2.33 THEN '중'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 3 THEN '하' 
                              END SHEET2_CTEV_GRD_C
						,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 3 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 6 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 9 THEN 'RED' 
                              END SHEET2_RMN_RSK_GRD_C
                     	 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   PRSS                G
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.BRC = B.BRC
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BAS_YM = C.BAS_YM
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.BAS_YM = TRIM(#sch_bas_yy# || #sch_bas_mm#)
                           AND A.BRC = TRIM(#sch_hd_brc#)  
                           AND A.RK_EVL_GRD_C IS NOT NULL
                        GROUP BY G.PRSSNM4
                       )
                       WHERE SHEET2_RMN_RSK_GRD_C = 'RED'
					</data>
				</sql>		
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011806" name="업무 프로세스 Lv3별 RCSA 결과" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_bas_mm" name="월" parmid="sch_bas_mm" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="조회부서" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="업무 프로세스 Lv3별 RCSA 결과" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                         G.PRSS3 SHEET3_PRSS3
                        ,G.PRSSNM3 SHEET3_PRSSNM3
                        ,NVL(SUM(CASE WHEN A.RK_EVL_GRD_C = '1' AND A.RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_GREEN_CNT
                        ,NVL(SUM(CASE WHEN A.RK_EVL_GRD_C = '2' AND A.RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_YELLOW_CNT
                        ,NVL(SUM(CASE WHEN A.RK_EVL_GRD_C = '3' AND A.RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_RED_CNT
                        ,NVL(SUM(CASE WHEN A.CTEV_GRD_C = '1' AND A.CTEV_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_CTEV_HIGH_CNT
                        ,NVL(SUM(CASE WHEN A.CTEV_GRD_C = '2' AND A.CTEV_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_CTEV_MID_CNT
                        ,NVL(SUM(CASE WHEN A.CTEV_GRD_C = '3' AND A.CTEV_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_CTEV_LOW_CNT
    				    ,NVL(SUM(CASE WHEN A.RMN_RSK_GRD_C = '1' AND A.RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_RMN_RSK_GREEN_CNT
					    ,NVL(SUM(CASE WHEN A.RMN_RSK_GRD_C = '2' AND A.RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_RMN_RSK_YELLOW_CNT
					    ,NVL(SUM(CASE WHEN A.RMN_RSK_GRD_C = '3' AND A.RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_RMN_RSK_RED_CNT
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   PRSS                G
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.BRC = B.BRC
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BAS_YM = C.BAS_YM
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.BAS_YM = TRIM(#sch_bas_yy# || #sch_bas_mm#)
                           AND A.BRC = TRIM(#sch_hd_brc#)    
                        GROUP BY G.PRSS3,G.PRSSNM3
                       )
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011901" name="RCSA평가결과보고서" forward="/rsa/ORRC0119" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="RCSA일정년도조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT YEAR 
						   FROM ( 
						     SELECT SUBSTR(BAS_YM,1,4) YEAR 
						       FROM TB_OR_OM_SCHD 
						      WHERE GRP_ORG_C = #grp_org_c# 
						      AND RK_EVL_TGT_YN = 'Y' 
					</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond1" name="조건1" comparison="ne" value="N" variable="#cur_yn#" />
					<data id="data1" name = "">
						     UNION ALL 
						     SELECT TO_CHAR(SYSDATE,'YYYY') YEAR 
						       FROM DUAL 
						     UNION ALL 
						     SELECT TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY') YEAR 
						       FROM DUAL 
					</data>
				</sql>
				<sql id="sql4" name = "SQL4">
					<data id="data1" name = "">
						 ) 
						  GROUP BY YEAR 
						  ORDER BY YEAR DESC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011902" name="RCSA일정회차조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="RCSA일정회차조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT SUBSTR(BAS_YM,5,2) BAS_MM 
						   FROM TB_OR_OM_SCHD 
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND SUBSTR(BAS_YM,1,4) = #sch_bas_yy# 
						    AND RK_EVL_TGT_YN = 'Y' 
						  ORDER BY BAS_YM DESC  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011903" name="RCSA결과보고서정보조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_bas_mm" name="월" parmid="sch_bas_mm" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="조회부서" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="직전평가 전체 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(DISTINCT OPRK_RKP_ID),0) RBF_ALL_CNT
                          FROM TB_OR_RM_EVL
                          WHERE BAS_YM = NVL((
                         	SELECT MAX(BAS_YM)
						 	  FROM TB_OR_RM_EVL
                         	 WHERE BAS_YM &lt; #sch_bas_yy#||#sch_bas_mm#
                        	 GROUP BY BAS_YM
                        		 ),'999999')
					</data>
				</sql>
				<result id="result" name="rbf_all_cnt" attrname="rbf_all_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="전체 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(OPRK_RKP_ID),0) TOT_EVL_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
					</data>
				</sql>
				<result id="result" name="tot_evl_cnt" attrname="tot_evl_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="본부부서 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(OPRK_RKP_ID),0) BIZO_02_EVL_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
                            AND B.HOFC_BIZO_DSC ='02'
					</data>
				</sql>
				<result id="result" name="bizo_02_evl_cnt" attrname="bizo_02_evl_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="영업점 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(OPRK_RKP_ID),0) BIZO_03_EVL_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
                            AND B.HOFC_BIZO_DSC ='03'
					</data>
				</sql>
				<result id="result" name="bizo_03_evl_cnt" attrname="bizo_03_evl_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="전체 평가자 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(DISTINCT VLR_ENO),0) TOT_VLR_ENO_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
					</data>
				</sql>
				<result id="result" name="tot_vlr_eno_cnt" attrname="tot_vlr_eno_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="본부부서 평가자 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(DISTINCT VLR_ENO),0) BIZO_02_VLR_ENO_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
                            AND B.HOFC_BIZO_DSC ='02'
					</data>
				</sql>
				<result id="result" name="bizo_02_vlr_eno_cnt" attrname="bizo_02_vlr_eno_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="영업점 평가자 건수" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT NVL(COUNT(DISTINCT VLR_ENO),0) BIZO_03_VLR_ENO_CNT
                          FROM TB_OR_RM_EVL A
                              ,TB_OR_OM_ORGZ B
                          WHERE BAS_YM = #sch_bas_yy#||#sch_bas_mm#
                            AND A.BRC = B.BRC
                            AND B.HOFC_BIZO_DSC ='03'
					</data>
				</sql>
				<result id="result" name="bizo_03_vlr_eno_cnt" attrname="bizo_03_vlr_eno_cnt" type="single_string"/>
			</unit>
			<unit id="unit99" name="RCSA결과보고서정보조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT
					     COUNT(A.OPRK_RKP_ID) ALL_CNT
					    ,#rbf_all_cnt# RBF_ALL_CNT
					    ,#tot_evl_cnt# TOT_EVL_CNT
					    ,#bizo_02_evl_cnt# BIZO_02_EVL_CNT
					    ,#bizo_03_evl_cnt# BIZO_03_EVL_CNT
					    ,#tot_vlr_eno_cnt# TOT_VLR_ENO_CNT
					    ,#bizo_02_vlr_eno_cnt# BIZO_02_VLR_ENO_CNT
					    ,#bizo_03_vlr_eno_cnt# BIZO_03_VLR_ENO_CNT
					    ,COUNT(DISTINCT A.VLR_ENO) VLR_ENO_CNT
					    ,NVL(SUM(CASE WHEN RK_EVL_GRD_C = '1' AND RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) GREEN_CNT
					    ,NVL(SUM(CASE WHEN RK_EVL_GRD_C = '2' AND RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) YELLOW_CNT
					    ,NVL(SUM(CASE WHEN RK_EVL_GRD_C = '3' AND RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) RED_CNT
					    ,NVL(SUM(CASE WHEN CTEV_GRD_C = '1' AND CTEV_GRD_C IS NOT NULL THEN 1 END),0) CTEV_HIGH_CNT
					    ,NVL(SUM(CASE WHEN CTEV_GRD_C = '2' AND CTEV_GRD_C IS NOT NULL THEN 1 END),0) CTEV_MID_CNT
					    ,NVL(SUM(CASE WHEN CTEV_GRD_C = '3' AND CTEV_GRD_C IS NOT NULL THEN 1 END),0) CTEV_LOW_CNT
					    ,NVL(SUM(CASE WHEN RMN_RSK_GRD_C = '1' AND RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RMN_RSK_GREEN_CNT
					    ,NVL(SUM(CASE WHEN RMN_RSK_GRD_C = '2' AND RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RMN_RSK_YELLOW_CNT
					    ,NVL(SUM(CASE WHEN RMN_RSK_GRD_C = '3' AND RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RMN_RSK_RED_CNT
					    ,NVL(SUM(CASE WHEN RBF_RK_EVL_GRD_C = '1' AND RBF_RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) RBF_GREEN_CNT
					    ,NVL(SUM(CASE WHEN RBF_RK_EVL_GRD_C = '2' AND RBF_RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) RBF_YELLOW_CNT
					    ,NVL(SUM(CASE WHEN RBF_RK_EVL_GRD_C = '3' AND RBF_RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) RBF_RED_CNT
					    ,NVL(SUM(CASE WHEN RBF_CTEV_GRD_C = '1' AND RBF_CTEV_GRD_C IS NOT NULL THEN 1 END),0) RBF_CTEV_HIGH_CNT
					    ,NVL(SUM(CASE WHEN RBF_CTEV_GRD_C = '2' AND RBF_CTEV_GRD_C IS NOT NULL THEN 1 END),0) RBF_CTEV_MID_CNT
					    ,NVL(SUM(CASE WHEN RBF_CTEV_GRD_C = '3' AND RBF_CTEV_GRD_C IS NOT NULL THEN 1 END),0) RBF_CTEV_LOW_CNT
					    ,NVL(SUM(CASE WHEN RBF_RMN_RSK_GRD_C = '1' AND RBF_RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RBF_RMN_RSK_GREEN_CNT
					    ,NVL(SUM(CASE WHEN RBF_RMN_RSK_GRD_C = '2' AND RBF_RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RBF_RMN_RSK_YELLOW_CNT
					    ,NVL(SUM(CASE WHEN RBF_RMN_RSK_GRD_C = '3' AND RBF_RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) RBF_RMN_RSK_RED_CNT
					  FROM
					    TB_OR_RM_EVL A
					   ,TB_OR_RH_EVL_DCZ B
					WHERE A.BRC = B.BRC
					  AND A.DCZ_SQNO = B.DCZ_SQNO
					  AND A.OPRK_RKP_ID = B.OPRK_RKP_ID
					  AND A.BAS_YM = B.BAS_YM
					  AND A.BAS_YM = #sch_bas_yy#||#sch_bas_mm#
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011904" name="잔여 위험 RED 발생 리스크 사례" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_bas_mm" name="월" parmid="sch_bas_mm" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="조회부서" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="잔여 위험 RED 발생 리스크 사례" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT D.BRNM BRNM ,A.RK_ISC_CNTN, A.OPRK_RKP_ID RKP_ID, B.RK_EVL_GRD_C, B.CTEV_GRD_C, B.RMN_RSK_GRD_C	
						   FROM TB_OR_RN_RKPMM A
						       ,TB_OR_RM_EVL B
						       ,TB_OR_RH_EVL_DCZ C
						       ,TB_OR_OM_ORGZ D
						  WHERE A.BAS_YM = B.BAS_YM
						    AND A.OPRK_RKP_ID = B.OPRK_RKP_ID
						    AND B.OPRK_RKP_ID = C.OPRK_RKP_ID
						    AND B.BAS_YM = C.BAS_YM
						    AND B.DCZ_SQNO = C.DCZ_SQNO
						    AND B.BRC = C.BRC
						    AND C.BRC = D.BRC
						    AND A.BAS_YM = #sch_bas_yy# || #sch_bas_mm#
						    AND B.RMN_RSK_GRD_C ='3'
						  ORDER BY A.OPRK_RKP_ID
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011905" name="고위험 업무 프로세스(잔여 위험 Red 발생 업무 프로세스)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
			<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
			<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
			<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
			<parm id="sch_bas_mm" name="월" parmid="sch_bas_mm" attr="S" default_value=""/>
			<parm id="sch_hd_brc" name="조회부서" parmid="sch_hd_brc" attr="S" default_value=""/>
			<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="평가결과세부조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                          MAX(D.BRNM) SHEET2_BRNM
                         ,MAX(G.PRSSNM1) SHEET2_PRSSNM1
                         ,MAX(G.PRSSNM2) SHEET2_PRSSNM2
                         ,MAX(G.PRSSNM3) SHEET2_PRSSNM3
                         ,G.PRSSNM4 SHEET2_PRSSNM4
                        ,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 1.66 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 2.33 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 3 THEN 'RED' 
                              END SHEET2_RK_EVL_GRD_C
                        ,CASE WHEN NVL(AVG(A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 1.66 THEN 'GREEN'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 2.33 THEN 'YELLOW'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 3 THEN 'RED' 
                              END SHEET2_CTEV_GRD_C
						,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 3 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 6 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 9 THEN 'RED' 
                              END SHEET2_RMN_RSK_GRD_C
                     	 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   PRSS                G
                             ,   TB_OR_OM_ORGZ D
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.BRC = B.BRC
                           AND A.BRC = D.BRC
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BAS_YM = C.BAS_YM
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.BAS_YM = TRIM(#sch_bas_yy# || #sch_bas_mm#)
                           AND A.RK_EVL_GRD_C IS NOT NULL
                        GROUP BY G.PRSSNM4
                       )
                       WHERE SHEET2_RMN_RSK_GRD_C = 'RED'
					</data>
				</sql>		
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC011906" name="업무 프로세스 Lv3별 RCSA 결과" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_yy" name="년도" parmid="sch_bas_yy" attr="S" default_value=""/>
		<parm id="sch_bas_mm" name="월" parmid="sch_bas_mm" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="조회부서" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="업무 프로세스 Lv3별 RCSA 결과" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                         G.PRSS3 SHEET3_PRSS3
                        ,G.PRSSNM3 SHEET3_PRSSNM3
                        ,NVL(SUM(CASE WHEN A.RK_EVL_GRD_C = '1' AND A.RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_GREEN_CNT
                        ,NVL(SUM(CASE WHEN A.RK_EVL_GRD_C = '2' AND A.RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_YELLOW_CNT
                        ,NVL(SUM(CASE WHEN A.RK_EVL_GRD_C = '3' AND A.RK_EVL_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_RED_CNT
                        ,NVL(SUM(CASE WHEN A.CTEV_GRD_C = '1' AND A.CTEV_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_CTEV_HIGH_CNT
                        ,NVL(SUM(CASE WHEN A.CTEV_GRD_C = '2' AND A.CTEV_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_CTEV_MID_CNT
                        ,NVL(SUM(CASE WHEN A.CTEV_GRD_C = '3' AND A.CTEV_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_CTEV_LOW_CNT
    				    ,NVL(SUM(CASE WHEN A.RMN_RSK_GRD_C = '1' AND A.RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_RMN_RSK_GREEN_CNT
					    ,NVL(SUM(CASE WHEN A.RMN_RSK_GRD_C = '2' AND A.RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_RMN_RSK_YELLOW_CNT
					    ,NVL(SUM(CASE WHEN A.RMN_RSK_GRD_C = '3' AND A.RMN_RSK_GRD_C IS NOT NULL THEN 1 END),0) SHEET3_RMN_RSK_RED_CNT
						 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   PRSS                G
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.BRC = B.BRC
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BAS_YM = C.BAS_YM
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.BAS_YM = TRIM(#sch_bas_yy# || #sch_bas_mm#)
                        GROUP BY G.PRSS3,G.PRSSNM3
                       )
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	

	
	<process id="ORRC012001" name="대응방안 수립 관리" forward="/rsa/ORRC0120" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="RCSA일정회차조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT BAS_YM 
						   FROM TB_OR_OM_SCHD 
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND RK_EVL_TGT_YN = 'Y' 
						  ORDER BY BAS_YM DESC  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	<process id="ORRC012002" name="대응방안 수립일정" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="기준년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="조회사무소코드" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="RCSA일정회차조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					SELECT A.BAS_YM INFO_BAS_YM
					      ,COUNT(B.BSN_PRSS_C) ACT_CNT
					      ,SUM(CASE WHEN C.RCSA_ACT_DCZ_STSC &lt;'15' THEN 1 ELSE 0 END) NON_ACT_CNT
					      ,SUM(CASE WHEN C.RCSA_ACT_DCZ_STSC &gt;='15' THEN 1 ELSE 0 END) CPL_ACT_CNT
					      ,MAX(RK_ACT_ST_DT) RK_ACT_ST_DT
					      ,MAX(RK_ACT_ED_DT) RK_ACT_ED_DT
					 FROM TB_OR_OM_SCHD A
					     ,TB_OR_RM_ACT B
					     ,TB_OR_RH_ACT_DCZ C
					 WHERE A.BAS_YM = B.BAS_YM (+)
                       AND A.BAS_YM = C.BAS_YM (+)
					   AND B.BSN_PRSS_C = C.BSN_PRSS_C(+)
					   AND B.BAS_YM = C.BAS_YM(+)
					   AND B.BRC = C.BRC(+)
					   AND B.DCZ_SQNO = C.DCZ_SQNO(+)
					   AND A.BAS_YM = TRIM(#sch_bas_ym#)
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_hd_brc#" />	
					<data id="data1" name = "">
					   AND B.BRC(+) = TRIM(#sch_hd_brc#)
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					 GROUP BY A.BAS_YM
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012003" name="대응방안 대상" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="기준년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="사무소코드" parmid="sch_hd_brc" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="프로세스코드" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_act_dcz" name="진행상태" parmid="sch_act_dcz" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="RCSA일정회차조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
										WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
                    SELECT A.BAS_YM SHEET_BAS_YM
					      ,B.BRC SHEET_BRC
                          ,C.BRNM SHEET_BRNM
                          ,A.BSN_PRSS_C
                          ,D.PRSSNM1
                          ,D.PRSSNM2
                          ,D.PRSSNM3
                          ,D.PRSSNM4
                         ,B.RCSA_ACT_DCZ_STSC
                         ,CASE WHEN B.RCSA_ACT_DCZ_STSC >15 THEN '수립완료'
                               ELSE F.INTG_IDVD_CNM
                           END RCSA_ACT_DCZ_STSNM
                         ,E.RK_ACT_ED_DT
					 FROM TB_OR_RM_ACT A
					     ,TB_OR_RH_ACT_DCZ B
                         ,TB_OR_OM_ORGZ C
                         ,PRSS D
                         ,TB_OR_OM_SCHD E
                         ,TB_OR_OM_CODE F
                     WHERE A.BSN_PRSS_C = B.BSN_PRSS_C
					   AND A.BAS_YM = B.BAS_YM
					   AND A.BRC = B.BRC
                       AND A.DCZ_SQNO = B.DCZ_SQNO
                       AND C.BRC  = A.BRC
                       AND A.BSN_PRSS_C=  D.PRSS
					   AND A.BAS_YM = TRIM(#sch_bas_ym#)
                       AND A.BAS_YM = E.BAS_YM
                       AND B.RCSA_ACT_DCZ_STSC = F.IDVDC_VAL(+)
                       AND F.INTG_GRP_C(+) ='RCSA_ACT_DCZ_STSC'
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_hd_brc#" />
					<condition id="cond1" name="조건1" comparison="ne" value="3" variable="#rcsa_menu_dsc#" operator="and"/>
					<data id="data1" name = "">
					   AND A.BRC = TRIM(#sch_hd_brc#)
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="3" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND  B.DCZ_OBJR_ENO = TRIM(#userid#)                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_bsn_prss_c#" />
					<data id="data1" name = "">
					   AND A.BSN_PRSS_C = TRIM(#sch_bsn_prss_c#)
					</data>
				</sql>	
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_act_dcz#" />
					<condition id="cond1" name="조건1" comparison="ne" value="C" variable="#sch_act_dcz#" operator="and" />
					<data id="data1" name = "">
					   AND B.RCSA_ACT_DCZ_STSC = TRIM(#sch_act_dcz#)
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="C" variable="#sch_act_dcz#"/>
					<data id="data1" name = "">
					   AND B.RCSA_ACT_DCZ_STSC >= '15'
					</data>
				</sql>		
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012004" name="수립일정 수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="기준년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="rk_act_st_dt" name="수립시작일" parmid="rk_act_st_dt" attr="A" default_value=""/>
		<parm id="rk_act_ed_dt" name="수립마감기한" parmid="rk_act_ed_dt" attr="A" default_value=""/>
				
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="수립일정 수정" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
			            UPDATE TB_OR_OM_SCHD 
			               SET RK_ACT_ST_DT = TRIM(#rk_act_st_dt#)
						      ,RK_ACT_ED_DT = TRIM(#rk_act_ed_dt#)
						 WHERE BAS_YM = TRIM(#sch_bas_ym#)
            		</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012101" name="대응방안 등록 및 조회" forward="/rsa/ORRC0121" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="link_bas_ym" name="link_bas_ym" parmid="link_bas_ym" attr="S" default_value=""/>
		<parm id="link_bsn_prss_c" name="link_bsn_prss_c" parmid="link_bsn_prss_c" attr="S" default_value=""/>
		<parm id="link_brc" name="link_brc" parmid="link_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit01" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
						SELECT BAS_YM INFO_BAS_YM
						      ,'('||TO_CHAR(TO_DATE(RK_EVL_ST_DT),'YYYY.MM.DD')||' ~ '|| TO_CHAR(TO_DATE(RK_EVL_ED_DT),'YYYY.MM.DD')||')'
						       INFO_EVL_DT
						      ,TO_CHAR(SYSDATE,'YYYY-MM-DD') ACT_ST_DT
						      ,TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD') ACT_ED_DT
						  FROM TB_OR_OM_SCHD
						 WHERE BAS_YM = TRIM(#link_bas_ym#)
						   AND RK_EVL_TGT_YN = 'Y'
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
				<unit id="unit02" name="전분기" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
						SELECT MAX(BAS_YM) BEF_BAS_YM
						  FROM TB_OR_OM_SCHD
						 WHERE BAS_YM &lt; TRIM(#link_bas_ym#)
						   AND RK_EVL_TGT_YN = 'Y'
						</data>
					</sql>
					<result id="result" name="bef_bas_ym" attrname="bef_bas_ym" type="single_string"/>
				</unit>
			</group>
	</process>
	
	<process id="ORRC012101_guide" name="대응방안help" forward="/rsa/ORRC0121_guide" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC012102" name="대응방안 등록 및 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="sch_bas_ym" name="sch_bas_ym" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
							SELECT ROWNUM NO
							      ,B.RK_ISC_CNTN
							      ,A.IFN_EVL_C
							      ,A.NIFN_EVL_C
							      ,A.FRQ_EVL_C
							      ,A.RK_EVL_GRD_C
							      ,C.RK_CP_CNTN
							      ,A.CTL_DSG_EVL_C
							      ,A.CTL_MNGM_EVL_C
							      ,A.CTEV_GRD_C
							      ,A.RMN_RSK_GRD_C
							  FROM TB_OR_RM_EVL A
							      ,TB_OR_RN_RKPMM B
							      ,TB_OR_RN_CTL_SCFMM C
							 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
							   AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
							   AND A.BAS_YM = C.BAS_YM
							   AND A.BAS_YM = B.BAS_YM
							   AND B.BSN_PRSS_C = #sch_bsn_prss_c#
							   AND A.BRC = #sch_hd_brc#
							   AND A.BAS_YM = #sch_bas_ym#
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012103" name="대응방안 등록 및 조회(전기)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="bef_bas_ym" name="bef_bas_ym" parmid="bef_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
							SELECT ROWNUM NO
							      ,B.RK_ISC_CNTN
							      ,A.IFN_EVL_C
							      ,A.NIFN_EVL_C
							      ,A.FRQ_EVL_C
							      ,A.RK_EVL_GRD_C
							      ,C.RK_CP_CNTN
							      ,A.CTL_DSG_EVL_C
							      ,A.CTL_MNGM_EVL_C
							      ,A.CTEV_GRD_C
							      ,A.RMN_RSK_GRD_C
							  FROM TB_OR_RM_EVL A
							      ,TB_OR_RN_RKPMM B
							      ,TB_OR_RN_CTL_SCFMM C
							 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
							   AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
							   AND A.BAS_YM = C.BAS_YM
							   AND A.BAS_YM = B.BAS_YM
							   AND B.BSN_PRSS_C = #sch_bsn_prss_c#
							   AND A.BRC = #sch_hd_brc#
							   AND A.BAS_YM = #bef_bas_ym#
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012104" name="대응방안 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="sch_bas_ym" name="sch_bas_ym" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
							SELECT A.CAS_DTL_CNTN
							      ,A.CFT_PLAN_CNTN
							      ,A.EXE_RZT_CNTN
							      ,A.ACT_ST_DT
							      ,A.ACT_ED_DT
							      ,A.ACT_CPL_DT
							      ,B.RCSA_ACT_DCZ_STSC
							  FROM TB_OR_RM_ACT A
							      ,TB_OR_RH_ACT_DCZ B
							 WHERE A.BSN_PRSS_C = B.BSN_PRSS_C
							   AND A.BAS_YM = B.BAS_YM
							   AND A.BRC = B.BRC
							   AND A.DCZ_SQNO = B.DCZ_SQNO
							   AND B.BSN_PRSS_C = #sch_bsn_prss_c#
							   AND A.BRC = #sch_hd_brc#
							   AND A.BAS_YM = #sch_bas_ym#
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012105" name="리스크대응방안결재처리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="brc" name="사무소코드" parmid="sch_hd_brc" attr="A" default_value=""/>
		<parm id="bsn_prss_c" name="업무프로세스아이디" parmid="sch_bsn_prss_c" attr="A" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="sch_bas_ym" attr="A" default_value=""/>
		<parm id="dcz_dc" name="결재진행코드" parmid="dcz_dc" attr="A" default_value=""/>
		<parm id="dcz_objr_eno" name="결재확인자개인번호" parmid="dcz_objr_eno" attr="A" default_value=""/>
		<parm id="sch_rtn_cntn" name="결재/반려의견" parmid="sch_rtn_cntn" attr="A" default_value=""/>
		<parm id="dcz_rmk_c" name="결재비고코드" parmid="dcz_rmk_c" attr="A" default_value=""/>
		<parm id="cas_dtl_cntn" name="원인분석" parmid="cas_dtl_cntn" attr="A" default_value=""/>
		<parm id="cft_plan_cntn" name="대응방안" parmid="cft_plan_cntn" attr="A" default_value=""/>
		<parm id="act_st_dt" name="대응방안 수립일" parmid="act_st_dt" attr="A" default_value=""/>
		<parm id="act_ed_dt" name="대응방안 이행 완료 기일" parmid="act_ed_dt" attr="A" default_value=""/>

		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="MAX결재일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  MAX(DCZ_SQNO)+1 DCZ_SQNO   
						 FROM    TB_OR_RH_ACT_DCZ   
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     BRC         = TRIM(#brc#)        
						 AND     BSN_PRSS_C = #bsn_prss_c#
						 AND     BAS_YM   = #bas_ym#                 
					</data>
				</sql>
				<result id="result" name="dcz_sqno" attrname="dcz_sqno" type="single_string"/>
			</unit>
			<unit id="unit99" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_ACT_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   BSN_PRSS_C                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   RCSA_ACT_DCZ_STSC  
						     ,	 RTN_CNTN
						     ,   DCZ_OBJR_ENO
						     ,   DCZ_RMK_C             
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#bas_ym#)        
						     ,   TRIM(#bsn_prss_c#)    
						     ,   TRIM(#brc#)      
						     ,   #dcz_sqno#                     
						     ,   TO_CHAR(SYSDATE,'YYYYMMDD')   
						     ,   TRIM(#userid#)       
						     ,   #dcz_dc#
						     ,	 #sch_rtn_cntn#
						     ,   #dcz_objr_eno#                          
						     ,   #dcz_rmk_c#                          
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                             
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_ACT                         
						 SET     DCZ_SQNO       = #dcz_sqno# 
						        ,CAS_DTL_CNTN = #cas_dtl_cntn#
						        ,CFT_PLAN_CNTN = #cft_plan_cntn#                                     
						        ,ACT_ST_DT = #act_st_dt#                                     
						        ,ACT_ED_DT = #act_ed_dt#                                     
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     BSN_PRSS_C     = #bsn_prss_c#                   
						 AND     BAS_YM       = #bas_ym#                               
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012106" name="대응방안 정보 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="sch_bas_ym" name="sch_bas_ym" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                         G.PRSS4
                        ,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 1.66 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 2.33 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 3 THEN 'RED' 
                              END RK_EVL_GRD_C
                        ,CASE WHEN NVL(AVG(A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 1.66 THEN '상'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 2.33 THEN '중'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 3 THEN '하' 
                              END CTEV_GRD_C
						,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 3 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 6 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 9 THEN 'RED' 
                              END RMN_RSK_GRD_C
                     	 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   PRSS                G
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.BRC = B.BRC
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BAS_YM = C.BAS_YM
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.BAS_YM     = #sch_bas_ym# 
                           AND A.BRC        = TRIM(#sch_hd_brc# )
                           AND G.PRSS4 = #sch_bsn_prss_c# 
                           AND A.RK_EVL_GRD_C IS NOT NULL
                        GROUP BY G.PRSS4
                       )
                       WHERE RMN_RSK_GRD_C = 'RED'
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012107" name="대응방안 정보 조회(전기)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="bef_bas_ym" name="bef_bas_ym" parmid="bef_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
			SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                         G.PRSS4
                        ,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 1.66 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 2.33 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 3 THEN 'RED' 
                              END RK_EVL_GRD_C
                        ,CASE WHEN NVL(AVG(A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 1.66 THEN '상'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 2.33 THEN '중'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 3 THEN '하' 
                              END CTEV_GRD_C
						,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 3 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 6 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 9 THEN 'RED' 
                              END RMN_RSK_GRD_C
                     	 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   PRSS                G
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.BRC = B.BRC
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BAS_YM = C.BAS_YM
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.BAS_YM     = #bef_bas_ym# 
                           AND A.BRC        = TRIM(#sch_hd_brc# )
                           AND G.PRSS4 = #sch_bsn_prss_c# 
                           AND A.RK_EVL_GRD_C IS NOT NULL
                        GROUP BY G.PRSS4
                       )
                       WHERE RMN_RSK_GRD_C = 'RED'
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012201" name="대응방안 이행 현황 조회" forward="/rsa/ORRC0122" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="RCSA일정회차조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT BAS_YM 
						   FROM TB_OR_OM_SCHD 
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND RK_EVL_TGT_YN = 'Y' 
						  ORDER BY BAS_YM DESC  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
		
	<process id="ORRC012202" name="대응방안 이행 현황 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="기준년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="사무소코드" parmid="sch_hd_brc" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="프로세스코드" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_act_dcz" name="진행상태" parmid="sch_act_dcz" attr="S" default_value=""/>
		<parm id="sch_exe_yn" name="이행현황" parmid="sch_exe_yn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="RCSA일정회차조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
										WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
                    SELECT A.BAS_YM SHEET_BAS_YM
					      ,B.BRC SHEET_BRC
                          ,C.BRNM SHEET_BRNM
                          ,A.BSN_PRSS_C
                          ,D.PRSSNM1
                          ,D.PRSSNM2
                          ,D.PRSSNM3
                          ,D.PRSSNM4
                          ,B.RCSA_ACT_DCZ_STSC
                          ,CASE WHEN B.RCSA_ACT_DCZ_STSC &lt;=15 THEN '미작성'
                               ELSE F.INTG_IDVD_CNM
                           END RCSA_ACT_DCZ_STSNM
                         ,E.RK_ACT_ED_DT
                         ,DECODE(A.ACT_CPL_DT,NULL,'미이행','이행완료') EXE_YN
                         ,B.DCZ_DT RCT_DCZ_DT
                         ,A.ACT_CPL_DT EXE_CMP_DT
                         ,A.ACT_ED_DT EXE_DEAD_DT
					 FROM TB_OR_RM_ACT A
					     ,TB_OR_RH_ACT_DCZ B
                         ,TB_OR_OM_ORGZ C
                         ,PRSS D
                         ,TB_OR_OM_SCHD E
                         ,TB_OR_OM_CODE F
                     WHERE A.BSN_PRSS_C = B.BSN_PRSS_C
					   AND A.BAS_YM = B.BAS_YM
					   AND A.BRC = B.BRC
                       AND A.DCZ_SQNO = B.DCZ_SQNO
                       AND C.BRC  = A.BRC
                       AND A.BSN_PRSS_C=  D.PRSS
					   AND A.BAS_YM = TRIM(#sch_bas_ym#)
                       AND A.BAS_YM = E.BAS_YM
                       AND B.RCSA_ACT_DCZ_STSC = F.IDVDC_VAL(+)
                       AND F.INTG_GRP_C(+) ='RCSA_ACT_DCZ_STSC'
                       AND B.RCSA_ACT_DCZ_STSC >= '15'
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_hd_brc#" />
					<condition id="cond1" name="조건1" comparison="ne" value="3" variable="#rcsa_menu_dsc#" operator="and"/>
					<data id="data1" name = "">
					   AND A.BRC = TRIM(#sch_hd_brc#)
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="3" variable="#rcsa_menu_dsc#" />
					<data id="data1" name = "">
			    		 AND  B.DCZ_OBJR_ENO = TRIM(#userid#)                                
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_bsn_prss_c#" />
					<data id="data1" name = "">
					   AND A.BSN_PRSS_C = TRIM(#sch_bsn_prss_c#)
					</data>
				</sql>	
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_act_dcz#" />
					<condition id="cond1" name="조건1" comparison="ne" value="C" variable="#sch_act_dcz#" operator="and" />
					<data id="data1" name = "">
					   AND B.RCSA_ACT_DCZ_STSC = TRIM(#sch_act_dcz#)
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="C" variable="#sch_act_dcz#"/>
					<data id="data1" name = "">
					   AND B.RCSA_ACT_DCZ_STSC >= '15'
					</data>
				</sql>		
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="N" variable="#sch_exe_yn#"/>
					<data id="data1" name = "">
					   AND A.ACT_CPL_DT IS NULL
					</data>
				</sql>	
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="eq" value="Y" variable="#sch_exe_yn#"/>
					<data id="data1" name = "">
					   AND A.ACT_CPL_DT IS NOT NULL
					</data>
				</sql>	
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012301" name="대응방안 등록 및 조회" forward="/rsa/ORRC0123" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="link_bas_ym" name="link_bas_ym" parmid="link_bas_ym" attr="S" default_value=""/>
		<parm id="link_bsn_prss_c" name="link_bsn_prss_c" parmid="link_bsn_prss_c" attr="S" default_value=""/>
		<parm id="link_brc" name="link_brc" parmid="link_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit01" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
						SELECT BAS_YM INFO_BAS_YM
						      ,'('||TO_CHAR(TO_DATE(RK_EVL_ST_DT),'YYYY.MM.DD')||' ~ '|| TO_CHAR(TO_DATE(RK_EVL_ED_DT),'YYYY.MM.DD')||')'
						       INFO_EVL_DT
						      ,TO_CHAR(SYSDATE,'YYYY-MM-DD') ACT_ST_DT
						      ,TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM-DD') ACT_ED_DT
						  FROM TB_OR_OM_SCHD
						 WHERE BAS_YM = TRIM(#link_bas_ym#)
						   AND RK_EVL_TGT_YN = 'Y'
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
				<unit id="unit02" name="전분기" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
						SELECT MAX(BAS_YM) BEF_BAS_YM
						  FROM TB_OR_OM_SCHD
						 WHERE BAS_YM &lt; TRIM(#link_bas_ym#)
						   AND RK_EVL_TGT_YN = 'Y'
						</data>
					</sql>
					<result id="result" name="bef_bas_ym" attrname="bef_bas_ym" type="single_string"/>
				</unit>
			</group>
	</process>
	
	<process id="ORRC012301_guide" name="대응방안help" forward="/rsa/ORRC0123_guide" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC012302" name="대응방안 등록 및 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="sch_bas_ym" name="sch_bas_ym" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
							SELECT ROWNUM NO
							      ,B.RK_ISC_CNTN
							      ,A.IFN_EVL_C
							      ,A.NIFN_EVL_C
							      ,A.FRQ_EVL_C
							      ,A.RK_EVL_GRD_C
							      ,C.RK_CP_CNTN
							      ,A.CTL_DSG_EVL_C
							      ,A.CTL_MNGM_EVL_C
							      ,A.CTEV_GRD_C
							      ,A.RMN_RSK_GRD_C
							  FROM TB_OR_RM_EVL A
							      ,TB_OR_RN_RKPMM B
							      ,TB_OR_RN_CTL_SCFMM C
							 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
							   AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
							   AND A.BAS_YM = C.BAS_YM
							   AND A.BAS_YM = B.BAS_YM
							   AND B.BSN_PRSS_C = #sch_bsn_prss_c#
							   AND A.BRC = #sch_hd_brc#
							   AND A.BAS_YM = #sch_bas_ym#
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012303" name="대응방안 등록 및 조회(전기)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="bef_bas_ym" name="bef_bas_ym" parmid="bef_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
							SELECT ROWNUM NO
							      ,B.RK_ISC_CNTN
							      ,A.IFN_EVL_C
							      ,A.NIFN_EVL_C
							      ,A.FRQ_EVL_C
							      ,A.RK_EVL_GRD_C
							      ,C.RK_CP_CNTN
							      ,A.CTL_DSG_EVL_C
							      ,A.CTL_MNGM_EVL_C
							      ,A.CTEV_GRD_C
							      ,A.RMN_RSK_GRD_C
							  FROM TB_OR_RM_EVL A
							      ,TB_OR_RN_RKPMM B
							      ,TB_OR_RN_CTL_SCFMM C
							 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
							   AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
							   AND A.BAS_YM = C.BAS_YM
							   AND A.BAS_YM = B.BAS_YM
							   AND B.BSN_PRSS_C = #sch_bsn_prss_c#
							   AND A.BRC = #sch_hd_brc#
							   AND A.BAS_YM = #bef_bas_ym#
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012304" name="대응방안 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="sch_bas_ym" name="sch_bas_ym" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
							SELECT A.CAS_DTL_CNTN
							      ,A.CFT_PLAN_CNTN
							      ,A.EXE_RZT_CNTN
							      ,A.ACT_ST_DT
							      ,A.ACT_ED_DT
							      ,A.ACT_CPL_DT
							      ,B.RCSA_ACT_DCZ_STSC
							  FROM TB_OR_RM_ACT A
							      ,TB_OR_RH_ACT_DCZ B
							 WHERE A.BSN_PRSS_C = B.BSN_PRSS_C
							   AND A.BAS_YM = B.BAS_YM
							   AND A.BRC = B.BRC
							   AND A.DCZ_SQNO = B.DCZ_SQNO
							   AND B.BSN_PRSS_C = #sch_bsn_prss_c#
							   AND A.BRC = #sch_hd_brc#
							   AND A.BAS_YM = #sch_bas_ym#
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012305" name="리스크대응방안결재처리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="brc" name="사무소코드" parmid="sch_hd_brc" attr="A" default_value=""/>
		<parm id="bsn_prss_c" name="업무프로세스아이디" parmid="sch_bsn_prss_c" attr="A" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="sch_bas_ym" attr="A" default_value=""/>
		<parm id="dcz_dc" name="결재진행코드" parmid="dcz_dc" attr="A" default_value=""/>
		<parm id="dcz_objr_eno" name="결재확인자개인번호" parmid="dcz_objr_eno" attr="A" default_value=""/>
		<parm id="sch_rtn_cntn" name="결재/반려의견" parmid="sch_rtn_cntn" attr="A" default_value=""/>
		<parm id="dcz_rmk_c" name="결재비고코드" parmid="dcz_rmk_c" attr="A" default_value=""/>
		<parm id="cas_dtl_cntn" name="원인분석" parmid="cas_dtl_cntn" attr="A" default_value=""/>
		<parm id="cft_plan_cntn" name="대응방안" parmid="cft_plan_cntn" attr="A" default_value=""/>
		<parm id="exe_rzt_cntn" name="이행결과" parmid="exe_rzt_cntn" attr="A" default_value=""/>
		<parm id="act_st_dt" name="대응방안 수립일" parmid="act_st_dt" attr="A" default_value=""/>
		<parm id="act_ed_dt" name="대응방안 이행 완료 기일" parmid="act_ed_dt" attr="A" default_value=""/>
		<parm id="act_cpl_dt" name="대응방안 이행 완료일" parmid="act_cpl_dt" attr="A" default_value=""/>

		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="MAX결재일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  MAX(DCZ_SQNO)+1 DCZ_SQNO   
						 FROM    TB_OR_RH_ACT_DCZ   
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     BRC         = TRIM(#brc#)        
						 AND     BSN_PRSS_C = #bsn_prss_c#
						 AND     BAS_YM   = #bas_ym#                 
					</data>
				</sql>
				<result id="result" name="dcz_sqno" attrname="dcz_sqno" type="single_string"/>
			</unit>
			<unit id="unit99" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_ACT_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   BSN_PRSS_C                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   RCSA_ACT_DCZ_STSC  
						     ,	 RTN_CNTN
						     ,   DCZ_OBJR_ENO
						     ,   DCZ_RMK_C             
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#bas_ym#)        
						     ,   TRIM(#bsn_prss_c#)    
						     ,   TRIM(#brc#)      
						     ,   #dcz_sqno#                     
						     ,   TO_CHAR(SYSDATE,'YYYYMMDD')   
						     ,   TRIM(#userid#)       
						     ,   #dcz_dc#
						     ,	 #sch_rtn_cntn#
						     ,   #dcz_objr_eno#                          
						     ,   #dcz_rmk_c#                          
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                             
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE  TB_OR_RM_ACT                         
						 SET     DCZ_SQNO       = #dcz_sqno# 
						        ,EXE_RZT_CNTN = #exe_rzt_cntn#                              
						        ,ACT_CPL_DT = #act_cpl_dt#                                     
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     BSN_PRSS_C     = #bsn_prss_c#                   
						 AND     BAS_YM       = #bas_ym#                               
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012306" name="대응방안 정보 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="sch_bas_ym" name="sch_bas_ym" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                         G.PRSS4
                        ,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 1.66 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 2.33 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 3 THEN 'RED' 
                              END RK_EVL_GRD_C
                        ,CASE WHEN NVL(AVG(A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 1.66 THEN '상'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 2.33 THEN '중'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 3 THEN '하' 
                              END CTEV_GRD_C
						,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 3 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 6 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 9 THEN 'RED' 
                              END RMN_RSK_GRD_C
                     	 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   PRSS                G
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.BRC = B.BRC
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BAS_YM = C.BAS_YM
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.BAS_YM     = #sch_bas_ym# 
                           AND A.BRC        = TRIM(#sch_hd_brc# )
                           AND G.PRSS4 = #sch_bsn_prss_c# 
                           AND A.RK_EVL_GRD_C IS NOT NULL
                        GROUP BY G.PRSS4
                       )
                       WHERE RMN_RSK_GRD_C = 'RED'
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012307" name="대응방안 정보 조회(전기)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="bef_bas_ym" name="bef_bas_ym" parmid="bef_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="대응방안 등록 및 조회 평가일정" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
			SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                         G.PRSS4
                        ,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 1.66 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 2.33 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C),'0') &lt;= 3 THEN 'RED' 
                              END RK_EVL_GRD_C
                        ,CASE WHEN NVL(AVG(A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 1.66 THEN '상'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 2.33 THEN '중'
                              WHEN NVL(AVG(A.CTEV_GRD_C),'0') &lt;= 3 THEN '하' 
                              END CTEV_GRD_C
						,CASE WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') = 0 THEN '미평가'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 3 THEN 'GREEN'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 6 THEN 'YELLOW'
                              WHEN NVL(AVG(A.RK_EVL_GRD_C* A.CTEV_GRD_C),'0') &lt;= 9 THEN 'RED' 
                              END RMN_RSK_GRD_C
                     	 FROM    TB_OR_RM_EVL        A                                 
						     ,   TB_OR_RH_EVL_DCZ    B
                             ,   TB_OR_RN_RKPMM      C
                             ,   PRSS                G
						 WHERE A.OPRK_RKP_ID = B.OPRK_RKP_ID
                           AND A.BAS_YM = B.BAS_YM
                           AND A.DCZ_SQNO = B.DCZ_SQNO
                           AND A.BRC = B.BRC
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID
                           AND A.BAS_YM = C.BAS_YM
                           AND C.BSN_PRSS_C = G.PRSS4
                           AND A.BAS_YM     = #bef_bas_ym# 
                           AND A.BRC        = TRIM(#sch_hd_brc# )
                           AND G.PRSS4 = #sch_bsn_prss_c# 
                           AND A.RK_EVL_GRD_C IS NOT NULL
                        GROUP BY G.PRSS4
                       )
                       WHERE RMN_RSK_GRD_C = 'RED'
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012401" name="손실/KRI 매핑현황 요약" forward="/rsa/ORRC0124" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S">
				<unit id="unit01" name="손실/KRI 매핑현황 요약" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
							SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD') TODAY_DATE FROM DUAL
						</data>
					</sql>
					<result id="result" name="today_date" attrname="today_date" type="single_string"/>
				</unit>
			</group>
	</process>
	
	<process id="ORRC012402" name="손실정보" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="손실정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
					SELECT 
					(SELECT COUNT(DISTINCT LSHP_AMNNO) FROM TB_OR_LM_LSHP WHERE VLD_YN='Y') TOT_CNT_LSS
					,(SELECT COUNT(DISTINCT LSHP_AMNNO) FROM TB_OR_RH_REL_LSS) TOT_CMP_LSS
					,(SELECT COUNT(DISTINCT LSHP_AMNNO) FROM TB_OR_LM_LSHP WHERE VLD_YN='Y') 
					  - (SELECT COUNT(DISTINCT LSHP_AMNNO) FROM TB_OR_RH_REL_LSS) TOT_NCMP_LSS
					,(SELECT ROUND(AVG(COUNT(LSHP_AMNNO)),2) FROM TB_OR_RH_REL_LSS GROUP BY LSHP_AMNNO) AVG_LSS_CNT
					FROM DUAL
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012403" name="KRI정보" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="손실정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
				SELECT 
				(SELECT COUNT(DISTINCT OPRK_RKI_ID) FROM TB_OR_KM_RKI WHERE VLD_YN='Y') TOT_CNT_KRI
				,(SELECT COUNT(DISTINCT OPRK_RKI_ID) FROM TB_OR_RH_REL_KRI) TOT_CMP_KRI
				,(SELECT COUNT(DISTINCT OPRK_RKI_ID) FROM TB_OR_KM_RKI WHERE VLD_YN='Y') 
				  - (SELECT COUNT(DISTINCT OPRK_RKI_ID) FROM TB_OR_RH_REL_KRI) TOT_NCMP_KRI
				,(SELECT ROUND(AVG(COUNT(OPRK_RKI_ID)),2) FROM TB_OR_RH_REL_KRI GROUP BY OPRK_RKI_ID) AVG_KRI_CNT
				FROM DUAL
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>

	
	
	<process id="ORRC012404" name="손실/KRI매핑현황 요약" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="sch_bas_ym" name="sch_bas_ym" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_bsn_prss_c" name="sch_bsn_prss_c" parmid="sch_bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_hd_brc" name="sch_hd_brc" parmid="sch_hd_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="손실/KRI매핑현황 요약" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
				SELECT * FROM (
                   WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    )
				 		)
                         SELECT  
                          CASE WHEN SUBSTR(B.PRSS2,0,2) = 'HQ' THEN '본부부서'
                               WHEN SUBSTR(B.PRSS2,0,2) = 'BR' THEN '영업점'
                           END HOFC_BIZO_DSNM
                          ,B.PRSSNM1
                          ,B.PRSSNM2
                          ,COUNT(A.OPRK_RKP_ID) RKP_CNT
                          ,COUNT(DISTINCT C.LSHP_AMNNO) LSS_CNT
                          ,COUNT(DISTINCT D.OPRK_RKI_ID) KRI_CNT
                         FROM    TB_OR_RM_RKP        A  
                             ,   PRSS                B
                             ,   TB_OR_RH_REL_LSS    C
                             ,   TB_OR_RH_REL_KRI    D
						 WHERE A.BSN_PRSS_C = B.PRSS4
                           AND A.OPRK_RKP_ID = C.OPRK_RKP_ID(+)
                           AND A.OPRK_RKP_ID = D.OPRK_RKP_ID(+)
                           AND A.VLD_YN = 'Y'
                        GROUP BY B.PRSS1,B.PRSSNM1,B.PRSS2,B.PRSSNM2
                        ORDER BY B.PRSS1 DESC,B.PRSSNM1,B.PRSS2,B.PRSSNM2
                       )
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012501" name="손실-리스크사례 매핑현황 조회" forward="/rsa/ORRC0125" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC012502" name="손실정보" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="손실정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
					SELECT 
					(SELECT COUNT(DISTINCT LSHP_AMNNO) FROM TB_OR_LM_LSHP WHERE VLD_YN='Y') TOT_CNT_LSS
					,(SELECT COUNT(DISTINCT LSHP_AMNNO) FROM TB_OR_RH_REL_LSS) TOT_CMP_LSS
					,(SELECT COUNT(DISTINCT LSHP_AMNNO) FROM TB_OR_LM_LSHP WHERE VLD_YN='Y') 
					  - (SELECT COUNT(DISTINCT LSHP_AMNNO) FROM TB_OR_RH_REL_LSS) TOT_NCMP_LSS
					,(SELECT ROUND(AVG(COUNT(LSHP_AMNNO)),2) FROM TB_OR_RH_REL_LSS GROUP BY LSHP_AMNNO) AVG_LSS_CNT
					FROM DUAL
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012503" name="손실정보" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="손실정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
				SELECT A.LSHP_AMNNO
				      ,A.OCU_BRNM 
				      ,B.LSHP_DCZ_STS_DSC
				      ,A.LSS_TINM
				      ,A.OCU_DT
				      ,TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') REG_DT
				      ,A.TTLS_AM
				      ,A.GULS_AM
				      ,DECODE(COUNT(C.OPRK_RKP_ID),0,'연결필요',COUNT(C.OPRK_RKP_ID)||'건') REL_CNT
				FROM TB_OR_LM_LSHP A
				    ,TB_OR_LH_DCZ B
				    ,TB_OR_RH_REL_LSS C
				WHERE A.LSHP_AMNNO = B.LSHP_AMNNO (+)
				  AND A.VLD_YN = 'Y'
				  AND A.LSHP_AMNNO = C.LSHP_AMNNO(+)
				  AND A.DCZ_SQNO = B.DCZ_SQNO(+)
				GROUP BY A.LSHP_AMNNO
				        ,A.OCU_BRNM 
				        ,B.LSHP_DCZ_STS_DSC
				        ,A.LSS_TINM
				        ,A.OCU_DT
				        ,A.FIR_INP_DTM
				        ,A.TTLS_AM
				        ,A.GULS_AM
				ORDER BY A.LSHP_AMNNO DESC
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012601" name="손실사건 리스크사례 연결등록" forward="/rsa/ORRC0126" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RKP_TPC"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND INTG_GRP_C = TRIM(#intg_grp_c#)  
						    AND C_UYN = 'Y'  
						  ORDER BY SORT_SQ   
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012602" name="손실정보" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="lshp_amnno" name="lshp_amnno" parmid="lshp_amnno" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="손실정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
				SELECT A.LSHP_AMNNO
				      ,A.OCU_BRNM 
				      ,B.LSHP_DCZ_STS_DSC
				      ,A.LSS_TINM
				      ,A.OCU_DT
				      ,TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') REG_DT
				      ,A.TTLS_AM
				      ,A.GULS_AM
				      ,DECODE(COUNT(C.OPRK_RKP_ID),0,'연결필요',COUNT(C.OPRK_RKP_ID)||'건') REL_CNT
				FROM TB_OR_LM_LSHP A
				    ,TB_OR_LH_DCZ B
				    ,TB_OR_RH_REL_LSS C
				WHERE A.LSHP_AMNNO = B.LSHP_AMNNO (+)
				  AND A.VLD_YN = 'Y'
				  AND A.LSHP_AMNNO = C.LSHP_AMNNO(+)
				  AND A.DCZ_SQNO = B.DCZ_SQNO(+)
				  AND A.LSHP_AMNNO = #lshp_amnno#
				GROUP BY A.LSHP_AMNNO
				        ,A.OCU_BRNM 
				        ,B.LSHP_DCZ_STS_DSC
				        ,A.LSS_TINM
				        ,A.OCU_DT
				        ,A.FIR_INP_DTM
				        ,A.TTLS_AM
				        ,A.GULS_AM
				ORDER BY A.LSHP_AMNNO DESC
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012603" name="리스크풀 조회(목록)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="lshp_amnno" name="lshp_amnno" parmid="lshp_amnno" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크풀 목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					  SELECT * 
				 		FROM ( 
				 		WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, CAS AS ( 
				 		    SELECT SUBSTR(CAS, INSTR(CAS,'|',1,2) + 1, INSTR(CAS,'|',1,3) - INSTR(CAS,'|',1,2) -1) CAS1 
				 		         , SUBSTR(CAS, INSTR(CAS,'|',1,3) + 1, INSTR(CAS,'|',1,4) - INSTR(CAS,'|',1,3) -1) CAS2 
				 		         , SUBSTR(CAS, INSTR(CAS,'|',1,4) + 1) CAS 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,2) + 1, INSTR(CASNM,'|',1,3) - INSTR(CASNM,'|',1,2) -1) CASNM1 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,3) + 1, INSTR(CASNM,'|',1,4) - INSTR(CASNM,'|',1,3) -1) CASNM2 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,4) + 1) CASNM3 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(CAS_TPC,'|') AS CAS 
				 		              , SYS_CONNECT_BY_PATH(CAS_TPNM,'|') AS CASNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_CAS 
				 		         WHERE LVL_NO='3' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_CAS_TPC IS NULL 
				 		         CONNECT BY PRIOR CAS_TPC = UP_CAS_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		) 
				 		, IFN AS ( 
				 		     SELECT SUBSTR(IFN, INSTR(IFN,'|',1,2) + 1, INSTR(IFN,'|',1,3) - INSTR(IFN,'|',1,2) -1) IFN1 
				 		          , SUBSTR(IFN, INSTR(IFN,'|',1,3) + 1) IFN 
				 		          , SUBSTR(IFNNM, INSTR(IFNNM,'|',1,2) + 1, INSTR(IFNNM,'|',1,3) - INSTR(IFNNM,'|',1,2) -1) IFNNM1 
				 		          , SUBSTR(IFNNM, INSTR(IFNNM,'|',1,3) + 1) IFNNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(IFN_TPC,'|') AS IFN 
				 		              , SYS_CONNECT_BY_PATH(IFN_TPNM,'|') AS IFNNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_IFN 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_IFN_TPC IS NULL 
				 		         CONNECT BY PRIOR IFN_TPC = UP_IFN_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, HPN AS ( 
				 		     SELECT SUBSTR(HPN, INSTR(HPN,'|',1,2) + 1, INSTR(HPN,'|',1,3) - INSTR(HPN,'|',1,2) -1) HPN1 
				 		          , SUBSTR(HPN, INSTR(HPN,'|',1,3) + 1, INSTR(HPN,'|',1,4) - INSTR(HPN,'|',1,3) -1) HPN2 
				 		          , SUBSTR(HPN, INSTR(HPN,'|',1,4) + 1) HPN 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,2) + 1, INSTR(HPNNM,'|',1,3) - INSTR(HPNNM,'|',1,2) -1) HPNNM1 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,3) + 1, INSTR(HPNNM,'|',1,4) - INSTR(HPNNM,'|',1,3) -1) HPNNM2 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,4) + 1) HPNNM3 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(HPN_TPC,'|') AS HPN 
				 		              , SYS_CONNECT_BY_PATH(HPN_TPNM,'|') AS HPNNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_HPN 
				 		         WHERE LVL_NO='3' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_HPN_TPC IS NULL 
				 		         CONNECT BY PRIOR HPN_TPC = UP_HPN_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, EMRK AS ( 
				 		     SELECT SUBSTR(EMRK, INSTR(EMRK,'|',1,2) + 1, INSTR(EMRK,'|',1,3) - INSTR(EMRK,'|',1,2) -1) EMRK1 
				 		          , SUBSTR(EMRK, INSTR(EMRK,'|',1,3) + 1) EMRK 
				 		          , SUBSTR(EMRKNM, INSTR(EMRKNM,'|',1,2) + 1, INSTR(EMRKNM,'|',1,3) - INSTR(EMRKNM,'|',1,2) -1) EMRKNM1 
				 		          , SUBSTR(EMRKNM, INSTR(EMRKNM,'|',1,3) + 1) EMRKNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(EMRK_TPC,'|') AS EMRK 
				 		              , SYS_CONNECT_BY_PATH(EMRK_TPNM,'|') AS EMRKNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_EMRK 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_EMRK_TPC IS NULL 
				 		         CONNECT BY PRIOR EMRK_TPC = UP_EMRK_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		) 
				 		, CTL AS ( 
				 		     SELECT SUBSTR(CTL, INSTR(CTL,'|',1,2) + 1, INSTR(CTL,'|',1,3) - INSTR(CTL,'|',1,2) -1) CTL1 
				 		          , SUBSTR(CTL, INSTR(CTL,'|',1,3) + 1) CTL 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,2) + 1, INSTR(CTLNM,'|',1,3) - INSTR(CTLNM,'|',1,2) -1) CTLNM1 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,3) + 1) CTLNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(RK_CTL_TPC,'|') AS CTL 
				 		              , SYS_CONNECT_BY_PATH(CTL_TPNM,'|') AS CTLNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_CTL 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_RK_CTL_TPC IS NULL 
				 		         CONNECT BY PRIOR RK_CTL_TPC = UP_RK_CTL_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		)
                        , BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C, B.UP_BRC ,                            
						       B.BRNM,
						       B.BRC,
                               A.OPRK_RKP_ID
						      FROM TB_OR_RH_BRC A                              
						       LEFT JOIN TB_OR_OM_ORGZ B                             
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC                                       
						        AND B.UYN = 'Y'
                             GROUP BY A.GRP_ORG_C,B.UP_BRC,B.BRNM,B.BRC,A.OPRK_RKP_ID
						)
				  		SELECT A.OPRK_RKP_ID RKP_ID, A.RK_ISC_CNTN 
				 		     , A.KRK_YN 
				 		     , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKP_TPC' AND GRP_ORG_C = A.GRP_ORG_C AND A.RKP_TPC = IDVDC_VAL) AS RKP_TPC_NM 
				 		     , B.PRSS, B.PRSSNM1, B.PRSSNM2, B.PRSSNM3, B.PRSSNM4 
				 		     , C.CAS, C.CASNM1, C.CASNM2, C.CASNM3 
				 		     , D.IFN, D.IFNNM1, D.IFNNM2 
				 		     , E.HPN, E.HPNNM1, E.HPNNM2, E.HPNNM3 
				 		     , F.EMRK, F.EMRKNM1, F.EMRKNM2 
				 		     , G.RK_CP_CNTN CP_CNTN 
				 		     , H.CTLNM1, H.CTLNM2 
				  		     , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN J.BRNM
				  		     		END BRNM
				  		     , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN K.BRNM
				  		     		END DEPT_BRNM
				  		     , I.INTG_IDVD_CNM RPT_FQ_DSCNM
				  		     , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') REG_DT
				  		     , TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') CHG_DT
				 		FROM TB_OR_RM_RKP A 
				 		   , PRSS B 
				 		   , CAS C 
				 		   , IFN D 
				 		   , HPN E 
				 		   , EMRK F 
				 		   , TB_OR_RH_CTL_SCF G 
				 		   , CTL H 
				 		   , TB_OR_OM_CODE I 
				 		   , BRNM J
                           , TB_OR_OM_ORGZ K
                           , TB_OR_RH_REL_LSS L
		 			  WHERE A.GRP_ORG_C = B.GRP_ORG_C 
				 		AND A.BSN_PRSS_C = B.PRSS 
				 		AND A.GRP_ORG_C = C.GRP_ORG_C 
				 		AND A.CAS_TPC = C.CAS 
				 		AND A.GRP_ORG_C = D.GRP_ORG_C 
				 		AND A.IFN_TPC = D.IFN 
				 		AND A.GRP_ORG_C = E.GRP_ORG_C 
				 		AND A.HPN_TPC = E.HPN 
				 		AND A.GRP_ORG_C = F.GRP_ORG_C(+) 
				 		AND A.EMRK_TPC = F.EMRK(+) 
				 		AND A.GRP_ORG_C = G.GRP_ORG_C 
				 		AND A.OPRK_RKP_ID = G.OPRK_RKP_ID 
				 		AND G.RK_CTL_SQNO = '1' 
				 		AND G.GRP_ORG_C = H.GRP_ORG_C 
				 		AND G.RK_CTL_TPC = H.CTL 
				 		AND A.OPRK_RKP_ID = J.OPRK_RKP_ID(+)
				 		AND I.INTG_GRP_C(+) = 'RPT_FQ_DSC'
						AND I.IDVDC_VAL(+) = A.RPT_FQ_DSC
 						AND J.UP_BRC = K.BRC (+)
				 		AND A.GRP_ORG_C = #grp_org_c# 
				 		AND A.OPRK_RKP_ID = L.OPRK_RKP_ID
				 		AND L.LSHP_AMNNO = #lshp_amnno#
					</data>
				</sql>
				<sql id="sql18" name = "SQL18">
					<data id="data1" name = "">
						ORDER BY A.OPRK_RKP_ID  
						) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	<process id="ORRC012604" name="연관 RCSA 등록" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="lshp_amnno" name="손실번호" parmid="lshp_amnno" attr="A" default_value=""/>
		<parm id="rkp_id" name="리스크아이디" parmid="rkp_id" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="연관 rcsa 제거" type="S" mode="delete" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 DELETE FROM TB_OR_RH_REL_LSS WHERE LSHP_AMNNO = #lshp_amnno#              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
		<group id="grp01" name="grp01" type="M" multiid="rkp_id">
			<multivalue id="rkp_id" name="rkp_id" multiid="rkp_id"/>
			<multivalue id="lshp_amnno" name="lshp_amnno" multiid="lshp_amnno"/>
			<unit id="unit99" name="연관 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_REL_LSS 
						     (   GRP_ORG_C                     
						     ,   OPRK_RKP_ID                       
						     ,   LSHP_AMNNO               
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#rkp_id#)    
						     ,   TRIM(#lshp_amnno#)    
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012701" name="KRI-리스크사례 매핑현황 조회" forward="/rsa/ORRC0127" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC012702" name="KRI정보" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="KRI정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
				SELECT 
				(SELECT COUNT(DISTINCT OPRK_RKI_ID) FROM TB_OR_KM_RKI WHERE VLD_YN='Y') TOT_CNT_KRI
				,(SELECT COUNT(DISTINCT OPRK_RKI_ID) FROM TB_OR_RH_REL_KRI) TOT_CMP_KRI
				,(SELECT COUNT(DISTINCT OPRK_RKI_ID) FROM TB_OR_KM_RKI WHERE VLD_YN='Y') 
				  - (SELECT COUNT(DISTINCT OPRK_RKI_ID) FROM TB_OR_RH_REL_KRI) TOT_NCMP_KRI
				,(SELECT ROUND(AVG(COUNT(OPRK_RKI_ID)),2) FROM TB_OR_RH_REL_KRI GROUP BY OPRK_RKI_ID) AVG_KRI_CNT
				FROM DUAL
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012703" name="KRI목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					  WITH DEPT_BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C
                             , B.UP_BRC 
                             , C.BRNM
						     , B.BRC    
						      FROM TB_OR_KH_BRC A                              
						    LEFT JOIN TB_OR_OM_ORGZ B
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC
						        AND B.UYN = 'Y'
                            LEFT JOIN TB_OR_OM_ORGZ C
                                 ON B.UP_BRC = C.BRC
                                AND C.UYN = 'Y'
						      GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC
						)
              SELECT    D.BRNM DEPT_BRNM
                       ,C.BRNM
                       ,A.OPRK_RKI_ID
                       ,A.OPRK_RKINM
                       ,A.RKI_OBV_CNTN
                       ,A.RKI_DEF_CNTN
                       ,A.RKI_UNT_C
                       ,A.RPT_FQ_DSC
                       ,A.COM_COL_PSB_YN
                       ,A.KRI_YN
                       ,DECODE(COUNT(E.OPRK_RKP_ID),0,'연결필요',COUNT(E.OPRK_RKP_ID)||'건') REL_CNT
                   FROM TB_OR_KM_RKI A
                       ,TB_OR_KH_BRC B
                       ,TB_OR_OM_ORGZ C
                       ,DEPT_BRNM D
                       ,TB_OR_RH_REL_KRI E
                  WHERE A.OPRK_RKI_ID = B.OPRK_RKI_ID
                    AND B.BRC= C.BRC
                    AND D.BRC = C.BRC
                    AND A.OPRK_RKI_ID = E.OPRK_RKI_ID(+)
                  GROUP BY D.BRNM
                       ,C.BRNM
                       ,A.OPRK_RKI_ID
                       ,A.OPRK_RKINM
                       ,A.RKI_OBV_CNTN
                       ,A.RKI_DEF_CNTN
                       ,A.RKI_UNT_C
                       ,A.RPT_FQ_DSC
                       ,A.COM_COL_PSB_YN
                       ,A.KRI_YN
                  ORDER BY A.OPRK_RKI_ID
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012801" name="KRI 리스크사례 연결등록" forward="/rsa/ORRC0128" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RKP_TPC"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND INTG_GRP_C = TRIM(#intg_grp_c#)  
						    AND C_UYN = 'Y'  
						  ORDER BY SORT_SQ   
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012802" name="KRI정보" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="rki_id" name="rki_id" parmid="rki_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
				<unit id="unit99" name="KRI정보" type="S" mode="select">
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">  
				WITH DEPT_BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C
                             , B.UP_BRC 
                             , C.BRNM
						     , B.BRC    
						      FROM TB_OR_KH_BRC A                              
						    LEFT JOIN TB_OR_OM_ORGZ B
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC
						        AND B.UYN = 'Y'
                            LEFT JOIN TB_OR_OM_ORGZ C
                                 ON B.UP_BRC = C.BRC
                                AND C.UYN = 'Y'
						      GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC
						)
              SELECT    D.BRNM DEPT_BRNM
                       ,C.BRNM
                       ,A.OPRK_RKI_ID
                       ,A.OPRK_RKINM
                       ,A.RKI_OBV_CNTN
                       ,A.RKI_DEF_CNTN
                       ,A.RKI_UNT_C
                       ,F.INTG_IDVD_CNM RKI_UNT_NM
                       ,A.RPT_FQ_DSC
                       ,G.INTG_IDVD_CNM RPT_FQ_DSNM
                       ,A.COM_COL_PSB_YN
                       ,A.KRI_YN
                       ,DECODE(COUNT(E.OPRK_RKP_ID),0,'연결필요',COUNT(E.OPRK_RKP_ID)||'건') REL_CNT
                   FROM TB_OR_KM_RKI A
                       ,TB_OR_KH_BRC B
                       ,TB_OR_OM_ORGZ C
                       ,DEPT_BRNM D
                       ,TB_OR_RH_REL_KRI E
                       ,TB_OR_OM_CODE F
                       ,TB_OR_OM_CODE G
                  WHERE A.OPRK_RKI_ID = B.OPRK_RKI_ID
                    AND B.BRC= C.BRC
                    AND D.BRC = C.BRC
                    AND A.OPRK_RKI_ID = E.OPRK_RKI_ID(+)
                    AND A.OPRK_RKI_ID = #rki_id#
                    AND A.RPT_FQ_DSC = F.IDVDC_VAL (+)
                    AND F.INTG_GRP_C(+) = 'RPT_FQ_DSC'
                    AND A.RKI_UNT_C = G.IDVDC_VAL (+)
                    AND G.INTG_GRP_C(+) = 'RKI_UNT_C'
                  GROUP BY D.BRNM
                       ,C.BRNM
                       ,A.OPRK_RKI_ID
                       ,A.OPRK_RKINM
                       ,A.RKI_OBV_CNTN
                       ,A.RKI_DEF_CNTN
                       ,A.RKI_UNT_C
                       ,A.RPT_FQ_DSC
                       ,A.COM_COL_PSB_YN
                       ,A.KRI_YN
                       ,G.INTG_IDVD_CNM
                       ,F.INTG_IDVD_CNM
                  ORDER BY A.OPRK_RKI_ID
						</data>
					</sql>
					<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
				</unit>
			</group>
	</process>
	
	<process id="ORRC012803" name="리스크풀 조회(목록)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rki_id" name="rki_id" parmid="rki_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크풀 목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					  SELECT * 
				 		FROM ( 
				 		WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, CAS AS ( 
				 		    SELECT SUBSTR(CAS, INSTR(CAS,'|',1,2) + 1, INSTR(CAS,'|',1,3) - INSTR(CAS,'|',1,2) -1) CAS1 
				 		         , SUBSTR(CAS, INSTR(CAS,'|',1,3) + 1, INSTR(CAS,'|',1,4) - INSTR(CAS,'|',1,3) -1) CAS2 
				 		         , SUBSTR(CAS, INSTR(CAS,'|',1,4) + 1) CAS 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,2) + 1, INSTR(CASNM,'|',1,3) - INSTR(CASNM,'|',1,2) -1) CASNM1 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,3) + 1, INSTR(CASNM,'|',1,4) - INSTR(CASNM,'|',1,3) -1) CASNM2 
				 		         , SUBSTR(CASNM, INSTR(CASNM,'|',1,4) + 1) CASNM3 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(CAS_TPC,'|') AS CAS 
				 		              , SYS_CONNECT_BY_PATH(CAS_TPNM,'|') AS CASNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_CAS 
				 		         WHERE LVL_NO='3' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_CAS_TPC IS NULL 
				 		         CONNECT BY PRIOR CAS_TPC = UP_CAS_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		) 
				 		, IFN AS ( 
				 		     SELECT SUBSTR(IFN, INSTR(IFN,'|',1,2) + 1, INSTR(IFN,'|',1,3) - INSTR(IFN,'|',1,2) -1) IFN1 
				 		          , SUBSTR(IFN, INSTR(IFN,'|',1,3) + 1) IFN 
				 		          , SUBSTR(IFNNM, INSTR(IFNNM,'|',1,2) + 1, INSTR(IFNNM,'|',1,3) - INSTR(IFNNM,'|',1,2) -1) IFNNM1 
				 		          , SUBSTR(IFNNM, INSTR(IFNNM,'|',1,3) + 1) IFNNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(IFN_TPC,'|') AS IFN 
				 		              , SYS_CONNECT_BY_PATH(IFN_TPNM,'|') AS IFNNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_IFN 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_IFN_TPC IS NULL 
				 		         CONNECT BY PRIOR IFN_TPC = UP_IFN_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, HPN AS ( 
				 		     SELECT SUBSTR(HPN, INSTR(HPN,'|',1,2) + 1, INSTR(HPN,'|',1,3) - INSTR(HPN,'|',1,2) -1) HPN1 
				 		          , SUBSTR(HPN, INSTR(HPN,'|',1,3) + 1, INSTR(HPN,'|',1,4) - INSTR(HPN,'|',1,3) -1) HPN2 
				 		          , SUBSTR(HPN, INSTR(HPN,'|',1,4) + 1) HPN 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,2) + 1, INSTR(HPNNM,'|',1,3) - INSTR(HPNNM,'|',1,2) -1) HPNNM1 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,3) + 1, INSTR(HPNNM,'|',1,4) - INSTR(HPNNM,'|',1,3) -1) HPNNM2 
				 		          , SUBSTR(HPNNM, INSTR(HPNNM,'|',1,4) + 1) HPNNM3 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(HPN_TPC,'|') AS HPN 
				 		              , SYS_CONNECT_BY_PATH(HPN_TPNM,'|') AS HPNNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_HPN 
				 		         WHERE LVL_NO='3' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_HPN_TPC IS NULL 
				 		         CONNECT BY PRIOR HPN_TPC = UP_HPN_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, EMRK AS ( 
				 		     SELECT SUBSTR(EMRK, INSTR(EMRK,'|',1,2) + 1, INSTR(EMRK,'|',1,3) - INSTR(EMRK,'|',1,2) -1) EMRK1 
				 		          , SUBSTR(EMRK, INSTR(EMRK,'|',1,3) + 1) EMRK 
				 		          , SUBSTR(EMRKNM, INSTR(EMRKNM,'|',1,2) + 1, INSTR(EMRKNM,'|',1,3) - INSTR(EMRKNM,'|',1,2) -1) EMRKNM1 
				 		          , SUBSTR(EMRKNM, INSTR(EMRKNM,'|',1,3) + 1) EMRKNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(EMRK_TPC,'|') AS EMRK 
				 		              , SYS_CONNECT_BY_PATH(EMRK_TPNM,'|') AS EMRKNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_EMRK 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_EMRK_TPC IS NULL 
				 		         CONNECT BY PRIOR EMRK_TPC = UP_EMRK_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		) 
				 		, CTL AS ( 
				 		     SELECT SUBSTR(CTL, INSTR(CTL,'|',1,2) + 1, INSTR(CTL,'|',1,3) - INSTR(CTL,'|',1,2) -1) CTL1 
				 		          , SUBSTR(CTL, INSTR(CTL,'|',1,3) + 1) CTL 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,2) + 1, INSTR(CTLNM,'|',1,3) - INSTR(CTLNM,'|',1,2) -1) CTLNM1 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,3) + 1) CTLNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(RK_CTL_TPC,'|') AS CTL 
				 		              , SYS_CONNECT_BY_PATH(CTL_TPNM,'|') AS CTLNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_CTL 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_RK_CTL_TPC IS NULL 
				 		         CONNECT BY PRIOR RK_CTL_TPC = UP_RK_CTL_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		)
                        , BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C, B.UP_BRC ,                            
						       B.BRNM,
						       B.BRC,
                               A.OPRK_RKP_ID
						      FROM TB_OR_RH_BRC A                              
						       LEFT JOIN TB_OR_OM_ORGZ B                             
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC                                       
						        AND B.UYN = 'Y'
                             GROUP BY A.GRP_ORG_C,B.UP_BRC,B.BRNM,B.BRC,A.OPRK_RKP_ID
						)
				  		SELECT A.OPRK_RKP_ID RKP_ID, A.RK_ISC_CNTN 
				 		     , A.KRK_YN 
				 		     , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKP_TPC' AND GRP_ORG_C = A.GRP_ORG_C AND A.RKP_TPC = IDVDC_VAL) AS RKP_TPC_NM 
				 		     , B.PRSS, B.PRSSNM1, B.PRSSNM2, B.PRSSNM3, B.PRSSNM4 
				 		     , C.CAS, C.CASNM1, C.CASNM2, C.CASNM3 
				 		     , D.IFN, D.IFNNM1, D.IFNNM2 
				 		     , E.HPN, E.HPNNM1, E.HPNNM2, E.HPNNM3 
				 		     , F.EMRK, F.EMRKNM1, F.EMRKNM2 
				 		     , G.RK_CP_CNTN CP_CNTN 
				 		     , H.CTLNM1, H.CTLNM2 
				  		     , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN J.BRNM
				  		     		END BRNM
				  		     , CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN K.BRNM
				  		     		END DEPT_BRNM
				  		     , I.INTG_IDVD_CNM RPT_FQ_DSCNM
				  		     , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') REG_DT
				  		     , TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') CHG_DT
				 		FROM TB_OR_RM_RKP A 
				 		   , PRSS B 
				 		   , CAS C 
				 		   , IFN D 
				 		   , HPN E 
				 		   , EMRK F 
				 		   , TB_OR_RH_CTL_SCF G 
				 		   , CTL H 
				 		   , TB_OR_OM_CODE I 
				 		   , BRNM J
                           , TB_OR_OM_ORGZ K
                           , TB_OR_RH_REL_KRI L
		 			  WHERE A.GRP_ORG_C = B.GRP_ORG_C 
				 		AND A.BSN_PRSS_C = B.PRSS 
				 		AND A.GRP_ORG_C = C.GRP_ORG_C 
				 		AND A.CAS_TPC = C.CAS 
				 		AND A.GRP_ORG_C = D.GRP_ORG_C 
				 		AND A.IFN_TPC = D.IFN 
				 		AND A.GRP_ORG_C = E.GRP_ORG_C 
				 		AND A.HPN_TPC = E.HPN 
				 		AND A.GRP_ORG_C = F.GRP_ORG_C(+) 
				 		AND A.EMRK_TPC = F.EMRK(+) 
				 		AND A.GRP_ORG_C = G.GRP_ORG_C 
				 		AND A.OPRK_RKP_ID = G.OPRK_RKP_ID 
				 		AND G.RK_CTL_SQNO = '1' 
				 		AND G.GRP_ORG_C = H.GRP_ORG_C 
				 		AND G.RK_CTL_TPC = H.CTL 
				 		AND A.OPRK_RKP_ID = J.OPRK_RKP_ID(+)
				 		AND I.INTG_GRP_C(+) = 'RPT_FQ_DSC'
						AND I.IDVDC_VAL(+) = A.RPT_FQ_DSC
 						AND J.UP_BRC = K.BRC (+)
				 		AND A.GRP_ORG_C = #grp_org_c# 
				 		AND A.OPRK_RKP_ID = L.OPRK_RKP_ID
				 		AND L.OPRK_RKI_ID = #rki_id#
					</data>
				</sql>
				<sql id="sql18" name = "SQL18">
					<data id="data1" name = "">
						ORDER BY A.OPRK_RKP_ID  
						) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	<process id="ORRC012804" name="연관 RCSA 등록" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rki_id" name="KRI아이디" parmid="rki_id" attr="A" default_value=""/>
		<parm id="rkp_id" name="리스크아이디" parmid="rkp_id" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="연관 rcsa 제거" type="S" mode="delete" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 DELETE FROM TB_OR_RH_REL_KRI WHERE OPRK_RKI_ID = #rki_id#              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
		<group id="grp01" name="grp01" type="M" multiid="rkp_id">
			<multivalue id="rkp_id" name="rkp_id" multiid="rkp_id"/>
			<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
			<unit id="unit99" name="연관 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RH_REL_KRI
						     (   GRP_ORG_C                     
						     ,   OPRK_RKP_ID                       
						     ,   OPRK_RKI_ID               
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#rkp_id#)    
						     ,   TRIM(#rki_id#)    
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC012901" name="중요리스크 선정목록 조회" forward="/rsa/ORRC0129" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="KRK_SLT_BASCD" />
  		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="통합코드조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT NVL(IDVDC_VAL,' ') INTGC, NVL(INTG_IDVD_CNM,' ') INTG_CNM  
						   FROM TB_OR_OM_CODE  
						  WHERE GRP_ORG_C = #grp_org_c#  
						    AND INTG_GRP_C = TRIM(#intg_grp_c#)  
						    AND C_UYN = 'Y'
						    AND RMK_CNTN = TRIM('AUTO')  
						  ORDER BY SORT_SQ   
					</data>
				</sql>
				
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group> 
	</process>
	
	
	<process id="ORRC012902" name="중요리스크 선정목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="bas_ym" name="RCSA평가일정" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="sch_rkp_fq" name="RCSA평가주기" parmid="sch_rkp_fq" attr="S" default_value=""/>
		<parm id="bsn_prss_c" name="업무프로세스코드" parmid="bsn_prss_c" attr="S" default_value=""/>
		<parm id="sch_krk_yn" name="중요리스크" parmid="sch_krk_yn" attr="S" default_value=""/>
		<parm id="sch_evl_obj_yn" name="평가대상" parmid="sch_evl_obj_yn" attr="S" default_value=""/>
		<parm id="sch_reg_st_dt" name="등록일자(부터)" parmid="sch_reg_st_dt" attr="S" default_value=""/>
		<parm id="sch_reg_ed_dt" name="등록일자(까지)" parmid="sch_reg_ed_dt" attr="S" default_value=""/>
		<parm id="sch_chg_st_dt" name="변경일자(부터)" parmid="sch_chg_st_dt" attr="S" default_value=""/>
		<parm id="sch_chg_ed_dt" name="변경일자(까지)" parmid="sch_chg_ed_dt" attr="S" default_value=""/>
		<parm id="sch_brc" name="평가부서/팀" parmid="sch_brc" attr="S" default_value=""/>
		<parm id="rpk_id" name="리스크사례ID" parmid="rpk_id" attr="S" default_value=""/>
		<parm id="rk_isc_cntn" name="리스크사례" parmid="rk_isc_cntn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="중요리스크 선정목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
				      SELECT * 
				 		FROM ( 
				 		WITH 
				 		PRSS AS ( 
				 		    SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
				 		         , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
				 		         , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
				 		         , GRP_ORG_C 
				 		     FROM ( 
				 		     SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
				 		          , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
				 		          , GRP_ORG_C 
				 		     FROM TB_OR_OC_PRSS 
				 		     WHERE LVL_NO='4' 
				 		         AND VLD_YN='Y' 
				 		     START WITH UP_BSN_PRSS_C IS NULL 
				 		     CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
				 		     AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		    ) 
				 		) 
				 		, CTL AS ( 
				 		     SELECT SUBSTR(CTL, INSTR(CTL,'|',1,2) + 1, INSTR(CTL,'|',1,3) - INSTR(CTL,'|',1,2) -1) CTL1 
				 		          , SUBSTR(CTL, INSTR(CTL,'|',1,3) + 1) CTL 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,2) + 1, INSTR(CTLNM,'|',1,3) - INSTR(CTLNM,'|',1,2) -1) CTLNM1 
				 		          , SUBSTR(CTLNM, INSTR(CTLNM,'|',1,3) + 1) CTLNM2 
				 		          , GRP_ORG_C 
				 		     FROM ( 
				 		         SELECT SYS_CONNECT_BY_PATH(RK_CTL_TPC,'|') AS CTL 
				 		              , SYS_CONNECT_BY_PATH(CTL_TPNM,'|') AS CTLNM 
				 		              , GRP_ORG_C 
				 		         FROM TB_OR_OC_CTL 
				 		         WHERE LVL_NO='2' 
				 		         AND VLD_YN='Y' 
				 		         START WITH UP_RK_CTL_TPC IS NULL 
				 		         CONNECT BY PRIOR RK_CTL_TPC = UP_RK_CTL_TPC 
				 		        AND PRIOR GRP_ORG_C = GRP_ORG_C 
				 		     ) 
				 		)
                        , BRNM AS ( 														
						     SELECT                                                     
						       A.GRP_ORG_C, B.UP_BRC ,                            
						       B.BRNM,
						       B.BRC,
                               A.OPRK_RKP_ID
						      FROM TB_OR_RH_BRC A                              
						       LEFT JOIN TB_OR_OM_ORGZ B                             
						         ON A.GRP_ORG_C = B.GRP_ORG_C                           
						        AND A.BRC = B.BRC                                       
						        AND B.UYN = 'Y'
                             GROUP BY A.GRP_ORG_C,B.UP_BRC,B.BRNM,B.BRC,A.OPRK_RKP_ID
						)
				  		SELECT
				  		       CASE WHEN A.RKP_TPC ='01' THEN '전사'
				  		    		WHEN A.RKP_TPC ='03' THEN '영업점'
				  		     		WHEN A.RKP_TPC ='02' THEN '본부부서'
				  		     		END HOFC_BIZO_DSNM 
				  			 , A.OPRK_RKP_ID RKP_ID
                             , B.PRSSNM1
                             , B.PRSSNM2
                             , B.PRSSNM3
                             , B.PRSSNM4 
                             , B.PRSS
                             , A.RK_ISC_CNTN 
                             , C.RK_CP_CNTN CP_CNTN 
                             , A.KRK_YN
                             , (SELECT '●' FROM TB_OR_RH_KRK_SLT WHERE OPRK_RKP_ID = A.OPRK_RKP_ID AND KRK_SLT_BASCD ='03') KRK_SLT_BASCD03
                             , (SELECT '●' FROM TB_OR_RH_KRK_SLT WHERE OPRK_RKP_ID = A.OPRK_RKP_ID AND KRK_SLT_BASCD ='04') KRK_SLT_BASCD04
                             , (SELECT '●' FROM TB_OR_RH_KRK_SLT WHERE OPRK_RKP_ID = A.OPRK_RKP_ID AND KRK_SLT_BASCD ='05') KRK_SLT_BASCD05
                             , (SELECT '●' FROM TB_OR_RH_KRK_SLT WHERE OPRK_RKP_ID = A.OPRK_RKP_ID AND KRK_SLT_BASCD ='08') KRK_SLT_BASCD08
                             , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') REG_DT
				  		     , TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') CHG_DT
				 		FROM TB_OR_RM_RKP A 
				 		   , PRSS B 
				 		   , TB_OR_RH_CTL_SCF C 
				 		   , CTL D 
				 		   , TB_OR_OM_CODE E 
				 		   , BRNM F
                           , TB_OR_OM_ORGZ G
		 			  WHERE A.GRP_ORG_C = B.GRP_ORG_C 
				 		AND A.BSN_PRSS_C = B.PRSS 
				 		AND A.GRP_ORG_C = C.GRP_ORG_C 
				 		AND A.OPRK_RKP_ID = C.OPRK_RKP_ID 
				 		AND C.RK_CTL_SQNO = '1' 
				 		AND C.GRP_ORG_C = D.GRP_ORG_C 
				 		AND C.RK_CTL_TPC = D.CTL 
				 		AND A.OPRK_RKP_ID = F.OPRK_RKP_ID(+)
				 		AND E.INTG_GRP_C(+) = 'RPT_FQ_DSC'
						AND E.IDVDC_VAL(+) = A.RPT_FQ_DSC
 						AND F.UP_BRC = G.BRC (+)
				 		AND A.GRP_ORG_C = TRIM(#grp_org_c#)                                   
				
					</data>
				</sql>
				<sql id="sql1" name = "SQL1">
					<condition id="cond1" name="조건1" comparison="ne" value="" variable="#sch_rkp_fq#" />
					<data id="data1" name = "">
			    		AND A.RPT_FQ_DSC = TRIM(#sch_rkp_fq#) 
					</data>
				</sql>
				<sql id="sql2" name = "SQL2">
					<condition id="cond2" name="조건2" comparison="ne" value="" variable="#bsn_prss_c#" />
					<data id="data1" name = "">
			    		AND A.BSN_PRSS_C = TRIM(#bsn_prss_c#)                
					</data>
				</sql>
				<sql id="sql3" name = "SQL3">
					<condition id="cond3" name="조건3" comparison="ne" value="" variable="#sch_krk_yn#" />
					<data id="data1" name = "">
			    		  AND A.KRK_YN = TRIM(#sch_krk_yn#)
					</data>
				</sql>
				<sql id="sql4" name = "SQL4">
					<condition id="cond4" name="조건4" comparison="ne" value="" variable="#sch_evl_obj_yn#" />
					<data id="data1" name = "">
			    		  AND H.EVL_OBJ_YN = TRIM(#sch_evl_obj_yn#)
					</data>
				</sql>
				<sql id="sql5" name = "SQL5">
					<condition id="cond5" name="조건5" comparison="ne" value="" variable="#sch_brc#" />
					<data id="data1" name = "">
			    		  AND G.BRC = TRIM(#sch_brc#) 
					</data>
				</sql>
				<sql id="sql16" name = "SQL16">
					<condition id="cond6" name="조건6" comparison="ne" value="" variable="#sch_reg_st_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') &gt;= REPLACE(TRIM(#sch_reg_st_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql17" name = "SQL17">
					<condition id="cond7" name="조건7" comparison="ne" value="" variable="#sch_reg_ed_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') &lt;= REPLACE(TRIM(#sch_reg_ed_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql18" name = "SQL18">
					<condition id="cond8" name="조건8" comparison="ne" value="" variable="#sch_chg_st_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') &gt;= REPLACE(TRIM(#sch_chg_st_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql19" name = "SQL19">
					<condition id="cond9" name="조건9" comparison="ne" value="" variable="#sch_chg_ed_dt#" />
					<data id="data1" name = "">
						AND TO_CHAR(A.LSCHG_DTM,'YYYYMMDD') &lt;= REPLACE(TRIM(#sch_chg_ed_dt#),'-','')  
					</data>
				</sql>
				<sql id="sql20" name = "SQL20">
					<condition id="cond10" name="조건10" comparison="ne" value="" variable="#rpk_id#" />
					<data id="data1" name = "">
			    		  AND  A.OPRK_RKP_ID LIKE '%%'||TRIM(#rpk_id#)||'%%'                       
					</data>
				</sql>
				<sql id="sql21" name = "SQL21">
					<condition id="cond11" name="조건11" comparison="ne" value="" variable="#rk_isc_cntn#" />
					<data id="data1" name = "">
			    		  AND     A.RK_ISC_CNTN LIKE '%%'||TRIM(#rk_isc_cntn#)||'%%'  
					</data>
				</sql>
				<sql>
					<data>
					ORDER BY A.OPRK_RKP_ID
						)
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORRC013001" name="디지털비대면리스크보고서" forward="/rsa/ORRC0130" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC013002" name="디지털비대면리스크보고서 목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="디지털비대면리스크보고서 목록 조회" type="S" mode="select">
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
					 SELECT A.RPT_DSC
					       ,CASE WHEN A.RPT_DSC = 1 THEN '디지털 리스크'
					             WHEN A.RPT_DSC = 2 THEN '비대면 리스크'
					         END RPT_DSNM
					       ,A.RPT_SQNO
					       ,A.RPT_TINM
					       ,TO_CHAR(A.FIR_INP_DTM,'YYYY-MM-DD') REG_DT
					  FROM TB_OR_RM_RPT A
					ORDER BY A.RPT_SQNO DESC
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORRC013101" name="디지털비대면리스크보고서" forward="/rsa/ORRC0131" forwardng="/comm/errorPage" resource="rsa" grid_process_id="">
	</process>
	
	<process id="ORRC013103" name="리스크대응방안결재처리" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="rsa" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rpt_tinm" name="보고서제목" parmid="rpt_tinm" attr="A" default_value=""/>
		<parm id="rpt_cntn" name="보고서내용" parmid="rpt_cntn" attr="A" default_value=""/>
		<parm id="rpt_dsc" name="보고서구분" parmid="sch_rpt_dsc" attr="A" default_value=""/>

		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="MAX일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  MAX(RPT_SQNO)+1 RPT_SQNO   
						 FROM    TB_OR_RM_RPT                 
					</data>
				</sql>
				<result id="result" name="rpt_sqno" attrname="rpt_sqno" type="single_string"/>
			</unit>
			<unit id="unit99" name="보고서 기본 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_RM_RPT 
						     (   GRP_ORG_C
						     ,	 RPT_DSC                        
						     ,   RPT_SQNO                     
						     ,   RPT_TINM                          
						     ,   RPT_CNTN           
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#rpt_dsc#)        
						     ,   TRIM(#rpt_sqno#)    
						     ,   TRIM(#rpt_tinm#)      
						     ,   TRIM(#rpt_cntn#)                         
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                             
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	
</com_servlet>