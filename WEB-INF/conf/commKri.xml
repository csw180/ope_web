<?xml version="1.0" encoding="utf-8"?>
<com_servlet id="kri" name="ORMS KRI" commkind="kri" >
	<lib id="lib1" name="라이브러리정의" value="com.shbank.orms.execproc"/>
	
	<process id="ORKR010101" name="RI풀 관리 목록 조회" forward="/kri/ORKR0101" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
	</process>
		
	<process id="ORKR010102" name="RI풀 관리 목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<parm id="sch_rkinm" name="RI명" parmid="sch_rkinm" attr="S" default_value=""/>
		<parm id="sch_jrdt_brc" name="지표소관부서코드" parmid="sch_jrdt_brc" attr="S" default_value=""/>
     	<parm id="sch_kri_yn" name="KRI여부" parmid="sch_kri_yn" attr="S" default_value=""/>
     	<parm id="sch_rki_attr_c" name="KRI속성" parmid="sch_rki_attr_c" attr="S" default_value=""/>
     	<parm id="sch_com_col_psb_yn" name="전산수집여부" parmid="sch_com_col_psb_yn" attr="S" default_value=""/>
 		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크풀 목록 조회" type="S">
 				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
		 				SELECT 
		 					   A.OPRK_RKI_ID RKI_ID,D.BRNM
						   	   , MAX(A.OPRK_RKINM) RKINM                      
						   	   , MAX(A.RKI_OBV_CNTN) RKI_OBV_CNTN                     
						   	   , MAX(A.RKI_DEF_CNTN) RKI_DEF_CNTN                     
						       , MAX(A.IDX_FML_CNTN) IDX_FML_CNTN                     
						       , MAX(A.KRI_YN) KRI_YN                           
						       , MAX((SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'KRI_LMT_DSC' AND GRP_ORG_C = A.GRP_ORG_C AND A.KRI_LMT_DSC = IDVDC_VAL)) AS KRI_LMT_NM                       
						       , MAX((SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_UNT_C' AND GRP_ORG_C = A.GRP_ORG_C AND A.RKI_UNT_C = IDVDC_VAL)) AS KRI_UNT_NM                      
						       , MAX((SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RPT_FQ_DSC' AND GRP_ORG_C = A.GRP_ORG_C AND A.RPT_FQ_DSC = IDVDC_VAL)) AS COL_FQ_NM                           
						       , MAX((SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_LVL_C' AND GRP_ORG_C = A.GRP_ORG_C AND A.RKI_LVL_C = IDVDC_VAL)) AS RKI_LVL_NM                           
						       , TO_CHAR(MAX(A.LSCHG_DTM), 'YYYYMMDD') AS LST_DT      
						       , MAX(A.COM_COL_PSB_YN) COM_COL_PSB_YN      
						       , DECODE(MAX(A.COM_COL_PSB_YN), 'Y', '전산', '수기') AS COM_COL_PSB_NM      
						       , LISTAGG(D.BRNM,', ') WITHIN GROUP (ORDER BY D.BRNM) BRNM    
						       , MAX(A.RKI_LVL_C) RKI_LVL_C   
						  FROM TB_OR_KM_RKI A            
				     LEFT JOIN TB_OR_KH_BRC C    
						    ON A.GRP_ORG_C = C.GRP_ORG_C      
						   AND A.OPRK_RKI_ID = C.OPRK_RKI_ID  
				     LEFT JOIN TB_OR_OM_ORGZ D   
						    ON C.GRP_ORG_C = D.GRP_ORG_C      
						   AND C.BRC = D.BRC                  
						 WHERE 1=1                              
						   AND A.VLD_YN = 'Y'                   
 					</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="grp_org_c != null" variable="#grp_org_c#" comparison="ne" value="" />
					<data id="data11" name="">
						   AND A.GRP_ORG_C  = TRIM(#grp_org_c#) 
					</data>
				</sql>
				<sql id="sql13" name="SQL13">
					<condition id="cond111" name="sch_rkinm != null" variable="#sch_rkinm#" comparison="ne" value="" />
					<data id="data11" name="">
						   AND A.OPRK_RKINM LIKE '%' || TRIM(#sch_rkinm#) || '%' 
				   	</data>
				</sql>
				<sql id="sql14" name="SQL14">
					<condition id="cond111" name="sch_kri_yn != null" variable="#sch_kri_yn#" comparison="ne" value="" />
					<data id="data11" name="">
						   AND A.KRI_YN = TRIM(#sch_kri_yn#) 
					</data>
				</sql>
				<sql id="sql15" name="SQL15">
					<condition id="cond111" name="sch_jrdt_brc != null" variable="#sch_jrdt_brc#" comparison="ne" value="" />
					<data id="data11" name="">
						   AND C.BRC = TRIM(#sch_jrdt_brc#)
					</data>
				</sql>
				<sql id="sql16" name="SQL16">
					<condition id="cond111" name="sch_rki_lvl_c != null" variable="#sch_rki_lvl_c#" comparison="ne" value="" />
					<data id="data11" name="">
						   AND A.RKI_LVL_C = TRIM(#sch_rki_lvl_c#) 
					</data>
				</sql>
				<sql id="sql17" name="SQL17">
					<condition id="cond111" name="sch_com_col_psb_yn != null" variable="#sch_com_col_psb_yn#" comparison="ne" value="" />
					<data id="data11" name="">
						   AND A.COM_COL_PSB_YN = TRIM(#sch_com_col_psb_yn#) 
					</data>
				</sql>
				<sql id="sql18" name="SQL18">
					<data id="data11" name="">
					  GROUP BY A.GRP_ORG_C, A.OPRK_RKI_ID ,D.BRNM	
					  ORDER BY A.OPRK_RKI_ID
					</data>
				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010103" name="RI풀삭제" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="hd_rki_id" name="KRI지표ID" parmid="hd_rki_id" attr="A" default_value=""/>  <!--   attr="S"  : 싱글 ,attr="A" 멀티 -->
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="RI풀삭제" type="M" mode="update" multiid="hd_rki_id">
				<multivalue id="hd_rki_id" name="KRI지표ID" multiid="hd_rki_id"/>
				<sql id="sql11" name="SQL11"> 
 					<data id="data111" name="">
						UPDATE TB_OR_KM_RKI
						   SET VLD_ED_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
							   , VLD_YN = 'N'
							   , LSCHG_DTM = SYSDATE
							   , LS_WKR_ENO = TRIM(#userid#)
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   AND OPRK_RKI_ID = TRIM(#hd_rki_id#)
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010201" name="RI상세 조회" forward="/kri/ORKR0102" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rki_id" name="KRI지표ID" parmid="rki_id" attr="S" default_value=""/> 
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/> 
		<parm id="hd_rki_prg_stsc" name="평가진행상태코드" parmid="hd_rki_prg_stsc" attr="S" default_value=""/> 
		<group id="grp01" name="grp01" type="S">
			<unit id="unit10" name="RI상세 조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT 
							   A.OPRK_RKI_ID RKI_ID
							   , A.OPRK_RKINM RKINM
							   , A.RKI_ATTR_C
							   , E1.INTG_IDVD_CNM RKI_ATTR_NM
							   , A.RKI_LVL_C
							   , E2.INTG_IDVD_CNM RKI_LVL_NM
							   , A.RKI_OBV_CNTN
							   , A.RKI_DEF_CNTN
							   , A.IDX_FML_CNTN RKI_FML_CNTN
							   , A.RKI_UNT_C
							   , E3.INTG_IDVD_CNM RKI_UNT
							   , A.RPT_FQ_DSC AS COL_FQ
							   , E4.INTG_IDVD_CNM COL_FQ_NM
							   , A.KRI_LMT_DSC
							   , E6.INTG_IDVD_CNM KRI_LMT_NM
							   , A.COM_COL_PSB_YN, A.KRI_YN
							   , A.GU_DRTN_RER_DSC
							   , E7.INTG_IDVD_CNM GU_DRTN_RER_NM
							   , '' AS ACT_PLN_GRDC
				      		   , G.REL_TBLNM
				      		   , G.TBL_EXPL
				      		   , G.XTR_CND_SQLS
				      		   , H.OPRK_RKP_ID
				      		   , H.RK_ISC_CNTN
				      		   , A.PSN_KRI_YN
                               , B.BRC AS HD_APL_BRC 
 					           , (SELECT BRNM FROM TB_OR_OM_ORGZ WHERE BRC = B.BRC ) AS BRC_TD				      		   
 					</data>
 				</sql>
 				<sql id="sql12" name="SQL12">
 					<condition id="cond111" name="평가진행상태코드" variable="#hd_rki_prg_stsc#" comparison="eq" value="03" />
 					<data id="data111" name="">
		         		  FROM TB_OR_KN_RKIMM A                             
 					</data>
 				</sql>
 				<sql id="sql13" name="SQL13">
 					<condition id="cond111" name="평가진행상태코드" variable="#hd_rki_prg_stsc#" comparison="ne" value="03" />
 					<data id="data111" name="">
		         		  FROM TB_OR_KM_RKI A                             
 					</data>
 				</sql>
 				<sql id="sql14" name="SQL14">
 					<data id="data111" name="">
				 	 LEFT JOIN TB_OR_OM_CODE E1                        
				   		    ON A.GRP_ORG_C = E1.GRP_ORG_C                           
				  		   AND A.RKI_ATTR_C = E1.IDVDC_VAL                          
				  		   AND E1.INTG_GRP_C = 'RKI_ATTR_C'                         
				  		   AND E1.C_UYN = 'Y'                                       
				 	 LEFT JOIN TB_OR_OM_CODE E2                        
						    ON A.GRP_ORG_C = E2.GRP_ORG_C                           
						   AND A.RKI_LVL_C = E2.IDVDC_VAL                           
						   AND E2.INTG_GRP_C = 'RKI_LVL_C'                          
						   AND E2.C_UYN = 'Y'                                       
					 LEFT JOIN TB_OR_OM_CODE E3                        
							ON A.GRP_ORG_C = E3.GRP_ORG_C                           
						   AND A.RKI_UNT_C = E3.IDVDC_VAL                           
						   AND E3.INTG_GRP_C = 'RKI_UNT_C'                          
						   AND E3.C_UYN = 'Y'                                       
					 LEFT JOIN TB_OR_OM_CODE E4                        
							ON A.GRP_ORG_C = E4.GRP_ORG_C                           
						   AND A.RPT_FQ_DSC = E4.IDVDC_VAL                              
						   AND E4.INTG_GRP_C = 'COL_FQ'                             
						   AND E4.C_UYN = 'Y'                                       
					 LEFT JOIN TB_OR_OM_CODE E5                        
							ON A.GRP_ORG_C = E5.GRP_ORG_C                           
						   AND A.RPT_FQ_DSC = E5.IDVDC_VAL                          
						   AND E5.INTG_GRP_C = 'RPT_FQ_DSC'                         
						   AND E5.C_UYN = 'Y'                                       
					 LEFT JOIN TB_OR_OM_CODE E6                        
							ON A.GRP_ORG_C = E6.GRP_ORG_C                           
						   AND A.KRI_LMT_DSC = E6.IDVDC_VAL                         
						   AND E6.INTG_GRP_C = 'KRI_LMT_DSC'                        
						   AND E6.C_UYN = 'Y'                                       
					 LEFT JOIN TB_OR_OM_CODE E7                        
							ON A.GRP_ORG_C = E7.GRP_ORG_C                           
						   AND A.GU_DRTN_RER_DSC = E7.IDVDC_VAL                     
						   AND E7.INTG_GRP_C = 'GU_DRTN_RER_DSC'                    
						   AND E7.C_UYN = 'Y'                                       
					 LEFT JOIN ( SELECT GRP_ORG_C, OPRK_RKI_ID
					 				    , MAX(REL_TBLNM) REL_TBLNM
					 				    , MAX(TBL_EXPL) TBL_EXPL
					 				    , MAX(XTR_CND_SQLS) XTR_CND_SQLS         
				            	   FROM TB_OR_KH_INF                      
				               GROUP BY GRP_ORG_C, OPRK_RKI_ID
				               ) G             
							ON A.GRP_ORG_C = G.GRP_ORG_C                            
						   AND A.OPRK_RKI_ID = G.OPRK_RKI_ID
					  LEFT JOIN (SELECT BB.GRP_ORG_C    GRP_ORG_C 
					   				   ,BB.OPRK_RKP_ID  OPRK_RKP_ID 
					                   ,BB.RK_ISC_CNTN  RK_ISC_CNTN
					                   ,AA.OPRK_RKI_ID  OPRK_RKI_ID
					             FROM TB_OR_RH_REL_KRI AA
					                 ,TB_OR_RM_RKP BB
					            WHERE AA.GRP_ORG_C = BB.GRP_ORG_C
					              AND AA.OPRK_RKP_ID = BB.OPRK_RKP_ID
					           ) H
					       ON A.GRP_ORG_C = H.GRP_ORG_C
					      AND A.OPRK_RKI_ID = H.OPRK_RKI_ID    
					 LEFT JOIN TB_OR_KH_BRC B 
                          ON A.GRP_ORG_C = B.GRP_ORG_C       
                          AND A.OPRK_RKI_ID = B.OPRK_RKI_ID
						 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 								    	
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)
			  		</data>
 				</sql> 		
 				<sql id="sql15" name="SQL15">
 					<condition id="cond111" name="평가진행상태코드" variable="#hd_rki_prg_stsc#" comparison="eq" value="03" />
 					<data id="data111" name="">						    	
						   AND A.BAS_YM = TRIM(#bas_ym#) 								    	   
					</data>
 				</sql>
 				<sql id="sql16" name="SQL16">
 					<data id="data111" name="">
			  			   AND A.VLD_YN = 'Y'
			  		</data>
 				</sql> 	
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit15" name="관련 Risk Profile" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT * FROM (
						       WITH 
						            PRSS AS ( 
						                SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
						                     , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
						                     , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
						                     , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
						                     , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
						                     , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
						                     , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
						                     , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
						                     , GRP_ORG_C 
						                 FROM ( 
						                 SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
						                      , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
						                      , GRP_ORG_C 
						                 FROM TB_OR_OC_PRSS 
						                 WHERE LVL_NO='4' 
						                     AND VLD_YN='Y' 
						                 START WITH UP_BSN_PRSS_C IS NULL 
						                 CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
						                 AND PRIOR GRP_ORG_C = GRP_ORG_C 
						                ) 
						            )
						            , DEPT_BRNM AS ( 														
						                 SELECT                                                     
						                   A.GRP_ORG_C
						                 , B.UP_BRC 
						                 , C.BRNM
						                 , B.BRC
						                 , A.OPRK_RKP_ID
						                  FROM TB_OR_RH_BRC A                              
						                LEFT JOIN TB_OR_OM_ORGZ B
						                     ON A.GRP_ORG_C = B.GRP_ORG_C                           
						                    AND A.BRC = B.BRC
						                    AND B.UYN = 'Y'
						                LEFT JOIN TB_OR_OM_ORGZ C
						                     ON B.UP_BRC = C.BRC
						                    AND C.UYN = 'Y'
						                  GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC,A.OPRK_RKP_ID
						            )
						             SELECT  
						                   A.OPRK_RKP_ID                                                  
						                 , CASE WHEN A.RKP_TPC ='01' THEN '전사'
						                        WHEN A.RKP_TPC ='03' THEN '영업점'
						                        WHEN A.RKP_TPC ='02' THEN C.BRNM
						                        END BRNM
						                 , B.BRNM TEAM_NM
						                 , D.PRSSNM1
						                 , D.PRSSNM2
						                 , D.PRSSNM3
						                 , D.PRSSNM4
						                 , A.RK_ISC_CNTN
						                 , E.RK_CP_CNTN CP_CNTN                                         
						             FROM    TB_OR_RM_RKP        A
						                 ,   TB_OR_OM_ORGZ       B
						                 ,   DEPT_BRNM           C
						                 ,   PRSS                D
						                 ,   TB_OR_RH_CTL_SCF    E
						                 ,   TB_OR_RH_REL_KRI    F 
						             WHERE A.OPRK_RKP_ID    = E.OPRK_RKP_ID
						               AND A.OPRK_RKP_ID(+) = F.OPRK_RKP_ID 
						               AND A.OPRK_RKP_ID = C.OPRK_RKP_ID (+)
						               AND (
						                    (B.BRC = C.BRC AND B.HOFC_BIZO_DSC = '02') 
						                     OR 
						                    (B.UP_BRC = C.BRC AND B.HOFC_BIZO_DSC = '03')
						                   )
						               AND A.BSN_PRSS_C = D.PRSS4
						               AND F.OPRK_RKI_ID = 'H-KRI-129' /*#oprk_rki_id#*/
						          )
			   		</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	

	<process id="ORKR010202" name="리스크정보항목내역" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/> 
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크정보항목내역" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT 
							     A.RK_HDNG_NO	/* 리스크항목번호 */
							   , A.REL_TBLNM	/* 관련테이블 */
							   , A.CLMN_LOGLNM	/* 컬럼논리명 */
							   , A.CLMN_PHNM	/* 컬럼물리명 */
							   , A.CLMN_MRK_CFC /* 컬럼표시분류코드 */
							   , A.DEPT_CNF_YN	/* 부서확인여부 */
							   , NVL(A.AMN_ORGZ_YN, 'N') AS AMN_ORGZ_YN	/* 관리조직여부 */
							   , A.CLMN_EXPL_CNTN AS CLMN_EXPL	/* 컬럼설명내용 */
						  FROM TB_OR_KH_HDNG A 
						 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#) 
					  ORDER BY RK_HDNG_NO
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010203" name="관련리스크 사례" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/> 
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크정보항목내역" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT * FROM (
						       WITH 
						            PRSS AS ( 
						                SELECT SUBSTR(PRSS, INSTR(PRSS,'|',1,2) + 1, INSTR(PRSS,'|',1,3) - INSTR(PRSS,'|',1,2) -1) PRSS1 
						                     , SUBSTR(PRSS, INSTR(PRSS,'|',1,3) + 1, INSTR(PRSS,'|',1,4) - INSTR(PRSS,'|',1,3) -1) PRSS2 
						                     , SUBSTR(PRSS, INSTR(PRSS,'|',1,4) + 1, INSTR(PRSS,'|',1,5) - INSTR(PRSS,'|',1,4) -1) PRSS3 
						                     , SUBSTR(PRSS, INSTR(PRSS,'|',1,5) + 1) PRSS4 
						                     , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,2) + 1, INSTR(PRSSNM,'|',1,3) - INSTR(PRSSNM,'|',1,2) -1) PRSSNM1 
						                     , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,3) + 1, INSTR(PRSSNM,'|',1,4) - INSTR(PRSSNM,'|',1,3) -1) PRSSNM2 
						                     , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,4) + 1, INSTR(PRSSNM,'|',1,5) - INSTR(PRSSNM,'|',1,4) -1) PRSSNM3 
						                     , SUBSTR(PRSSNM, INSTR(PRSSNM,'|',1,5) + 1) PRSSNM4 
						                     , GRP_ORG_C 
						                 FROM ( 
						                 SELECT SYS_CONNECT_BY_PATH(BSN_PRSS_C,'|') AS PRSS 
						                      , SYS_CONNECT_BY_PATH(BSN_PRSNM,'|') AS PRSSNM 
						                      , GRP_ORG_C 
						                 FROM TB_OR_OC_PRSS 
						                 WHERE LVL_NO='4' 
						                     AND VLD_YN='Y' 
						                 START WITH UP_BSN_PRSS_C IS NULL 
						                 CONNECT BY PRIOR BSN_PRSS_C = UP_BSN_PRSS_C 
						                 AND PRIOR GRP_ORG_C = GRP_ORG_C 
						                ) 
						            )
						            , DEPT_BRNM AS ( 														
						                 SELECT                                                     
						                   A.GRP_ORG_C
						                 , B.UP_BRC 
						                 , C.BRNM
						                 , B.BRC
						                 , A.OPRK_RKP_ID
						                  FROM TB_OR_RH_BRC A                              
						                LEFT JOIN TB_OR_OM_ORGZ B
						                     ON A.GRP_ORG_C = B.GRP_ORG_C                           
						                    AND A.BRC = B.BRC
						                    AND B.UYN = 'Y'
						                LEFT JOIN TB_OR_OM_ORGZ C
						                     ON B.UP_BRC = C.BRC
						                    AND C.UYN = 'Y'
						                  GROUP BY A.GRP_ORG_C,B.UP_BRC,C.BRNM,B.BRC,A.OPRK_RKP_ID
						            )
						             SELECT  
						                   A.OPRK_RKP_ID                                                  
						                 , CASE WHEN A.RKP_TPC ='01' THEN '전사'
						                        WHEN A.RKP_TPC ='03' THEN '영업점'
						                        WHEN A.RKP_TPC ='02' THEN C.BRNM
						                        END BRNM
						                 , B.BRNM TEAM_NM
						                 , D.PRSSNM1
						                 , D.PRSSNM2
						                 , D.PRSSNM3
						                 , D.PRSSNM4
						                 , A.RK_ISC_CNTN
						                 , E.RK_CP_CNTN CP_CNTN                                         
						             FROM    TB_OR_RM_RKP        A
						                 ,   TB_OR_OM_ORGZ       B
						                 ,   DEPT_BRNM           C
						                 ,   PRSS                D
						                 ,   TB_OR_RH_CTL_SCF    E
						                 ,   TB_OR_RH_REL_KRI    F 
						             WHERE A.OPRK_RKP_ID    = E.OPRK_RKP_ID
						               AND A.OPRK_RKP_ID(+) = F.OPRK_RKP_ID 
						               AND A.OPRK_RKP_ID = C.OPRK_RKP_ID (+)
						               AND (
						                    (B.BRC = C.BRC AND B.HOFC_BIZO_DSC = '02') 
						                     OR 
						                    (B.UP_BRC = C.BRC AND B.HOFC_BIZO_DSC = '03')
						                   )
						               AND A.BSN_PRSS_C = D.PRSS4
						               AND F.OPRK_RKI_ID = 'H-KRI-129' /*#oprk_rki_id#*/
						          )
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
		
	
	<process id="ORKR010204" name="리스크지표 수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/> 
		<parm id="rkinm" name="리스크지표명" parmid="rkinm" attr="S" default_value=""/>
		<parm id="rki_attr_c" name="지표속성코드" parmid="rki_attr_c" attr="S" default_value=""/>  
		<parm id="rki_lvl_c" name="지표수준코드" parmid="rki_lvl_c" attr="S" default_value=""/> 
		<parm id="rki_obv_cntn" name="리스크지표목적" parmid="rki_obv_cntn" attr="S" default_value=""/> 
		<parm id="rki_def_cntn" name="리스크지표정의" parmid="rki_def_cntn" attr="S" default_value=""/> 
		<parm id="rki_fml_cntn" name="리스크지표산식" parmid="rki_fml_cntn" attr="S" default_value=""/>
		<parm id="rki_unt_c" name="단위코드" parmid="rki_unt_c" attr="S" default_value=""/>
		<parm id="col_fq" name="수집주기코드" parmid="col_fq" attr="S" default_value=""/>
		<parm id="kri_lmt_dsc" name="한도구분코드" parmid="kri_lmt_dsc" attr="S" default_value=""/>
		<parm id="com_col_psb_yn" name="전산수집여부" parmid="com_col_psb_yn" attr="S" default_value=""/>
		<parm id="kri_yn" name="KRI여부" parmid="kri_yn" attr="S" default_value=""/>
		<parm id="gu_drtn_rer_dsc" name="지표유형코드" parmid="gu_drtn_rer_dsc" attr="S" default_value=""/>
		<parm id="act_pln_grdc" name="조치계획등급코드" parmid="act_pln_grdc" attr="S" default_value=""/>
		<parm id="status" name="상태" parmid="status" attr="A" default_value=""/>
		<parm id="rk_hdng_no" name="리스크항목번호" parmid="rk_hdng_no" attr="A" default_value=""/>
		<parm id="rel_tblnm" name="테이블명" parmid="rel_tblnm" attr="S" default_value=""/>
		<parm id="xtr_cnd_sqls" name="추출조건SQL문" parmid="xtr_cnd_sqls" attr="S" default_value=""/>
		<parm id="clmn_loglnm" name="논리명" parmid="clmn_loglnm" attr="A" default_value=""/>
		<parm id="clmn_phnm" name="물리명" parmid="clmn_phnm" attr="A" default_value=""/>
		<parm id="clmn_mrk_cfc" name="데이터타입" parmid="clmn_mrk_cfc" attr="A" default_value=""/>
		<parm id="amn_orgz_yn" name="관리부서여부" parmid="amn_orgz_yn" attr="A" default_value=""/>
		<parm id="clmn_expl" name="설명" parmid="clmn_expl" attr="A" default_value=""/>
		<parm id="hd_apl_brc" name="적용사무소코드" parmid="hd_apl_brc" attr="S" default_value=""/>
		<parm id="rel_rkp" name="관련리스크풀아이디" parmid="rel_rkp" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="관련테이블 삭제" type="S" mode="update" multiid="" >
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						DELETE 
						  FROM TB_OR_KH_INF
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)     
						   AND OPRK_RKI_ID = TRIM(#rki_id#)      
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
 			<unit id="unit02" name="관련테이블 추가" type="S" mode="update" multiid="" >
 				<sql id="sql11" name="SQL11">
 					<condition id="con01" name="rel_tblnm != null" variable="#rel_tblnm#" comparison="ne" value=""/>
 					<data id="data111" name="">
 						INSERT 
 						  INTO TB_OR_KH_INF (                                 
							   GRP_ORG_C, OPRK_RKI_ID, REL_TBLNM, XTR_CND_SQLS       
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)    
						VALUES (                                                       
							   TRIM(#grp_org_c#), TRIM(#rki_id#), TRIM(#rel_tblnm#), TRIM(#xtr_cnd_sqls#)  				   
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#) )                                                       
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit03" name="관련테이블 상세내용 삭제" type="S" mode="update" multiid="" >
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						DELETE 
 						  FROM TB_OR_KH_HDNG   
					     WHERE GRP_ORG_C = TRIM(#grp_org_c#)          
					       AND OPRK_RKI_ID = TRIM(#rki_id#)              
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit> 				
 			<unit id="unit04" name="평가부서 삭제" type="S" mode="update" multiid="" >
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						DELETE 
 						  FROM TB_OR_KH_BRC    
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)          
					       AND OPRK_RKI_ID = TRIM(#rki_id#)                 
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
 			<unit id="unit05" name="관련테이블 상세내용 추가" type="M" mode="update" multiid="rk_hdng_no" >
 				<multivalue id="status" 		name="status" 		multiid="status"/>
				<multivalue id="rk_hdng_no" 	name="rk_hdng_no" 	multiid="rk_hdng_no"/>
				<multivalue id="clmn_loglnm" 	name="clmn_loglnm" 	multiid="clmn_loglnm"/>
				<multivalue id="clmn_phnm" 		name="clmn_phnm" 	multiid="clmn_phnm"/>
				<multivalue id="clmn_mrk_cfc" 	name="clmn_mrk_cfc" multiid="clmn_mrk_cfc"/>
				<multivalue id="amn_orgz_yn" 	name="amn_orgz_yn" 	multiid="amn_orgz_yn"/>
				<multivalue id="clmn_expl" 		name="clmn_expl" 	multiid="clmn_expl"/>
 				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						INSERT 
 						  INTO TB_OR_KH_HDNG (
						       GRP_ORG_C, OPRK_RKI_ID, RK_HDNG_NO, REL_TBLNM, CLMN_LOGLNM
						       , CLMN_PHNM, CLMN_MRK_CFC, AMN_ORGZ_YN, CLMN_EXPL_CNTN
						       , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)
						VALUES (
				               TRIM(#grp_org_c#), TRIM(#rki_id#), TRIM(#rk_hdng_no#), TRIM(#rel_tblnm#), TRIM(#clmn_loglnm#)  			  
				               , TRIM(#clmn_phnm#), TRIM(#clmn_mrk_cfc#), TRIM(#amn_orgz_yn#), TRIM(#clmn_expl#)                        
				               , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#) )                                                       
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit06" name="관련RCSA삭제" mode="update" type="S" multiid="">
				<sql id="sql11" name = "SQL11">
					<condition id="con01" name="rel_rkp" variable="#rel_rkp#" comparison="ne" value=""/>
					<data id="data111" name = "">
						 DELETE FROM TB_OR_RH_REL_KRI
						 WHERE OPRK_RKI_ID = TRIM(#rki_id#) 
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
			<!-- 20220921 RCSA관련 된건 KRI에서 처리하지 않기로 함 
				unit id="unit07" name="관련RCSA수정" mode="update" type="S" multiid="">
				<sql id="sql11" name = "SQL11">
					<condition id="con01" name="rel_rkp" variable="#rel_rkp#" comparison="ne" value=""/>
					<data id="data111" name = "">
						 INSERT INTO TB_OR_RH_REL_KRI (                                                           
						        GRP_ORG_C, OPRK_RKP_ID, OPRK_RKI_ID, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)   
						 VALUES (                                                                                         
						        TRIM(#grp_org_c#), TRIM(#rel_rkp#), TRIM(#rki_id#), SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)) 
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit-->
			<unit id="unit08" name="평가부서 추가" type="S" mode="update" multiid="hd_apl_brc" >
				<multivalue id="hd_apl_brc" name="hd_apl_brc" multiid="hd_apl_brc"/>
 				<sql id="sql11" name="SQL11">
					<condition id="con01" name="hd_apl_brc" variable="#hd_apl_brc#" comparison="ne" value=""/>
 					<data id="data111" name="">
 						INSERT 
 						  INTO TB_OR_KH_BRC (                       
							   GRP_ORG_C, OPRK_RKI_ID, BRC                         
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)  
						VALUES (                                                 
					           TRIM(#grp_org_c#), TRIM(#rki_id#), TRIM(#hd_apl_brc#)                        
					           , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#))                                                                                                            
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="리스크지표 수정" type="S" mode="update" multiid="" >
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						UPDATE TB_OR_KM_RKI                               
				           SET OPRK_RKI_ID  	= TRIM(#rki_id#)                   
				               , OPRK_RKINM  	= TRIM(#rkinm#)                     
							   , RKI_ATTR_C 	= TRIM(#rki_attr_c#)	                  
				               , RKI_LVL_C 		= TRIM(#rki_lvl_c#)	                  
				               , RKI_OBV_CNTN	= TRIM(#rki_obv_cntn#)           
				               , RKI_DEF_CNTN	= TRIM(#rki_def_cntn#)            
				               , IDX_FML_CNTN	= TRIM(#rki_fml_cntn#)            
				               , RKI_UNT_C 		= TRIM(#rki_unt_c#)	                  
				               , RPT_FQ_DSC 	= TRIM(#col_fq#)	                      
				               , KRI_LMT_DSC 	= TRIM(#kri_lmt_dsc#)	              
				               , COM_COL_PSB_YN = TRIM(#com_col_psb_yn#)	      
				               , KRI_YN 		= TRIM(#kri_yn#)                         
				               , GU_DRTN_RER_DSC= TRIM(#gu_drtn_rer_dsc#)	      
				               , VLD_YN 		= 'Y'                                    
				               , VLD_ST_DT 		= TRIM(TO_CHAR(SYSDATE, 'YYYYMMDD'))  
				               , VLD_ED_DT 		= '99991231'                        
				               , PSN_KRI_YN		= TRIM(#psn_kri_yn#)  
				               , FIR_INP_DTM 	= SYSDATE                           
				               , FIR_INPMN_ENO 	= TRIM(#userid#)                         
				               , LSCHG_DTM 		= SYSDATE                             
					           , LS_WKR_ENO 	= TRIM(#userid#)                            
				         WHERE OPRK_RKI_ID	= TRIM(#rki_id#)                             
				           AND GRP_ORG_C 	= TRIM(#grp_org_c#)
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010301" name="리스크 신규등록" forward="/kri/ORKR0103" forwardng="/comm/errorPage" resource="kri" grid_process_id="" />
	
	<process id="ORKR010302" name="리스크지표 신규등록" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" 	name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" 		name="사용자ID" 		sessionid="userid" object="String"/>
		<parm id="rki_id" 			name="리스크지표ID" 		parmid="rki_id" 		attr="S" default_value=""/> 
		<parm id="rkinm" 			name="리스크지표명" 		parmid="rkinm" 			attr="S" default_value=""/> 
		<parm id="rki_attr_c" 		name="지표속성코드" 		parmid="rki_attr_c" 	attr="S" default_value=""/> 
		<parm id="rki_lvl_c" 		name="지표수준코드" 		parmid="rki_lvl_c" 		attr="S" default_value=""/> 
		<parm id="rki_obv_cntn" 	name="리스크지표목적" 		parmid="rki_obv_cntn" 	attr="S" default_value=""/> 
		<parm id="rki_def_cntn" 	name="리스크지표정의" 		parmid="rki_def_cntn" 	attr="S" default_value=""/> 
		<parm id="rki_fml_cntn" 	name="리스크지표산식" 		parmid="rki_fml_cntn" 	attr="S" default_value=""/>
		<parm id="rki_unt_c" 		name="단위코드" 			parmid="rki_unt_c" 		attr="S" default_value=""/>
		<parm id="rpt_fq_dsc" 		name="수집주기코드" 		parmid="rpt_fq_dsc" 	attr="S" default_value=""/>
		<parm id="kri_lmt_dsc" 		name="한도구분코드" 		parmid="kri_lmt_dsc" 	attr="S" default_value=""/>
		<parm id="com_col_psb_yn" 	name="전산수집여부" 		parmid="com_col_psb_yn" attr="S" default_value=""/>
		<parm id="kri_yn" 			name="KRI여부" 			parmid="kri_yn" 		attr="S" default_value=""/>
		<parm id="act_pln_grdc" 	name="모니터링수행수준" 	parmid="act_pln_grdc" 	attr="S" default_value=""/>
		<parm id="status" 			name="상태" 				parmid="status" 		attr="A" default_value=""/>
		<parm id="rk_hdng_no" 		name="리스크항목번호" 		parmid="rk_hdng_no" 	attr="A" default_value=""/>
		<parm id="rel_tblnm" 		name="테이블명" 			parmid="rel_tblnm" 		attr="S" default_value=""/>
		<parm id="xtr_cnd_sqls" 	name="추출조건SQL문" 		parmid="xtr_cnd_sqls" 	attr="S" default_value=""/>		
		<parm id="clmn_loglnm" 		name="논리명" 			parmid="clmn_loglnm" 	attr="A" default_value=""/>
		<parm id="clmn_phnm" 		name="물리명" 			parmid="clmn_phnm" 		attr="A" default_value=""/>
		<parm id="clmn_mrk_cfc" 	name="데이터타입" 		parmid="clmn_mrk_cfc" 	attr="A" default_value=""/>
		<parm id="amn_orgz_yn" 		name="관리부서여부" 		parmid="amn_orgz_yn" 	attr="A" default_value=""/>
		<parm id="clmn_expl" 		name="설명" 				parmid="clmn_expl" 		attr="A" default_value=""/>
		<parm id="hd_apl_brc" 		name="적용사무소코드" 		parmid="hd_apl_brc" 	attr="S" default_value=""/>
		<parm id="psn_kri_yn" 		name="개인화KRI여부" 		parmid="psn_kri_yn" 	attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="신규 RI_ID" type="S" mode="select" multiid="" >
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT CASE WHEN LVL_C = '01' THEN 'H-KRI-' ELSE 'B-KRI-' END || NEW_RKI_ID AS NEW_RKI_ID
						  FROM (
						      SELECT LPAD(TO_CHAR(SUBSTR(NVL(MAX(OPRK_RKI_ID),'H-KRI-000'),7,3) + 1),3,'0') AS NEW_RKI_ID, TRIM(#rki_lvl_c#) AS LVL_C
						        FROM TB_OR_KM_RKI A
						       WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
						         AND A.OPRK_RKI_ID LIKE CASE WHEN TRIM(#rki_lvl_c#) = '01' THEN 'H' ELSE 'B' END || '%'
						       )
 					</data>
 				</sql>
				<result id="new_rki_id" name="신규 rki_id" attrname="new_rki_id" type="single_string"/>
			</unit>
			<unit id="unit02" name="관련테이블 추가" type="S" mode="update" multiid="" >
 				<sql id="sql11" name="SQL11">
 					<condition id="con01" name="rel_tblnm" variable="#rel_tblnm#" comparison="ne" value=""/>
 					<data id="data111" name="">
 						INSERT
 						  INTO TB_OR_KH_INF (                                 
					           GRP_ORG_C, OPRK_RKI_ID, REL_TBLNM, XTR_CND_SQLS       
 					           , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO )    
						VALUES (                                                       
							   TRIM(#grp_org_c#), TRIM(#new_rki_id#), TRIM(#rel_tblnm#), TRIM(#xtr_cnd_sqls#)  				   
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#) )                                                       
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit03" name="관련테이블 상세내용 추가" type="M" mode="update" multiid="rk_hdng_no" >
 				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="rk_hdng_no" name="rk_hdng_no" multiid="rk_hdng_no"/>
				<multivalue id="clmn_loglnm" name="clmn_loglnm" multiid="clmn_loglnm"/>
				<multivalue id="clmn_phnm" name="clmn_phnm" multiid="clmn_phnm"/>
				<multivalue id="clmn_mrk_cfc" name="clmn_mrk_cfc" multiid="clmn_mrk_cfc"/>
				<multivalue id="amn_orgz_yn" name="amn_orgz_yn" multiid="amn_orgz_yn"/>
				<multivalue id="clmn_expl" name="clmn_expl" multiid="clmn_expl"/>
 				<sql id="sql11" name="SQL11">
 					<condition id="con01" name="rel_tblnm" variable="#rel_tblnm#" comparison="ne" value=""/>
 					<data id="data111" name="">
 						INSERT
 						  INTO TB_OR_KH_HDNG (
						       GRP_ORG_C, OPRK_RKI_ID, RK_HDNG_NO, REL_TBLNM, CLMN_LOGLNM
						       , CLMN_PHNM, CLMN_MRK_CFC, AMN_ORGZ_YN, CLMN_EXPL_CNTN
						       , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO )
						VALUES (
				               TRIM(#grp_org_c#), TRIM(#new_rki_id#), TRIM(#rk_hdng_no#), TRIM(#rel_tblnm#), TRIM(#clmn_loglnm#)  			  
				               , TRIM(#clmn_phnm#), TRIM(#clmn_mrk_cfc#), TRIM(#amn_orgz_yn#), TRIM(#clmn_expl#)                        
				               , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#) )                                                       
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit04" name="관련RCSA삭제" mode="update" type="S" multiid="">
				<sql id="sql11" name = "SQL11">
				  	<condition id="con01" name="rel_rkp" variable="#rel_rkp#" comparison="ne" value=""/>
					<data id="data111" name = "">
						 DELETE FROM TB_OR_RH_REL_KRI
						 WHERE OPRK_RKI_ID = TRIM(#new_rki_id#) 
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit>
			<!-- 20220921 RCSA관련 된건 KRI에서 처리하지 않기로 함 
				unit id="unit05" name="관련RCSA입력" mode="update" type="S" multiid="">
				<sql id="sql11" name = "SQL11">
					<condition id="con01" name="rel_rkp" variable="#rel_rkp#" comparison="ne" value=""/>
					<data id="data111" name = "">
						 INSERT INTO TB_OR_RH_REL_KRI (                                                           
						        GRP_ORG_C, OPRK_RKP_ID, OPRK_RKI_ID, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)   
						 VALUES (                                                                                         
						        TRIM(#grp_org_c#), TRIM(#rel_rkp#), TRIM(#new_rki_id#), SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)) 
					</data>
				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
 			</unit-->
			<unit id="unit06" name="평가부서 추가" type="S" mode="update" multiid="hd_apl_brc" >
				<multivalue id="hd_apl_brc" name="hd_apl_brc" multiid="hd_apl_brc"/>
 				<sql id="sql11" name="SQL11">
 					<condition id="con01" name="hd_apl_brc" variable="#hd_apl_brc#" comparison="ne" value=""/>
 					<data id="data111" name="">
 						INSERT 
						  INTO TB_OR_KH_BRC (                       
							   GRP_ORG_C, OPRK_RKI_ID, BRC                         
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO )  
						VALUES (                                                 
					           TRIM(#grp_org_c#), TRIM(#new_rki_id#), TRIM(#hd_apl_brc#)                        
					           , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#) )                                                                                                            
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="리스크지표 신규등록" type="S" mode="update" multiid="" >
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						INSERT 
 						  INTO TB_OR_KM_RKI
							   ( GRP_ORG_C
							   , OPRK_RKI_ID
				               , OPRK_RKINM
				               , RKI_ATTR_C
				               , RKI_LVL_C
				               , RKI_OBV_CNTN
				               , RKI_DEF_CNTN
				               , IDX_FML_CNTN
				               , RKI_UNT_C
				               , RPT_FQ_DSC
				               , KRI_LMT_DSC
				               , COM_COL_PSB_YN
				               , KRI_YN
				               , GU_DRTN_RER_DSC
				               --, ACT_PLN_GRDC
				               , VLD_YN
				               , VLD_ST_DT
				               , VLD_ED_DT
				               , PSN_KRI_YN
				               , FIR_INP_DTM
				               , FIR_INPMN_ENO
				               , LSCHG_DTM
				               , LS_WKR_ENO
				               )
					    VALUES (
				               TRIM(#grp_org_c#)
				               , TRIM(#new_rki_id#)
				               , TRIM(#rkinm#)
				               , TRIM(#rki_attr_c#)
				               , TRIM(#rki_lvl_c#)
				               , TRIM(#rki_obv_cntn#)
				               , TRIM(#rki_def_cntn#)
				               , TRIM(#rki_fml_cntn#)
				               , TRIM(#rki_unt_c#)
				               , TRIM(#rpt_fq_dsc#)
				               , TRIM(#kri_lmt_dsc#)
				               , TRIM(#com_col_psb_yn#)
				               , TRIM(#kri_yn#)
				               , TRIM(#gu_drtn_rer_dsc#)
				               --, TRIM(#act_pln_grdc#)
				               , 'Y'
				               , TO_CHAR(SYSDATE,'YYYYMMDD')
				               , '99991231'
				               , TRIM(#psn_kri_yn#)
				               , SYSDATE
				               , TRIM(#userid#)
				               , SYSDATE               
				               , TRIM(#userid#)
							   )
 					</data>
 				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	
	<process id="ORKR010401" name="KRI 허용한도 관리 상세" forward="/kri/ORKR0104" forwardng="/comm/errorPage" resource="kri" grid_process_id="" />
	
	<process id="ORKR010402" name="KRI허용한도관리상세조회1" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="KRI허용한도관리상세조회1" type="S" mode="select" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT /* KRI허용한도관리상세조회1(전행)*/ 
							   A.OPRK_RKINM RKINM/*리스크지표명*/ 
							   , A.KRI_LMT_DSC /*핵심리스크지표한도구분코드*/ 
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C='KRI_LMT_DSC' AND IDVDC_VAL=A.KRI_LMT_DSC AND GRP_ORG_C=A.GRP_ORG_C ) AS KRI_LMT_DSC_NM /*핵심리스크지표한도구분*/ 
							   , B.FIX_SC1_LMT_VAL /*1차상한임계치*/ 
							   , B.FIX_SQ2_LMT_VAL FIX_SC2_LMT_VAL /*2차상한임계치*/ 
							   , TO_CHAR((SELECT MAX(LSCHG_DTM) FROM TB_OR_KH_LMT WHERE GRP_ORG_C=A.GRP_ORG_C AND OPRK_RKI_ID=A.OPRK_RKI_ID),'YYYYMMDD') AS CHG_DT /*변경일자*/
							   ,(SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_LVL_C' AND GRP_ORG_C = A.GRP_ORG_C AND A.RKI_LVL_C = IDVDC_VAL) AS RKI_LVL_NM 
						  FROM TB_OR_KM_RKI A /*RI풀기본*/ , TB_OR_KM_FIX_LMT B
						 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)
						   AND A.GRP_ORG_C   = B.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID(+)						   
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	<process id="ORKR010403" name="최근1년지표발생값" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="최근1년지표발생값" type="S" mode="select" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT
							   BAS_YM
							   , KRI_NVL_GRDNM 
						  FROM (
			         			 SELECT  
										BAS_YM  
										, AFLCO_TT_VAL / AFLCO_ORGZ_CN ||' ('||SUBSTR(KRI_GRDNM,1,1)||')' AS KRI_NVL_GRDNM 
										, ( SELECT MAX(BAS_YM) 
											  FROM TB_OR_OM_SCHD A 
											 WHERE A.GRP_ORG_C = GRP_ORG_C ) MAX_BAS_YM 
								   FROM TB_OR_KS_RKI_SMST  
								  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
									AND OPRK_RKI_ID = TRIM(#rki_id#)
							   ) 
			 			 WHERE 1 = 1 
			   			   AND BAS_YM &lt; MAX_BAS_YM 
			   			   AND BAS_YM &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(MAX_BAS_YM,'YYYYMM'), -12),'YYYYMM')
			   		  ORDER BY BAS_YM DESC
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	<process id="ORKR010404" name="최근1년지표발생현황" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="최근1년지표발생현황" type="S" mode="select" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT 
							   A.BAS_YM   
							   , A.RYR1_AVL   
							   , A.RYR1_SDVA   
							   , A.RYR1_MAX_VAL   
							   , A.RYR1_MIN_VAL   
							   , A.SC1_LMT_VAL BMM_SC1_MAX_TRH   
							   , A.SQ2_LMT_VAL BMM_SC2_MAX_TRH   
							   , B.GU_DRTN_RER_DSC   
							   , NULL AS BFYY_AVL   
							   , NULL AS BFYY_SDVA   
						  FROM TB_OR_KH_LMT A 
							   , TB_OR_KM_RKI B 
						 WHERE A.GRP_ORG_C = B.GRP_ORG_C  
						   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID  
						   AND A.GRP_ORG_C = TRIM(#grp_org_c#)  
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)  
						   AND A.BAS_YM = ( SELECT MAX(BAS_YM)  
			    				  			  FROM TB_OR_KH_LMT  
			    				 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
			      				   			   AND OPRK_RKI_ID = TRIM(#rki_id#)
			      				   		  ) 
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	<process id="ORKR010405" name="KRI허용한도 변경이력 목록조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI허용한도 변경이력 목록조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">

						SELECT A.BAS_YM, A.KRI_LMT_DSC, B.BAS_YM, B.KRI_LMT_DSC, A.SC1_LMT_VAL, B.SQ2_LMT_VAL
							  ,(SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C='KRI_LMT_DSC' AND IDVDC_VAL=A.KRI_LMT_DSC AND GRP_ORG_C=A.GRP_ORG_C) AS KRI_LMT_DSC_NM
						      ,A.SC1_LMT_VAL SC1_MAX_TRH   
						      ,A.SQ2_LMT_VAL SC2_MAX_TRH 							  
						  FROM ( SELECT S.GRP_ORG_C, S.OPRK_RKI_ID, S.BAS_YM, S.KRI_LMT_DSC, T.SC1_LMT_VAL, T.SQ2_LMT_VAL  
						          FROM TB_OR_KN_RKIMM S, TB_OR_KH_LMT T
						         WHERE S.GRP_ORG_C   = TRIM(#grp_org_c#)
						           AND S.OPRK_RKI_ID = TRIM(#rki_id#)
						           AND S.GRP_ORG_C   = T.GRP_ORG_C
						           AND S.OPRK_RKI_ID = T.OPRK_RKI_ID
						           AND S.BAS_YM      = T.BAS_YM ) A
						     , ( SELECT X.GRP_ORG_C, X.OPRK_RKI_ID, X.BAS_YM, X.KRI_LMT_DSC, Y.SC1_LMT_VAL, Y.SQ2_LMT_VAL  
						          FROM TB_OR_KN_RKIMM X, TB_OR_KH_LMT Y
						         WHERE X.GRP_ORG_C   = TRIM(#grp_org_c#)
						           AND X.OPRK_RKI_ID = TRIM(#rki_id#)
						           AND X.GRP_ORG_C   = Y.GRP_ORG_C
						           AND X.OPRK_RKI_ID = Y.OPRK_RKI_ID
						           AND X.BAS_YM      = Y.BAS_YM ) B
						 WHERE B.OPRK_RKI_ID = A.OPRK_RKI_ID
						   AND B.BAS_YM = TO_CHAR(ADD_MONTHS(A.BAS_YM||'01', -1), 'YYYYMM')
						   AND (  B.KRI_LMT_DSC != A.KRI_LMT_DSC
						       OR B.SC1_LMT_VAL != A.SC1_LMT_VAL 
						       OR B.SQ2_LMT_VAL != A.SQ2_LMT_VAL 
						       )
						 ORDER BY A.BAS_YM DESC
 					</data>
 				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010406" name="허용한도및기준값수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="all_gubun" name="전행구분" parmid="all_gubun" attr="S" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<parm id="kri_lmt_dsc" name="핵심리스크지표한도구분코드" parmid="kri_lmt_dsc" attr="S" default_value=""/>
		<parm id="sc1_max_trh" name="1차상한임계치" parmid="sc1_max_trh" attr="S" default_value=""/>
		<parm id="sc2_max_trh" name="2차상한임계치" parmid="sc2_max_trh" attr="S" default_value=""/>
		<parm id="chg_cntn" name="변경내용" parmid="chg_cntn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="허용한도및기준값수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						MERGE 
						 INTO TB_OR_KM_FIX_LMT
						USING dual
						   ON ( GRP_ORG_C = TRIM(#grp_org_c# ) AND OPRK_RKI_ID = TRIM(#rki_id# ))
						 WHEN MATCHED THEN
						      UPDATE 
						         SET LMT_CHG_CNTN = TRIM(#chg_cntn#)      
						       , FIX_SC1_LMT_VAL  = TRIM(#sc1_max_trh#)  
						       , FIX_SQ2_LMT_VAL  = TRIM(#sc2_max_trh#)  
						 WHEN NOT MATCHED THEN 
						      INSERT ( GRP_ORG_C, OPRK_RKI_ID, BRC, LMT_CHG_CNTN, FIX_SC1_LMT_VAL, FIX_SQ2_LMT_VAL)
						      VALUES ( TRIM(#grp_org_c# ), TRIM(#rki_id# ), TRIM('0000' ), TRIM(#chg_cntn#), TRIM(#sc1_max_trh#), TRIM(#sc2_max_trh#))
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
 			<unit id="unit02" name="한도변경이력 추가" type="S" mode="update" multiid="" >
 				<sql id="sql11" name="SQL11">
 					<condition id="con01" name="rel_tblnm != null" variable="#rel_tblnm#" comparison="ne" value=""/>
 					<data id="data111" name="">
						UPDATE TB_OR_KM_RKI SET KRI_LMT_DSC = TRIM(#kri_lmt_dsc#) 
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#) AND OPRK_RKI_ID = TRIM(#rki_id#)                                                    
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>			
		</group>
	</process>
	
	<process id="ORKR010411" name="KRI 허용한도 관리 상세(영업점)" forward="/kri/ORKR0105" forwardng="/comm/errorPage" resource="kri" grid_process_id="" />
	
	<process id="ORKR010412" name="KRI허용한도관리상세조회1" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="KRI허용한도관리상세조회1" type="S" mode="select" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT /* KRI허용한도관리상세조회1(전행)*/ 
							   A.OPRK_RKINM RKINM/*리스크지표명*/ 
							   , A.KRI_LMT_DSC /*핵심리스크지표한도구분코드*/ 
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C='KRI_LMT_DSC' AND IDVDC_VAL=A.KRI_LMT_DSC AND GRP_ORG_C=A.GRP_ORG_C ) AS KRI_LMT_DSC_NM /*핵심리스크지표한도구분*/ 
							   , B.FIX_SC1_LMT_VAL /*1차상한임계치*/ 
							   , B.FIX_SQ2_LMT_VAL FIX_SC2_LMT_VAL /*2차상한임계치*/ 
							   , TO_CHAR((SELECT MAX(LSCHG_DTM) FROM TB_OR_KH_LMT WHERE GRP_ORG_C=A.GRP_ORG_C AND OPRK_RKI_ID=A.OPRK_RKI_ID),'YYYYMMDD') AS CHG_DT /*변경일자*/
						       ,(SELECT INTG_IDVD_CNM 
						           FROM TB_OR_OM_CODE 
						          WHERE INTG_GRP_C = 'RKI_LVL_C' 
						            AND GRP_ORG_C = A.GRP_ORG_C 
						            AND A.RKI_LVL_C = IDVDC_VAL
						        ) AS RKI_LVL_NM
						       , A.RKI_LVL_C							    
						  FROM TB_OR_KM_RKI A /*RI풀기본*/ , TB_OR_KM_FIX_LMT B
						 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)
						   AND A.GRP_ORG_C   = B.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID(+)						   
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	<process id="ORKR010413" name="영업점별 허용한도" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="영업점별 허용한도" type="S" mode="select" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT A.OPRK_RKI_ID, A.BRC, B.BRNM, A.SC1_LMT_VAL, A.SQ2_LMT_VAL 
						  FROM TB_OR_KH_LMT A, TB_OR_OM_ORGZ B
						 WHERE A.GRP_ORG_C   = TRIM(#grp_org_c#)
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)
						   AND A.GRP_ORG_C   = B.GRP_ORG_C
						   AND A.BRC         = B.BRC
						   AND B.UP_BRC      = 'SHBR'
						   AND A.BAS_YM      = (SELECT MAX(BAS_YM) 
											      FROM TB_OR_OM_SCHD A 
											     WHERE A.GRP_ORG_C = GRP_ORG_C )
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	
	<process id="ORKR010415" name="KRI허용한도 변경이력 목록조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI허용한도 변경이력 목록조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">

						SELECT A.BAS_YM, A.KRI_LMT_DSC, B.BAS_YM, B.KRI_LMT_DSC, A.SC1_LMT_VAL, B.SQ2_LMT_VAL
							  ,(SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C='KRI_LMT_DSC' AND IDVDC_VAL=A.KRI_LMT_DSC AND GRP_ORG_C=A.GRP_ORG_C) AS KRI_LMT_DSC_NM
						      ,A.SC1_LMT_VAL SC1_MAX_TRH   
						      ,A.SQ2_LMT_VAL SC2_MAX_TRH 		
						      ,A.LMT_CHG_CNTN							  
						  FROM ( SELECT S.GRP_ORG_C, S.OPRK_RKI_ID, S.BAS_YM, S.KRI_LMT_DSC, T.SC1_LMT_VAL, T.SQ2_LMT_VAL, S.LMT_CHG_CNTN		  
						          FROM TB_OR_KN_RKIMM S, TB_OR_KH_LMT T
						         WHERE S.GRP_ORG_C   = TRIM(#grp_org_c#)
						           AND S.OPRK_RKI_ID = TRIM(#rki_id#)
						           AND S.GRP_ORG_C   = T.GRP_ORG_C
						           AND S.OPRK_RKI_ID = T.OPRK_RKI_ID
						           AND S.BAS_YM      = T.BAS_YM ) A
						     , ( SELECT X.GRP_ORG_C, X.OPRK_RKI_ID, X.BAS_YM, X.KRI_LMT_DSC, Y.SC1_LMT_VAL, Y.SQ2_LMT_VAL  
						          FROM TB_OR_KN_RKIMM X, TB_OR_KH_LMT Y
						         WHERE X.GRP_ORG_C   = TRIM(#grp_org_c#)
						           AND X.OPRK_RKI_ID = TRIM(#rki_id#)
						           AND X.GRP_ORG_C   = Y.GRP_ORG_C
						           AND X.OPRK_RKI_ID = Y.OPRK_RKI_ID
						           AND X.BAS_YM      = Y.BAS_YM ) B
						 WHERE B.OPRK_RKI_ID = A.OPRK_RKI_ID
						   AND B.BAS_YM = TO_CHAR(ADD_MONTHS(A.BAS_YM||'01', -1), 'YYYYMM')
						   AND (  B.KRI_LMT_DSC != A.KRI_LMT_DSC
						       OR B.SC1_LMT_VAL != A.SC1_LMT_VAL 
						       OR B.SQ2_LMT_VAL != A.SQ2_LMT_VAL 
						       )
						 ORDER BY A.BAS_YM DESC
 					</data>
 				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010416" name="허용한도및기준값수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="all_gubun" name="전행구분" parmid="all_gubun" attr="S" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<parm id="kri_lmt_dsc" name="핵심리스크지표한도구분코드" parmid="kri_lmt_dsc" attr="S" default_value=""/>
		<parm id="sc1_max_trh" name="1차상한임계치" parmid="sc1_max_trh" attr="S" default_value=""/>
		<parm id="sc2_max_trh" name="2차상한임계치" parmid="sc2_max_trh" attr="S" default_value=""/>
		<parm id="chg_cntn" name="변경내용" parmid="chg_cntn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="허용한도및기준값수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						MERGE 
						 INTO TB_OR_KM_FIX_LMT
						USING dual
						   ON ( GRP_ORG_C = TRIM(#grp_org_c# ) AND OPRK_RKI_ID = TRIM(#rki_id# ))
						 WHEN MATCHED THEN
						      UPDATE 
						         SET LMT_CHG_CNTN = TRIM(#chg_cntn#)      
						       , FIX_SC1_LMT_VAL  = TRIM(#sc1_max_trh#)  
						       , FIX_SQ2_LMT_VAL  = TRIM(#sc2_max_trh#)  
						 WHEN NOT MATCHED THEN 
						      INSERT ( GRP_ORG_C, OPRK_RKI_ID, BRC, LMT_CHG_CNTN, FIX_SC1_LMT_VAL, FIX_SQ2_LMT_VAL)
						      VALUES ( TRIM(#grp_org_c# ), TRIM(#rki_id# ), TRIM('0000' ), TRIM(#chg_cntn#), TRIM(#sc1_max_trh#), TRIM(#sc2_max_trh#))
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
 			<unit id="unit02" name="한도변경이력 추가" type="S" mode="update" multiid="" >
 				<sql id="sql11" name="SQL11">
 					<condition id="con01" name="rel_tblnm != null" variable="#rel_tblnm#" comparison="ne" value=""/>
 					<data id="data111" name="">
						UPDATE TB_OR_KM_RKI SET KRI_LMT_DSC = TRIM(#kri_lmt_dsc#) 
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#) AND OPRK_RKI_ID = TRIM(#rki_id#)                                                    
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>			
		</group>
	</process>	
	
	<process id="ORKR010421" name="KRI 허용한도 관리 상세" forward="/kri/ORKR0106" forwardng="/comm/errorPage" resource="kri" grid_process_id="" />
	
	<process id="ORKR010422" name="KRI허용한도관리상세조회1" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" 	name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" 	name="통합그룹코드" 	parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="rki_id" 		name="리스크지표ID" 	parmid="rki_id" 	attr="S" default_value=""/>
		<parm id="brc" 			name="영업점코드" 	parmid="brc" 		attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="KRI허용한도관리상세조회1" type="S" mode="select" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT /* KRI허용한도관리상세조회1(영업점)*/ 
							   A.OPRK_RKINM RKINM/*리스크지표명*/ 
							   , A.KRI_LMT_DSC /*핵심리스크지표한도구분코드*/ 
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C='KRI_LMT_DSC' AND IDVDC_VAL=A.KRI_LMT_DSC AND GRP_ORG_C=A.GRP_ORG_C ) AS KRI_LMT_DSC_NM /*핵심리스크지표한도구분*/ 
							   , B.FIX_SC1_LMT_VAL /*1차상한임계치*/ 
							   , B.FIX_SQ2_LMT_VAL FIX_SC2_LMT_VAL /*2차상한임계치*/ 
							   , TO_CHAR((SELECT MAX(LSCHG_DTM) FROM TB_OR_KH_LMT WHERE GRP_ORG_C=A.GRP_ORG_C AND OPRK_RKI_ID=A.OPRK_RKI_ID),'YYYYMMDD') AS CHG_DT /*변경일자*/
							   ,(SELECT INTG_IDVD_CNM 
						           FROM TB_OR_OM_CODE 
						          WHERE INTG_GRP_C = 'RKI_LVL_C' 
						            AND GRP_ORG_C = A.GRP_ORG_C 
						            AND A.RKI_LVL_C = IDVDC_VAL
						        ) AS RKI_LVL_NM
						       , A.RKI_LVL_C								    
						       ,(SELECT DISTINCT BRNM FROM TB_OR_OM_ORGZ WHERE GRP_ORG_C = TRIM(#grp_org_c#) AND BRC = TRIM(#brc#)) BRNM
						  FROM TB_OR_KM_RKI A /*RI풀기본*/ , TB_OR_KM_FIX_LMT B
						 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)
						   AND A.GRP_ORG_C   = B.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID(+)	
						   AND TRIM(#brc#)	 = B.BRC(+)					   
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	<process id="ORKR010423" name="최근1년지표발생값" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" 			name="영업점코드" 	parmid="brc" 		attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="최근1년지표발생값" type="S" mode="select" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT
							   BAS_YM
							   , KRI_NVL_GRDNM 
						  FROM (
			         			 SELECT  
										BAS_YM  
										, AFLCO_TT_VAL / AFLCO_ORGZ_CN ||' ('||SUBSTR(KRI_GRDNM,1,1)||')' AS KRI_NVL_GRDNM 
										, ( SELECT MAX(BAS_YM) 
											  FROM TB_OR_OM_SCHD A 
											 WHERE A.GRP_ORG_C = GRP_ORG_C ) MAX_BAS_YM 
								   FROM TB_OR_KS_RKI_BR_SMST  
								  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
									AND OPRK_RKI_ID = TRIM(#rki_id#)
									AND BRC		=  TRIM(#brc#)
							   ) 
			 			 WHERE 1 = 1 
			   			   AND BAS_YM &lt; MAX_BAS_YM 
			   			   AND BAS_YM &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(MAX_BAS_YM,'YYYYMM'), -12),'YYYYMM')
			   		  ORDER BY BAS_YM DESC
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	<process id="ORKR010424" name="최근1년지표발생현황" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="최근1년지표발생현황" type="S" mode="select" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT 
							   A.BAS_YM   
							   , A.RYR1_AVL   
							   , A.RYR1_SDVA   
							   , A.RYR1_MAX_VAL   
							   , A.RYR1_MIN_VAL   
							   , A.SC1_LMT_VAL BMM_SC1_MAX_TRH   
							   , A.SQ2_LMT_VAL BMM_SC2_MAX_TRH   
							   , B.GU_DRTN_RER_DSC   
							   , NULL AS BFYY_AVL   
							   , NULL AS BFYY_SDVA   
						  FROM TB_OR_KH_LMT A 
							 , TB_OR_KM_RKI B 
						 WHERE A.GRP_ORG_C = B.GRP_ORG_C  
						   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID  
						   AND A.GRP_ORG_C = TRIM(#grp_org_c#)  
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)  
						   AND A.BRC		=  TRIM(#brc#)
						   AND A.BAS_YM = ( SELECT MAX(BAS_YM)  
			    				  			  FROM TB_OR_KH_LMT  
			    				 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
			      				   			   AND OPRK_RKI_ID = TRIM(#rki_id#)
			      				   		  ) 
			 		</data>
			 	</sql>
			 	<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	<process id="ORKR010425" name="KRI허용한도 변경이력 목록조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI허용한도 변경이력 목록조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">

						SELECT A.BAS_YM, A.KRI_LMT_DSC, B.BAS_YM, B.KRI_LMT_DSC, A.SC1_LMT_VAL, B.SQ2_LMT_VAL
							  ,(SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C='KRI_LMT_DSC' AND IDVDC_VAL=A.KRI_LMT_DSC AND GRP_ORG_C=A.GRP_ORG_C) AS KRI_LMT_DSC_NM
						      ,A.SC1_LMT_VAL SC1_MAX_TRH   
						      ,A.SQ2_LMT_VAL SC2_MAX_TRH 		
						      ,A.LMT_CHG_CNTN					  
						  FROM ( SELECT S.GRP_ORG_C, S.OPRK_RKI_ID, S.BAS_YM, S.KRI_LMT_DSC, T.SC1_LMT_VAL, T.SQ2_LMT_VAL, S.LMT_CHG_CNTN  
						          FROM TB_OR_KN_RKIMM S, TB_OR_KH_LMT T
						         WHERE S.GRP_ORG_C   = TRIM(#grp_org_c#)
						           AND S.OPRK_RKI_ID = TRIM(#rki_id#)
						           AND S.GRP_ORG_C   = T.GRP_ORG_C
						           AND S.OPRK_RKI_ID = T.OPRK_RKI_ID
						           AND S.BAS_YM      = T.BAS_YM 
						           AND TRIM(#brc#)   = T.BRC ) A
						     , ( SELECT X.GRP_ORG_C, X.OPRK_RKI_ID, X.BAS_YM, X.KRI_LMT_DSC, Y.SC1_LMT_VAL, Y.SQ2_LMT_VAL  
						          FROM TB_OR_KN_RKIMM X, TB_OR_KH_LMT Y
						         WHERE X.GRP_ORG_C   = TRIM(#grp_org_c#)
						           AND X.OPRK_RKI_ID = TRIM(#rki_id#)
						           AND X.GRP_ORG_C   = Y.GRP_ORG_C
						           AND X.OPRK_RKI_ID = Y.OPRK_RKI_ID
						           AND X.BAS_YM      = Y.BAS_YM 
						           AND TRIM(#brc#)   = Y.BRC ) B
						 WHERE B.OPRK_RKI_ID = A.OPRK_RKI_ID
						   AND B.BAS_YM = TO_CHAR(ADD_MONTHS(A.BAS_YM||'01', -1), 'YYYYMM')
						   AND (  B.KRI_LMT_DSC != A.KRI_LMT_DSC
						       OR B.SC1_LMT_VAL != A.SC1_LMT_VAL 
						       OR B.SQ2_LMT_VAL != A.SQ2_LMT_VAL 
						       )
						 ORDER BY A.BAS_YM DESC
 					</data>
 				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010426" name="허용한도및기준값수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="all_gubun" name="전행구분" parmid="all_gubun" attr="S" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<parm id="kri_lmt_dsc" name="핵심리스크지표한도구분코드" parmid="kri_lmt_dsc" attr="S" default_value=""/>
		<parm id="sc1_max_trh" name="1차상한임계치" parmid="sc1_max_trh" attr="S" default_value=""/>
		<parm id="sc2_max_trh" name="2차상한임계치" parmid="sc2_max_trh" attr="S" default_value=""/>
		<parm id="chg_cntn" name="변경내용" parmid="chg_cntn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="허용한도및기준값수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						MERGE 
						 INTO TB_OR_KM_FIX_LMT
						USING dual
						   ON ( GRP_ORG_C = TRIM(#grp_org_c# ) AND OPRK_RKI_ID = TRIM(#rki_id# ))
						 WHEN MATCHED THEN
						      UPDATE 
						         SET LMT_CHG_CNTN = TRIM(#chg_cntn#)      
						       , FIX_SC1_LMT_VAL  = TRIM(#sc1_max_trh#)  
						       , FIX_SQ2_LMT_VAL  = TRIM(#sc2_max_trh#)  
						 WHEN NOT MATCHED THEN 
						      INSERT ( GRP_ORG_C, OPRK_RKI_ID, BRC, LMT_CHG_CNTN, FIX_SC1_LMT_VAL, FIX_SQ2_LMT_VAL)
						      VALUES ( TRIM(#grp_org_c# ), TRIM(#rki_id# ), TRIM('0000' ), TRIM(#chg_cntn#), TRIM(#sc1_max_trh#), TRIM(#sc2_max_trh#))
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
 			<unit id="unit02" name="한도변경이력 추가" type="S" mode="update" multiid="" >
 				<sql id="sql11" name="SQL11">
 					<condition id="con01" name="rel_tblnm != null" variable="#rel_tblnm#" comparison="ne" value=""/>
 					<data id="data111" name="">
						UPDATE TB_OR_KM_RKI SET KRI_LMT_DSC = TRIM(#kri_lmt_dsc#) 
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#) AND OPRK_RKI_ID = TRIM(#rki_id#)                                                    
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>			
		</group>
	</process>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		
	
	<process id="ORKR010701" name="KRI 평가 관리" forward="/kri/ORKR0107" forwardng="/comm/jsonErr" resource="kri" grid_process_id="" />
	
	<process id="ORKR010702" name="KRI평가일정목록조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="조회시작년" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_st_bas_ym" name="조회시작년월" parmid="sch_st_bas_ym" attr="S" default_value=""/>
		<parm id="sch_ed_bas_ym" name="조회종료년월" parmid="sch_ed_bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI평가일정목록조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
					 SELECT   SUBSTR(A.BAS_YM,1,4)||'-'||SUBSTR(A.BAS_YM,5,2) BAS_YM
					        , A.RKI_PRG_STSC  
					        , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C='RKI_PRG_STSC' AND IDVDC_VAL=A.RKI_PRG_STSC AND GRP_ORG_C=A.GRP_ORG_C) AS RKI_PRG_STSC_NM 
					        , A.RKI_ST_DT AS MNTR_ST_DT
					        , A.RKI_ED_DT AS MNTR_ED_DT
					        , NVL((SELECT COUNT(*)
					                 FROM TB_OR_KH_RKISLT
					                WHERE GRP_ORG_C = A.GRP_ORG_C
					                  AND BAS_YM    = A.BAS_YM    
					                GROUP BY GRP_ORG_C, BAS_YM ), 0) AS RKISLT_CNT
					   FROM TB_OR_OM_SCHD A /* KRI_일정관리 */
					  WHERE 1=1   
					    AND A.GRP_ORG_C = TRIM(#grp_org_c#) 
					    AND A.BAS_YM BETWEEN #sch_st_bas_ym# AND #sch_ed_bas_ym#
					  ORDER BY BAS_YM DESC  
 					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010703" name="KRI평가대상목록조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="gubun" name="구분" parmid="gubun" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI평가대상목록조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT
						   
					</data>
 				</sql>  
		 		<sql id="sql12" name="SQL12">
		 			<condition id="cond111" name="cond111" variable="#gubun#" comparison="eq" value="2" />
					<data id="data11" name="">
			     			   REPLACE(TRIM(#bas_ym#),'-','') BAS_YM
			     			   , A.OPRK_RKI_ID RKI_ID
			     			   , A.OPRK_RKINM RKINM
			     			   , A.RKI_OBV_CNTN
			     			   , A.RKI_DEF_CNTN
			     			   , A.IDX_FML_CNTN           
			     			   , A.COM_COL_PSB_YN           
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_LVL_C' 	AND GRP_ORG_C = A.GRP_ORG_C AND A.RKI_LVL_C = IDVDC_VAL) AS RKI_LVL_NM                       
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'KRI_LMT_DSC' 	AND GRP_ORG_C = A.GRP_ORG_C AND A.KRI_LMT_DSC = IDVDC_VAL) AS KRI_LMT_NM                       
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_UNT_C' 	AND GRP_ORG_C = A.GRP_ORG_C AND A.RKI_UNT_C = IDVDC_VAL) AS KRI_UNT_NM                      
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RPT_FQ_DSC' 	AND GRP_ORG_C = A.GRP_ORG_C AND A.RPT_FQ_DSC = IDVDC_VAL) AS COL_FQ_NM                           
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_ATTR_C' 	AND GRP_ORG_C = A.GRP_ORG_C AND A.RKI_ATTR_C = IDVDC_VAL) AS RKI_ATTR_NM
							   , CASE WHEN A.COM_COL_PSB_YN = 'N' THEN DECODE(C.KRI_NVL, '', '미입력', '입력완료')
								      ELSE ''
								  END AS COM_COL_PSB_INPUT_YN						
				  		  FROM TB_OR_KN_RKIMM A /*KRI_RI풀월말*/
							  ,TB_OR_KH_NVL C    /* KRI_값내역 */				  		  
				  		  WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 
						   AND A.KRI_YN = 'Y'
						   AND A.BAS_YM = REPLACE(TRIM(#bas_ym#),'-','')
						   AND A.VLD_YN = 'Y'
						   AND A.GRP_ORG_C   = C.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID = C.OPRK_RKI_ID(+)
						   AND A.BAS_YM      = C.BAS_YM(+)	  						   
					  ORDER BY A.OPRK_RKI_ID
				  	</data>
 				</sql>
 				<sql id="sql13" name="sql13">
		 			<condition id="cond111" name="cond111" variable="#gubun#" comparison="eq" value="1" />
					<data id="data11" name="">
			     			   #bas_ym# BAS_YM
			     			   , A.OPRK_RKI_ID RKI_ID
			     			   , B.OPRK_RKINM RKINM
			     			   , B.RKI_OBV_CNTN
			     			   , B.RKI_DEF_CNTN
			     			   , B.IDX_FML_CNTN           
			     			   , B.COM_COL_PSB_YN           
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_LVL_C' 	AND GRP_ORG_C = A.GRP_ORG_C AND B.RKI_LVL_C = IDVDC_VAL) AS RKI_LVL_NM                       
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'KRI_LMT_DSC' 	AND GRP_ORG_C = A.GRP_ORG_C AND B.KRI_LMT_DSC = IDVDC_VAL) AS KRI_LMT_NM                       
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_UNT_C' 	AND GRP_ORG_C = A.GRP_ORG_C AND B.RKI_UNT_C = IDVDC_VAL) AS KRI_UNT_NM                      
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RPT_FQ_DSC' 		AND GRP_ORG_C = A.GRP_ORG_C AND B.RPT_FQ_DSC = IDVDC_VAL) AS COL_FQ_NM                           
							   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C = 'RKI_ATTR_C' 	AND GRP_ORG_C = A.GRP_ORG_C AND B.RKI_ATTR_C = IDVDC_VAL) AS RKI_ATTR_NM
							   , CASE WHEN COM_COL_PSB_YN = 'N' THEN DECODE(C.KRI_NVL, '', '미입력', '입력완료')
								      ELSE ''
								  END AS COM_COL_PSB_INPUT_YN	
							   , (SELECT BRNM FROM TB_OR_OM_ORGZ WHERE BRC =  D.BRC) AS BRNM  					
						  FROM TB_OR_KH_RKISLT A /* KRI_평가대상선정내역 */
						      ,TB_OR_KM_RKI B    /* KRI_RI풀기본*/
						      ,TB_OR_KH_NVL C    /* KRI_값내역 */
						      ,TB_OR_KH_BRC D	 /* KRI_적용사무소내역 */
						  WHERE A.GRP_ORG_C   = TRIM('01') 
						    AND A.BAS_YM      = REPLACE(TRIM(#bas_ym#),'-','')
						    AND A.GRP_ORG_C   = B.GRP_ORG_C(+)
						    AND A.OPRK_RKI_ID = B.OPRK_RKI_ID(+)
						    AND A.GRP_ORG_C   = C.GRP_ORG_C(+)
						    AND A.OPRK_RKI_ID = C.OPRK_RKI_ID(+)
						    AND A.BAS_YM      = C.BAS_YM(+)	    
						    AND B.GRP_ORG_C   = D.GRP_ORG_C(+)  
						    AND B.OPRK_RKI_ID = D.OPRK_RKI_ID(+)						    
						   --AND B.KRI_YN = 'Y'
						   --AND B.VLD_YN = 'Y'
						ORDER BY A.OPRK_RKI_ID
				  	</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
		</process>
	<process id="ORKR010704" name="평가시작일완료일수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="status" name="상태" parmid="status" attr="A" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<parm id="mntr_st_dt" name="모니터링시작일자" parmid="mntr_st_dt" attr="A" default_value=""/>
		<parm id="mntr_ed_dt" name="모니터링종료일자" parmid="mntr_ed_dt" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="평가시작일완료일수정" type="M" mode="update" multiid="bas_ym">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="mntr_st_dt" name="mntr_st_dt" multiid="mntr_st_dt"/>
				<multivalue id="mntr_ed_dt" name="mntr_ed_dt" multiid="mntr_ed_dt"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" variable="#status#" comparison="eq" value="U" />
 					<data id="data111" name="">
 						UPDATE TB_OR_OM_SCHD                  
						   SET RKI_ST_DT = TRIM(#mntr_st_dt#)          
							   , RKI_ED_DT = TRIM(#mntr_ed_dt#)          
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)            
						   AND BAS_YM = REPLACE(TRIM(#bas_ym#),'-','')
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010705" name="KRI평가대상목록입력삭제" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="status" name="상태" parmid="status" attr="A" default_value=""/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="A" default_value=""/>
		<parm id="exp_yn" name="제외여부" parmid="exp_yn" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI평가대상목록입력삭제" type="M" mode="update" multiid="bas_ym">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<multivalue id="exp_yn" name="exp_yn" multiid="exp_yn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" variable="#status#" comparison="eq" value="U" />
					<condition id="cond112" name="exp_yn == 0" variable="#exp_yn#" comparison="eq" value="0" />
 					<data id="data111" name="">
 						INSERT 
 						  INTO TB_OR_KH_RKISLT                                                     
							   ( GRP_ORG_C, OPRK_RKI_ID, BAS_YM, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO ) 
						VALUES                                                                                  
							   ( TRIM(#grp_org_c#), TRIM(#rki_id#), REPLACE(TRIM(#bas_ym#),'-','')                       
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#) )
 					</data>
 				</sql>
 				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="status == U" variable="#status#" comparison="eq" value="U" />
					<condition id="cond112" name="exp_yn == 1" variable="#exp_yn#" comparison="eq" value="1" />
 					<data id="data111" name="">
 						DELETE 
 						  FROM TB_OR_KH_RKISLT                                                     
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)                                                      
						   AND BAS_YM = REPLACE(TRIM(#bas_ym#),'-','')                                            
						   AND OPRK_RKI_ID = TRIM(#rki_id#)
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<!-- process id="ORKR010506" name="KRI 일정등록 팝업" forward="/kri/ORKR0121" forwardng="/comm/errorPage" resource="kri" grid_process_id=""-->
	<process id="ORKR010706" name="KRI 일정등록 팝업" forward="/kri/ORKR0108" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<parm id="addOrMod" name="신규or수정" parmid="addOrMod" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="신규 BAS_YM값" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						SELECT 
 							   TO_CHAR(ADD_MONTHS(TO_DATE(MAX(BAS_YM), 'YYYYMM'), 1), 'YYYYMM') MAX_BAS_YM
 							   , TO_CHAR(ADD_MONTHS(TO_DATE(MAX(BAS_YM), 'YYYYMM'), 2), 'YYYYMM') MNTR_DT
						  FROM TB_OR_OM_SCHD
					     WHERE GRP_ORG_C = #grp_org_c# 
 					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010707" name="KRI 일정등록" forward="/comm/ORKR010707saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="efct_st_dt" name="평가시작일" parmid="efct_st_dt" attr="S" default_value=""/>
		<parm id="efct_ed_dt" name="평가종료일" parmid="efct_ed_dt" attr="S" default_value=""/>
		<parm id="addOrMod" name="신규수정구분코드" parmid="addOrMod" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="일정조회" type="S" mode="select" multiid="">
  				<sql id="sql1" name="SQL11">
  					<condition id="cond11" name="조건11" variable="#addOrMod#" comparison="eq" value="add" />
					<!-- data : SQL문의 정의 -->
					<data id="data11" name="">
					SELECT COUNT(*) AS SCHD_CNT
					  FROM TB_OR_OM_SCHD		
					 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
					   AND BAS_YM = REPLACE(#bas_ym#, '-', '')	
					</data>
				</sql>
				<result id="result" name="schd_cnt" attrname="schd_cnt" type="single_string"/>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>	
			<unit id="unit02" name="일정등록" type="S" mode="insert" multiid="">
				<sql id="sql2" name="SQL12">
  					<condition id="cond12" name="조건12" variable="#addOrMod#" comparison="eq" value="add" />
  					<condition id="cond13" name="조건13" variable="#schd_cnt#" comparison="eq" value="0" />
					<!-- data : SQL문의 정의 -->
					<data id="data12" name="">
					INSERT INTO TB_OR_OM_SCHD (
						GRP_ORG_C, BAS_YM, EFCT_ST_DT, EFCT_ED_DT
						, RKI_PRG_STSC, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
					) VALUES (
						#grp_org_c#, REPLACE(#bas_ym#, '-', ''), REPLACE(#efct_st_dt#, '-', ''), REPLACE(#efct_ed_dt#, '-', '')
						, '01', SYSDATE, #userid#, SYSDATE, #userid#
					)
					</data>
				</sql>
				<sql id="sql3" name="SQL13">
  					<condition id="cond14" name="조건14" variable="#addOrMod#" comparison="eq" value="mod" />
					<!-- data : SQL문의 정의 -->
					<data id="data13" name="">
					UPDATE TB_OR_OM_SCHD SET
						EFCT_ST_DT = REPLACE(#efct_st_dt#, '-', '')
       					, EFCT_ED_DT = REPLACE(#efct_ed_dt#, '-', '')
						, LSCHG_DTM = SYSDATE
						, LS_WKR_ENO = #userid#
					 WHERE GRP_ORG_C = #grp_org_c#
					   AND BAS_YM = REPLACE(#bas_ym#, '-', '')
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>	
		</group>
	</process>
	
	<process id="ORKR010708" name="KRI 일정 삭제" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="efct_st_dt" name="평가시작일" parmid="efct_st_dt" attr="S" default_value=""/>
		<parm id="efct_ed_dt" name="평가종료일" parmid="efct_ed_dt" attr="S" default_value=""/>
		<parm id="addOrMod" name="신규수정구분코드" parmid="addOrMod" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="일정삭제" type="S" mode="delete" multiid="">
  				<sql id="sql1" name="SQL11">
					<!-- data : SQL문의 정의 -->
					<data id="data11" name="">
					DELETE FROM TB_OR_OM_SCHD		
					 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
				   	   AND BAS_YM = REPLACE(#bas_ym#, '-', '')	
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>	
		</group>
	</process>
	
	<process id="ORKR011501" name="변경사유" forward="/kri/ORKR0122" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
	</process>
	
	<!-- process id="ORKR011601" name="반려사유" forward="/kri/ORKR0116" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
	</process-->
	
	<process id="ORKR010901" name="KRI 수기 데이터 입력" forward="/kri/ORKR0109" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="KRI평가일정조회 공통" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						SELECT /*KRI평가일정조회*/ 
			       			     A.BAS_YM /*기준년월*/  
			     			   , A.RKI_ST_DT AS EFCT_ST_DT /*모니터링시작일자*/ 
			     			   , A.RKI_ED_DT AS EFCT_ED_DT /*모니터링종료일자*/ 
			     			   , A.RKI_PRG_STSC /*리스크진행상태코드*/  
			   			  FROM TB_OR_OM_SCHD A /*KRI평가일정관리기본*/ 
			 			 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#) 
 					</data> 
 				</sql>
 				<sql id="sql13" name="SQL13">
 					<data id="data111" name="">
 					  ORDER BY BAS_YM DESC
			 		</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010902" name="KRI 수기 데이터 입력 좌측 그리드 목록 조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="kri_menu_dsc" name="KRI메뉴구분" parmid="kri_menu_dsc" attr="A" default_value=""/>
		<parm id="sch_bas_ym" 	name="기준년월" 		parmid="sch_bas_ym" 	attr="S" default_value=""/>
		<parm id="sch_brc" 		name="사무소코드" 	parmid="sch_brc" 			attr="S" default_value=""/>
		<parm id="jrdt_brc" 	name="소관부서코드" 	parmid="jrdt_brc" 			attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI 수기 데이터 입력 좌측 그리드 목록 조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						 SELECT C.BRNM
								      ,CASE WHEN C.HOFC_BIZO_DSC = '02' THEN '본부부서 '
								            WHEN C.HOFC_BIZO_DSC = '03' THEN '영업점'
								            ELSE ''
								        END HOFC_BIZO_DSNM
								      ,COUNT(A.OPRK_RKI_ID) CNT
								      ,SUM(CASE WHEN A.KRI_NVL IS NOT NULL THEN 1 ELSE 0 END) INP_CNT
								      ,ROUND(SUM(CASE WHEN A.KRI_NVL IS NOT NULL THEN 1 ELSE 0 END)/NVL(DECODE(COUNT(A.OPRK_RKI_ID),0,1,COUNT(A.OPRK_RKI_ID)),1) * 100,2)||'%' INP_PCT
								      ,CASE WHEN MIN(B.RKI_DCZ_STSC) &gt; = 13 THEN 'Y' ELSE 'N' END DCZ_STSC 
								      ,A.BAS_YM
								      ,C.BRC
								  FROM TB_OR_KH_NVL A
								      ,TB_OR_KH_NVL_DCZ B
								      ,TB_OR_OM_ORGZ C
								      ,TB_OR_KH_BRC D
								      ,TB_OR_KH_RKISLT E
								      ,TB_OR_KM_RKI F
								 WHERE A.BAS_YM = B.BAS_YM
								   AND A.BRC = B.BRC
								   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID
								   AND A.DCZ_SQNO = B.DCZ_SQNO
								   AND A.GRP_ORG_C = B.GRP_ORG_C
								   AND A.BRC = C.BRC
								   AND C.BRC = D.BRC(+)
								   AND A.OPRK_RKI_ID = D.OPRK_RKI_ID(+)
								   AND A.BAS_YM = E.BAS_YM
								   AND A.OPRK_RKI_ID = E.OPRK_RKI_ID
								   AND A.OPRK_RKI_ID = F.OPRK_RKI_ID
								   AND F.COM_COL_PSB_YN = 'N'
								   AND A.BAS_YM	= TRIM(#sch_bas_ym#)
 
 					</data>
 				</sql>
 				<sql id="sql12" name="SQL12">
 					<condition id="cond111" name="kri_menu_dsc" variable="#kri_menu_dsc#" comparison="ne" value="3" />
 					<data id="data111" name="">
				            		 AND A.BRC = TRIM(#sch_brc#)
				    </data>
 				</sql>
 				<sql id="sql12" name="SQL12">
 					<condition id="cond111" name="sch_brc" variable="#sch_brc#" comparison="ne" value="" />
 					<data id="data111" name="">
				            		 AND A.BRC = TRIM(#sch_brc#)
				    </data>
 				</sql>
 				<sql id="sql13" name="SQL13">
 					<data id="data111" name="">
						              GROUP BY C.BRC,C.BRNM,A.BAS_YM,C.HOFC_BIZO_DSC
					</data>
 				</sql>
 				<sql id="sql13" name="SQL13">
 					<data id="data111" name="">
						              ORDER BY C.HOFC_BIZO_DSC , C.BRNM
					</data>
 				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR010903" name="KRI 수기 데이터 입력 우측 그리드 목록 조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="기준년" parmid="sch_bas_y" attr="S" default_value=""/>
		<parm id="sch_bas_y" name="기준년" parmid="sch_bas_y" attr="S" default_value=""/>
		<parm id="sch_bas_m" name="기준월" parmid="sch_bas_m" attr="S" default_value=""/>
		<parm id="sch_brc" name="사무소코드" parmid="sch_brc" attr="S" default_value=""/>
		<parm id="sch_brc_2" name="검색사무소코드" parmid="sch_brc_2" attr="S" default_value=""/>
		<parm id="sch_auth_orm" name="ORM여부" parmid="sch_auth_orm" attr="S" default_value=""/>
		<parm id="kri_menu_dsc" name="KRI메뉴구분" parmid="kri_menu_dsc" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI 수기 데이터 입력 우측 그리드 목록 조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						 SELECT /* KRI수기 데이터 입력 - 우측 그리드 목록 조회*/ 
			       			    A.BAS_YM /*기준년월*/  
			     			    , A.OPRK_RKI_ID RKI_ID /*리스크지표ID*/  
			     				, C.OPRK_RKINM RKINM /*리스크지표명*/  
							    , C.RKI_OBV_CNTN /*리스크지표목적내용*/  
							    , C.RKI_DEF_CNTN /*리스크지표정의내용*/  
							    , A.KRI_NVL /*핵심리스크지표수치*/  
							    , A.BRC /*적용사무소코드*/  
							    , D.BRNM /*적용사무소*/  
			      				, (SELECT MAX(RKI_DCZ_STSC) KEEP ( DENSE_RANK LAST ORDER BY DCZ_SQNO) AS RKI_DCZ_STSC           
			                   		 FROM TB_OR_KH_NVL_DCZ X                                                    
			                  		WHERE GRP_ORG_C = A.GRP_ORG_C                                                       
			                    	  AND BAS_YM = A.BAS_YM                                                             
			                    	  AND BRC = A.BRC                                                                   
			                    	  AND OPRK_RKI_ID = A.OPRK_RKI_ID                                                     
			         			  ) AS RKI_DCZ_STSC                                                                            
			       				, (SELECT MAX(Y.INTG_IDVD_CNM) KEEP ( DENSE_RANK LAST ORDER BY X.DCZ_SQNO) AS RKI_DCZ_STSC_NM  
			                   		 FROM TB_OR_KH_NVL_DCZ X, TB_OR_OM_CODE Y                           
			                  		WHERE X.GRP_ORG_C = A.GRP_ORG_C                                                     
			                    	  AND X.BAS_YM = A.BAS_YM                                                           
			                    	  AND X.BRC = A.BRC                                                                 
			                    	  AND X.OPRK_RKI_ID = A.OPRK_RKI_ID                                                 
			                    	  AND X.GRP_ORG_C = Y.GRP_ORG_C                                                     
			                    	  AND Y.IDVDC_VAL=X.RKI_DCZ_STSC                                                    
			                    	  AND Y.INTG_GRP_C='RKI_DCZ_STSC'                                                   
			        			  ) AS RKI_DCZ_STSC_NM /*리스크지표결재상태*/                                                           
			      				, CASE WHEN E.DCZ_RMK_C = '01' THEN 'Y' ELSE 'N' END RTN_YN                                                            
			     			    , DECODE(A.INPDT,NULL,'N','Y') AS INPDT_YN /*입력여부*/  
			  			   FROM TB_OR_KH_NVL A /*KRI값내역*/ 
			     				, TB_OR_KH_RKISLT B /*KRI평가대상선정내역*/ 
			     				, TB_OR_KM_RKI C /*RI풀기본*/
			     				, TB_OR_OM_ORGZ D 
			     				, TB_OR_KH_NVL_DCZ E
			 			  WHERE A.GRP_ORG_C 	= B.GRP_ORG_C  
			   				AND A.OPRK_RKI_ID 	= B.OPRK_RKI_ID  
			   				AND A.BAS_YM 		= B.BAS_YM  
			   				AND A.GRP_ORG_C 	= C.GRP_ORG_C  
			   				AND A.OPRK_RKI_ID 	= C.OPRK_RKI_ID  
			   				AND 'Y'				= C.VLD_YN
			   				AND A.OPRK_RKI_ID = E.OPRK_RKI_ID
			   				AND A.BAS_YM = E.BAS_YM
			   				AND A.DCZ_SQNO = E.DCZ_SQNO
			   				AND A.GRP_ORG_C 	= TRIM(#grp_org_c#)  
			   				AND A.BAS_YM 		= TRIM(#sch_bas_ym#)
			   				AND A.BRC = E.BRC
			   				AND A.BRC = D.BRC

 					</data>
 				</sql>
 				<sql id="sql1" name = "SQL1">
						<condition id="cond1" name="조건1" comparison="eq" value="2" variable="#kri_menu_dsc#" />
						<data id="data1" name = "">
					   		 AND  E.DCZ_OBJR_ENO = TRIM(#userid#)                             
						</data>
					</sql> 
					<sql id="sql1" name = "SQL1">
						<condition id="cond1" name="조건1" comparison="ne" value="2" variable="#kri_menu_dsc#" />
						<data id="data1" name = "">
					   		 AND A.BRC = TRIM(#sch_brc_2#)         
						</data>
					</sql> 
					<sql id="sql1" name = "SQL1">
						<data id="data1" name = "">
			   				AND C.COM_COL_PSB_YN = 'N' /*전산수집가능여부*/  
			 		   ORDER BY A.OPRK_RKI_ID 
			 		   </data>
			 		</sql>		
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
	
	<process id="ORKR010904" name="KRI수기데이터 결재" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="brc" 			name="사무소코드" 		parmid="brc" 			attr="A" default_value=""/>
		<parm id="rki_id" 		name="리스크ID" 			parmid="rki_id" 		attr="A" default_value=""/>
		<parm id="kri_nvl" 		name="kri값" 			parmid="kri_nvl" 		attr="A" default_value=""/>
		<parm id="dcz_dc" 		name="결재진행코드" 		parmid="dcz_dc" 		attr="A" default_value=""/>
		<parm id="dcz_objr_eno" name="결재확인자개인번호" 	parmid="dcz_objr_eno" 	attr="A" default_value=""/>
		<parm id="sch_rtn_cntn" name="결재/반려의견" 		parmid="sch_rtn_cntn" 	attr="A" default_value=""/>
		<parm id="dcz_rmk_c" 	name="결재비고코드" 		parmid="dcz_rmk_c" 		attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="M" multiid="rki_id">
			<multivalue id="brc" 			name="brc" 			multiid="brc"/>
			<multivalue id="rki_id" 		name="rki_id" 		multiid="rki_id"/>
			<multivalue id="dcz_dc" 		name="dcz_dc" 		multiid="dcz_dc"/>
			<multivalue id="dcz_objr_eno" 	name="dcz_objr_eno" multiid="dcz_objr_eno"/>
			<multivalue id="sch_rtn_cntn" 	name="sch_rtn_cntn" multiid="sch_rtn_cntn"/>
			<multivalue id="dcz_rmk_c" 		name="dcz_rmk_c" 	multiid="dcz_rmk_c"/>
			
			<multivalue id="kri_nvl" name="kri_nvl" multiid="kri_nvl"/>
			
			<unit id="unit01" name="MAX결재일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  MAX(DCZ_SQNO)+1 DCZ_SQNO
						 FROM    TB_OR_KH_NVL_DCZ   
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     BRC         = TRIM(#brc#)        
						 AND     OPRK_RKI_ID = #rki_id#
						 AND     BAS_YM   = #bas_ym#                 
					</data>
				</sql>
				<result id="result" name="dcz_sqno" attrname="dcz_sqno" type="single_string"/>
			</unit>
			<unit id="unit02" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_KH_NVL_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   OPRK_RKI_ID                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   RKI_DCZ_STSC  
						     ,	 RTN_CNTN
						     ,   DCZ_OBJR_ENO 
						     ,   DCZ_RMK_C            
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#bas_ym#)        
						     ,   TRIM(#rki_id#)    
						     ,   TRIM(#brc#)      
						     ,   #dcz_sqno#                     
						     ,   TO_CHAR(SYSDATE,'YYYYMMDD')   
						     ,   TRIM(#userid#)       
						     ,   #dcz_dc#
						     ,	 #sch_rtn_cntn#
						     ,   #dcz_objr_eno#  
						     ,   #dcz_rmk_c#                        
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE  TB_OR_KH_NVL                         
						 SET     DCZ_SQNO       = #dcz_sqno# 
						        ,KRI_NVL		= TRIM(#kri_nvl#)                                     
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     OPRK_RKI_ID     = #rki_id#                   
						 AND     BAS_YM       = #bas_ym#                               
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
		
	<process id="ORKR010905" name="KRI 대상건수 조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="kri_menu_dsc" name="KRI메뉴구분" parmid="kri_menu_dsc" attr="A" default_value=""/>
		<parm id="sch_bas_ym" 	name="기준년월" 		parmid="sch_bas_ym" 	attr="S" default_value=""/>
		<parm id="sch_brc" 		name="사무소코드" 	parmid="sch_brc" 			attr="S" default_value=""/>
		<parm id="jrdt_brc" 	name="소관부서코드" 	parmid="jrdt_brc" 			attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI 수기 데이터 입력 좌측 그리드 목록 조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						 SELECT 
								      COUNT(A.OPRK_RKI_ID) CNT
								      ,SUM(CASE WHEN A.KRI_NVL IS NOT NULL THEN 1 ELSE 0 END) INP_CNT
								      ,ROUND(SUM(CASE WHEN A.KRI_NVL IS NOT NULL THEN 1 ELSE 0 END)/NVL(DECODE(COUNT(A.OPRK_RKI_ID),0,1,COUNT(A.OPRK_RKI_ID)),1) * 100,2) INP_PCT
								  FROM TB_OR_KH_NVL A
								      ,TB_OR_KH_NVL_DCZ B
								      ,TB_OR_OM_ORGZ C
								      ,TB_OR_KH_BRC D
								      ,TB_OR_KH_RKISLT E
								      ,TB_OR_KM_RKI F
								 WHERE A.BAS_YM = B.BAS_YM
								   AND A.BRC = B.BRC
								   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID
								   AND A.DCZ_SQNO = B.DCZ_SQNO
								   AND A.GRP_ORG_C = B.GRP_ORG_C
								   AND A.BRC = C.BRC
								   AND C.BRC = D.BRC(+)
								   AND A.OPRK_RKI_ID = D.OPRK_RKI_ID(+)
								   AND A.BAS_YM = E.BAS_YM
								   AND A.OPRK_RKI_ID = E.OPRK_RKI_ID
								   AND A.OPRK_RKI_ID = F.OPRK_RKI_ID
								   AND F.COM_COL_PSB_YN = 'N'
								   AND A.BAS_YM	= TRIM(#sch_bas_ym#)
 
 					</data>
 				</sql>
 				<sql id="sql12" name="SQL12">
 					<condition id="cond111" name="kri_menu_dsc" variable="#kri_menu_dsc#" comparison="ne" value="3" />
 					<data id="data111" name="">
				            		 AND A.BRC = TRIM(#sch_brc#)
				    </data>
 				</sql>
 				<sql id="sql12" name="SQL12">
 					<condition id="cond111" name="sch_brc" variable="#sch_brc#" comparison="ne" value="" />
 					<data id="data111" name="">
				            		 AND A.BRC = TRIM(#sch_brc#)
				    </data>
 				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
		
	<!-- process id="ORKR010901" name="KRI입력 결과 조회공통코드 처리" forward="/kri/ORKR0109" forwardng="/comm/errorPage" resource="kri" grid_process_id=""-->
	<process id="ORKR011101" name="KRI입력 결과 조회공통코드 처리" forward="/kri/ORKR0111" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="brc" name="사무소" sessionid="brc" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="RKI_LVL_C"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="KRI평가일정조회 공통" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT /*KRI평가일정조회*/ 
			       			   A.BAS_YM /*기준년월*/  
			     			   , A.RKI_ST_DT AS EFCT_ST_DT /*모니터링시작일자*/ 
			     			   , A.RKI_ED_DT AS EFCT_ED_DT /*모니터링종료일자*/ 
			     			   , A.RKI_PRG_STSC /*리스크진행상태코드*/  
			     			   , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') AS FIR_INP_DTM /*전월마감일자*/  
			     			   , DECODE(A.BAS_YM,(SELECT MAX(BAS_YM) FROM TB_OR_OM_SCHD WHERE GRP_ORG_C=A.GRP_ORG_C),'Y','N') AS PRE_YN /*현재진행여부*/ 
			  			  FROM TB_OR_OM_SCHD A /*KRI평가일정관리기본*/ 
			 			 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
			 		</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="rki_prg_stsc == 3" variable="#rki_prg_stsc#" comparison="eq" value="3" />
					<data id="data111" name="">
				   		   AND A.RKI_PRG_STSC IN ('03','04')  
					</data>
				</sql>
				<sql id="sql13" name="SQL13">
 					<data id="data111" name="">
 					  ORDER BY BAS_YM DESC
			 		</data>
 				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit05" name="발생사무소조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
							   BRC
							   , BRNM                  		 
						  FROM TB_OR_OM_ORGZ        	
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)            	 
				      	   AND UYN = 'Y'                 	 
				      	   AND BR_LKO_YN = 'N'           	 
				    	   AND HOFC_BIZO_DSC = '03'      	 
						   AND ( BRC = TRIM(#brc#) 
						   	   OR 
						   	   UP_BRC = (SELECT UP_BRC 
						   	   			   FROM TB_OR_OM_ORGZ 
						   	    		  WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
						   	    		    AND BRC = TRIM(#brc#)
						   	    		)
						   	   )	
					  ORDER BY (CASE BRC WHEN TRIM(#brc#) THEN '0' ELSE '1' END)		
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
		

	<process id="ORKR011102" name="KRI입력 결과 조회(메인)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_ym" name="평가년월" parmid="sch_bas_ym" attr="S" default_value=""/>
		<parm id="sch_brc" name="적용사무소코드" parmid="sch_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="조치계획 이력관리 조회" type="S">
				<sql id="sql11" name="SQL11">
					<!-- data : SQL문의 정의 -->
					<data id="data111" name="">
					SELECT   TRIM(#bas_ym#) AS BAS_YM                                                     
						   , F.BRC APPLY_BRC      
						   , F.BRNM APPLY_BRC_NM                                              
						   , NVL(T_LV ,0) T_LV    
						   , NVL(R_LV ,0) R_LV     
						   , NVL(Y_LV ,0) Y_LV   
						   , NVL(G_LV ,0) G_LV  
						   , F."LEVEL"
						   , NVL(F.ORGZ_CFC, 'N') AS ORGZ_CFC																
						   , NVL(F.LWST_ORGZ_YN, 'N') AS LWST_ORGZ_YN														
						   , NVL(F.UYN, 'N') AS UYN	   
					  FROM 
						    (					
								SELECT																				            
										 GRP_ORG_C																					
									   , BRC																						
									   , UP_BRC																						
									   , BRNM
									   , LVL_NO AS "LEVEL"
									   , NVL(ORGZ_CFC, 'N') AS ORGZ_CFC																
									   , NVL(LWST_ORGZ_YN, 'N') AS LWST_ORGZ_YN														
									   , NVL(UYN, 'N') AS UYN
									   , HOFC_BIZO_DSC
								 FROM (																						
								     SELECT DISTINCT *																			
								       FROM TB_OR_OM_ORGZ																
								      WHERE GRP_ORG_C = TRIM('01')																	
								        AND UYN = 'Y'																			
								        AND BR_LKO_YN = 'N'																		
								      START WITH HOFC_BIZO_DSC IS NOT NULL																								
						 			AND (UPPER(BRNM) LIKE '%' || UPPER(TRIM('')) || '%' 											
						 				OR UPPER(BRC) LIKE '%' || UPPER(TRIM('')) || '%') 											
					
								    	CONNECT BY PRIOR UP_BRC = BRC																
								 			)	A																							
							 		    START WITH HOFC_BIZO_DSC = '01'																	
							 	 		CONNECT BY PRIOR BRC = UP_BRC																	
							 			ORDER SIBLINGS BY BRC	
						    ) F, 
						    (
								SELECT  
								       TRIM('') AS BAS_YM    
								       , B.UP_BRC
								       , B.BRC APPLY_BRC                                                
								       , B.BRNM APPLY_BRC_NM 
								       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 
								                  WHEN A.KRI_GRDNM='YELLOW' THEN 1
								                  WHEN A.KRI_GRDNM='GREEN'  THEN 1 
								                  ELSE 0 END) T_LV                                                           
								       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 ELSE 0 END) R_LV      
								       , SUM(CASE WHEN A.KRI_GRDNM='YELLOW' THEN 1 ELSE 0 END) Y_LV    
								       , SUM(CASE WHEN A.KRI_GRDNM='GREEN'  THEN 1 ELSE 0 END) G_LV    
								  FROM (SELECT X.GRP_ORG_C, X.BRC, Y.UP_BRC, X.KRI_GRDNM, X.BAS_YM
								          FROM TB_OR_KS_RKI_BR_SMST X           
								             , TB_OR_OM_ORGZ Y   
								         WHERE X.GRP_ORG_C(+) = Y.GRP_ORG_C     
								           AND X.BRC          = Y.BRC
								           AND 'Y'            = Y.UYN
								           AND X.BAS_YM(+)    = TRIM(#sch_bas_ym#)
								       ) A                                 
								     , TB_OR_OM_ORGZ B   
								 WHERE A.GRP_ORG_C(+) = B.GRP_ORG_C                                   
								   AND A.BRC(+)       = B.BRC                                         
								   AND B.UYN          = 'Y'                                                     
								   AND B.LVL_NO       = '3'  
								   AND B.GRP_ORG_C    = TRIM('01') 	
								GROUP BY B.BRC,B.BRNM , B.UP_BRC
								UNION ALL
								SELECT  
								       TRIM('') AS BAS_YM    
								       , B.UP_BRC
								       , B.BRC APPLY_BRC                                                
								       , B.BRNM APPLY_BRC_NM 
								       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 
								                  WHEN A.KRI_GRDNM='YELLOW' THEN 1
								                  WHEN A.KRI_GRDNM='GREEN'  THEN 1 
								                  ELSE 0 END) T_LV                                                           
								       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 ELSE 0 END) R_LV      
								       , SUM(CASE WHEN A.KRI_GRDNM='YELLOW' THEN 1 ELSE 0 END) Y_LV    
								       , SUM(CASE WHEN A.KRI_GRDNM='GREEN'  THEN 1 ELSE 0 END) G_LV    
								  FROM (SELECT X.GRP_ORG_C, X.BRC, Y.UP_BRC, X.KRI_GRDNM, X.BAS_YM
								          FROM TB_OR_KS_RKI_BR_SMST X           
								             , TB_OR_OM_ORGZ Y   
								         WHERE X.GRP_ORG_C(+) = Y.GRP_ORG_C     
								           AND X.BRC          = Y.BRC
								           AND 'Y'            = Y.UYN
								           AND X.BAS_YM(+)    = TRIM(#sch_bas_ym#)
								        ) A                                 
								     , TB_OR_OM_ORGZ B   
								 WHERE A.GRP_ORG_C(+) = B.GRP_ORG_C                                   
								   AND A.UP_BRC(+)    = B.BRC                                         
								   AND B.UYN          = 'Y'                                                     
								   AND B.LVL_NO       = '2'  
								   AND B.GRP_ORG_C    = TRIM('01') 	
								GROUP BY B.BRC,B.BRNM , B.UP_BRC
								UNION ALL
								SELECT  
								       TRIM('') AS BAS_YM    
								       , B.UP_BRC
								       , B.BRC APPLY_BRC                                                
								       , B.BRNM APPLY_BRC_NM 
								       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 
								                  WHEN A.KRI_GRDNM='YELLOW' THEN 1
								                  WHEN A.KRI_GRDNM='GREEN'  THEN 1 
								                  ELSE 0 END) T_LV                                                           
								       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 ELSE 0 END) R_LV      
								       , SUM(CASE WHEN A.KRI_GRDNM='YELLOW' THEN 1 ELSE 0 END) Y_LV    
								       , SUM(CASE WHEN A.KRI_GRDNM='GREEN'  THEN 1 ELSE 0 END) G_LV    
								  FROM (SELECT X.GRP_ORG_C, X.BRC, Y.UP_BRC, X.KRI_GRDNM, X.BAS_YM
								          FROM TB_OR_KS_RKI_BR_SMST X           
								             , TB_OR_OM_ORGZ Y   
								         WHERE X.GRP_ORG_C(+) = Y.GRP_ORG_C     
								           AND X.BRC          = Y.BRC
								           AND 'Y'            = Y.UYN
								           AND X.BAS_YM(+)    = TRIM(#sch_bas_ym#)
								       ) A                                 
								     , TB_OR_OM_ORGZ B   
								 WHERE A.GRP_ORG_C = B.GRP_ORG_C                                   
								   AND A.BRC    = B.BRC                                         
								   AND B.UYN          = 'Y'                                                     
								   AND B.LVL_NO       = '2'  
								   AND B.GRP_ORG_C    = TRIM('01') 	
								GROUP BY B.BRC,B.BRNM , B.UP_BRC
								UNION ALL
								SELECT  
								       TRIM('') AS BAS_YM    
								       , Y.UP_BRC
								       , Y.BRC APPLY_BRC                                                
								       , Y.BRNM APPLY_BRC_NM 
								       , SUM(T_LV) T_LV                                                           
								       , SUM(R_LV) R_LV      
								       , SUM(Y_LV) Y_LV    
								       , SUM(G_LV) G_LV       
								  FROM (SELECT  
							                   TRIM('') AS BAS_YM    
							                   , B.UP_BRC
							                   , B.BRC APPLY_BRC                                                
							                   , B.BRNM APPLY_BRC_NM 
							                   , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 
							                              WHEN A.KRI_GRDNM='YELLOW' THEN 1
							                              WHEN A.KRI_GRDNM='GREEN'  THEN 1 
							                              ELSE 0 END) T_LV                                                           
							                   , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 ELSE 0 END) R_LV      
							                   , SUM(CASE WHEN A.KRI_GRDNM='YELLOW' THEN 1 ELSE 0 END) Y_LV    
							                   , SUM(CASE WHEN A.KRI_GRDNM='GREEN'  THEN 1 ELSE 0 END) G_LV    
							              FROM (SELECT X.GRP_ORG_C, X.BRC, Y.UP_BRC, X.KRI_GRDNM, X.BAS_YM
							                      FROM TB_OR_KS_RKI_BR_SMST X           
							                         , TB_OR_OM_ORGZ Y   
							                     WHERE X.GRP_ORG_C(+) = Y.GRP_ORG_C     
							                       AND X.BRC          = Y.BRC
							                       AND 'Y'            = Y.UYN
							                       AND X.BAS_YM(+)    = TRIM(#sch_bas_ym#)
							                   ) A                                 
							                 , TB_OR_OM_ORGZ B   
							             WHERE A.GRP_ORG_C = B.GRP_ORG_C                                   
							               AND A.UP_BRC    = B.BRC                                         
							               AND B.UYN          = 'Y'                                                     
							               AND B.LVL_NO       = '2'  
							               AND B.GRP_ORG_C    = TRIM('01') 	
							            GROUP BY B.BRC,B.BRNM , B.UP_BRC
							            UNION ALL
							            SELECT  
							                   TRIM('') AS BAS_YM    
							                   , B.UP_BRC
							                   , B.BRC APPLY_BRC                                                
							                   , B.BRNM APPLY_BRC_NM 
							                   , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 
							                              WHEN A.KRI_GRDNM='YELLOW' THEN 1
							                              WHEN A.KRI_GRDNM='GREEN'  THEN 1 
							                              ELSE 0 END) T_LV                                                           
							                   , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 ELSE 0 END) R_LV      
							                   , SUM(CASE WHEN A.KRI_GRDNM='YELLOW' THEN 1 ELSE 0 END) Y_LV    
							                   , SUM(CASE WHEN A.KRI_GRDNM='GREEN'  THEN 1 ELSE 0 END) G_LV    
							              FROM (SELECT X.GRP_ORG_C, X.BRC, Y.UP_BRC, X.KRI_GRDNM, X.BAS_YM
							                      FROM TB_OR_KS_RKI_BR_SMST X           
							                         , TB_OR_OM_ORGZ Y   
							                     WHERE X.GRP_ORG_C(+) = Y.GRP_ORG_C     
							                       AND X.BRC          = Y.BRC
							                       AND 'Y'            = Y.UYN
							                       AND X.BAS_YM(+)    = TRIM(#sch_bas_ym#)
							                   ) A                                 
							                 , TB_OR_OM_ORGZ B   
							             WHERE A.GRP_ORG_C = B.GRP_ORG_C                                   
							               AND A.BRC    = B.BRC                                         
							               AND B.UYN          = 'Y'                                                     
							               AND B.LVL_NO       = '2'  
							               AND B.GRP_ORG_C    = TRIM('01') 	
							            GROUP BY B.BRC,B.BRNM , B.UP_BRC
								       ) X                                 
								     , TB_OR_OM_ORGZ Y   
								 WHERE 1 = 1 --S.GRP_ORG_C(+) = T.GRP_ORG_C                                   
								   AND X.UP_BRC(+)       = Y.BRC                                         
								   AND Y.UYN          = 'Y'                                                     
								   AND Y.LVL_NO       = '1'  
								   AND Y.GRP_ORG_C    = TRIM('01') 	
								GROUP BY Y.BRC,Y.BRNM , Y.UP_BRC
								UNION ALL
								SELECT   TRIM('') AS BAS_YM    
								       , T.UP_BRC
								       , T.BRC APPLY_BRC                                                
								       , T.BRNM APPLY_BRC_NM 
								       , SUM(T_LV) T_LV                                                           
								       , SUM(R_LV) R_LV      
								       , SUM(Y_LV) Y_LV    
								       , SUM(G_LV) G_LV    
								  FROM 
								    (
								     SELECT  
								           TRIM('') AS BAS_YM    
								           , Y.UP_BRC
								           , Y.BRC APPLY_BRC                                                
								           , Y.BRNM APPLY_BRC_NM 
								           , SUM(T_LV) T_LV                                                           
								           , SUM(R_LV) R_LV      
								           , SUM(Y_LV) Y_LV    
								           , SUM(G_LV) G_LV       
								      FROM (SELECT  
							                       TRIM('') AS BAS_YM    
							                       , B.UP_BRC
							                       , B.BRC APPLY_BRC                                                
							                       , B.BRNM APPLY_BRC_NM 
							                       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 
							                                  WHEN A.KRI_GRDNM='YELLOW' THEN 1
							                                  WHEN A.KRI_GRDNM='GREEN'  THEN 1 
							                                  ELSE 0 END) T_LV                                                           
							                       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 ELSE 0 END) R_LV      
							                       , SUM(CASE WHEN A.KRI_GRDNM='YELLOW' THEN 1 ELSE 0 END) Y_LV    
							                       , SUM(CASE WHEN A.KRI_GRDNM='GREEN'  THEN 1 ELSE 0 END) G_LV    
							                  FROM (SELECT X.GRP_ORG_C, X.BRC, Y.UP_BRC, X.KRI_GRDNM, X.BAS_YM
							                          FROM TB_OR_KS_RKI_BR_SMST X           
							                             , TB_OR_OM_ORGZ Y   
							                         WHERE X.GRP_ORG_C(+) = Y.GRP_ORG_C     
							                           AND X.BRC          = Y.BRC
							                           AND 'Y'            = Y.UYN
							                           AND X.BAS_YM(+)    = TRIM(#sch_bas_ym#)
							                       ) A                                 
							                     , TB_OR_OM_ORGZ B   
							                 WHERE A.GRP_ORG_C = B.GRP_ORG_C                                   
							                   AND A.UP_BRC    = B.BRC                                         
							                   AND B.UYN          = 'Y'                                                     
							                   AND B.LVL_NO       = '2'  
							                   AND B.GRP_ORG_C    = TRIM('01') 	
							                GROUP BY B.BRC,B.BRNM , B.UP_BRC
							                UNION ALL
							                SELECT  
							                       TRIM('') AS BAS_YM    
							                       , B.UP_BRC
							                       , B.BRC APPLY_BRC                                                
							                       , B.BRNM APPLY_BRC_NM 
							                       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 
							                                  WHEN A.KRI_GRDNM='YELLOW' THEN 1
							                                  WHEN A.KRI_GRDNM='GREEN'  THEN 1 
							                                  ELSE 0 END) T_LV                                                           
							                       , SUM(CASE WHEN A.KRI_GRDNM='RED' 	THEN 1 ELSE 0 END) R_LV      
							                       , SUM(CASE WHEN A.KRI_GRDNM='YELLOW' THEN 1 ELSE 0 END) Y_LV    
							                       , SUM(CASE WHEN A.KRI_GRDNM='GREEN'  THEN 1 ELSE 0 END) G_LV    
							                  FROM (SELECT X.GRP_ORG_C, X.BRC, Y.UP_BRC, X.KRI_GRDNM, X.BAS_YM
							                          FROM TB_OR_KS_RKI_BR_SMST X           
							                             , TB_OR_OM_ORGZ Y   
							                         WHERE X.GRP_ORG_C(+) = Y.GRP_ORG_C     
							                           AND X.BRC          = Y.BRC
							                           AND 'Y'            = Y.UYN
							                           AND X.BAS_YM(+)    = TRIM(#sch_bas_ym#)
							                       ) A                                 
							                     , TB_OR_OM_ORGZ B   
							                 WHERE A.GRP_ORG_C = B.GRP_ORG_C                                   
							                   AND A.BRC    = B.BRC                                         
							                   AND B.UYN          = 'Y'                                                     
							                   AND B.LVL_NO       = '2'  
							                   AND B.GRP_ORG_C    = TRIM('01') 	
							                GROUP BY B.BRC,B.BRNM , B.UP_BRC
								           ) X                                 
								         , TB_OR_OM_ORGZ Y   
								     WHERE 1 = 1 --S.GRP_ORG_C(+) = T.GRP_ORG_C                                   
								       AND X.UP_BRC       = Y.BRC                                         
								       AND Y.UYN          = 'Y'                                                     
								       AND Y.LVL_NO       = '1'  
								       AND Y.GRP_ORG_C    = TRIM('01') 	
								    GROUP BY Y.BRC,Y.BRNM , Y.UP_BRC
								    ) S,  TB_OR_OM_ORGZ T
								 WHERE S.UP_BRC(+)    = T.BRC                                         
								   AND T.UYN          = 'Y'                                                     
								   AND T.LVL_NO       = '0'  
								   AND T.GRP_ORG_C    = TRIM('01') 	
								 GROUP BY T.BRC,T.BRNM , T.UP_BRC
						 	) G
					 WHERE F.BRC = G.APPLY_BRC(+)  
 					 START WITH F.HOFC_BIZO_DSC = '01'																	
					 CONNECT BY PRIOR F.BRC = F.UP_BRC																	
					 ORDER SIBLINGS BY F.BRC						 		
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>


	<process id="ORKR011103" name="KRI입력 결과 조회(상세)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="#sch_bas_ym#" name="평가년월" 	parmid="#sch_bas_ym#" attr="S" default_value=""/>
		<parm id="#sch_brc#" 	name="사무소코드" parmid="#sch_brc#" attr="S" default_value=""/>
		<parm id="sch_apply_brc" name="적용사무소구분코드(     )" parmid="sch_apply_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="조치계획 이력관리 조회" type="S">
 				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
							     A.BAS_YM 
	                 		   , A.OPRK_RKI_ID RKI_ID   /*KRI 아이디*/
	                 		   , A.OPRK_RKINM RKINM   /*KRI 내용*/
	                 		   , A.KRI_NVL    /*KRI 값*/
	                 		   , A.RKI_UNT_C    /*리스크지표단위코드*/
	                 		   , A.KRI_UNTNM RKI_UNT_C_NM     /*리스크지표단위명*/
	                 		   , A.KRI_GRDNM KRI_LVL_NM    /*등급 RED,GREEN,YELLO,WHITE*/
	                 		   , A.KRI_LMT_DSC    /*한도구분코드*/
	                 		   , ( SELECT E.INTG_IDVD_CNM 	/*한도명*/
	                 		   		 FROM TB_OR_OM_CODE E    
	                   			    WHERE A.GRP_ORG_C = E.GRP_ORG_C
	                   			      AND A.KRI_LMT_DSC = E.IDVDC_VAL 
	                   			      AND E.INTG_GRP_C = 'KRI_LMT_DSC' 
	                   			      AND E.C_UYN = 'Y'
	                   			 ) KRI_LMT_CNM 
	                 		   , A.SC1_LMT_VAL SC1_MAX_TRH        /*1차한도*/
	                 		   , A.SQ2_LMT_VAL SC2_MAX_TRH      /*2차한도*/
	                 		   , B.OPRK_RKI_ID DETAIL_RKI_ID
	                 		   , C.BRNM /*사무소명*/
	                 	  FROM TB_OR_KS_RKI_BR_SMST A
	                 	  LEFT JOIN TB_OR_KH_INF B
	                 	    ON A.GRP_ORG_C 		= B.GRP_ORG_C                                                                                   
	                 	   AND A.OPRK_RKI_ID 	= B.OPRK_RKI_ID    
	                 	  LEFT JOIN TB_OR_OM_ORGZ C
    						ON  A.GRP_ORG_C 	= C.GRP_ORG_C 
    					   AND A.BRC       		= C.BRC                                                                               
	                 	 WHERE A.GRP_ORG_C 	= TRIM(#grp_org_c#)                                                                                           
	                 	   AND A.BAS_YM 	= TRIM(#sch_bas_ym#)                                                                                           
	                 	   AND A.BRC 		= TRIM(#sch_apply_brc#)                                                                                           
	                  ORDER BY A.OPRK_RKI_ID      
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<!-- process id="ORKR011001" name="KRI 입력 결과 조회 상세" forward="/kri/ORKR0110" forwardng="/comm/errorPage" resource="kri" grid_process_id=""-->
	<process id="ORKR011201" name="KRI 입력 결과 조회 상세" forward="/kri/ORKR0112" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="rki_prg_stsc" name="리스크진행상태코드" sessionid="rki_prg_stsc" object="String" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="KRI평가일정조회 공통" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT /*KRI평가일정조회*/ 
			       			   A.BAS_YM /*기준년월*/  
			     			   , A.RKI_ST_DT AS EFCT_ST_DT /*모니터링시작일자*/ 
			     			   , A.RKI_ED_DT AS EFCT_ED_DT /*모니터링종료일자*/ 
			     			   , A.RKI_PRG_STSC /*리스크진행상태코드*/  
			     			   , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') AS FIR_INP_DTM /*전월마감일자*/  
			     			   , DECODE(A.BAS_YM,(SELECT MAX(BAS_YM) FROM TB_OR_OM_SCHD WHERE GRP_ORG_C=A.GRP_ORG_C),'Y','N') AS PRE_YN /*현재진행여부*/ 
			  			  FROM TB_OR_OM_SCHD A /*KRI평가일정관리기본*/ 
			 			 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
			 		</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="rki_prg_stsc == 3" variable="#rki_prg_stsc#" comparison="eq" value="3" />
					<data id="data111" name="">
				   		   AND A.RKI_PRG_STSC IN ('03','04')  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011002" name="당월발생현황" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<parm id="all_gubun" name="전행구분" parmid="all_gubun" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="당월발생현황" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
				   		SELECT /* 당월발생현황*/ 
			       			   A.BAS_YM /*기준년월*/  
			     			   , A.KRI_NVL /*핵심리스크지표추치*/  
			     			   , A.KRI_GRDNM /*핵심리스크지표등급명*/  
			     			   , A.KRI_LMT_DSC /*핵심리스크지표한도구분코드*/  
			     			   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE INTG_GRP_C='KRI_LMT_DSC' AND IDVDC_VAL=A.KRI_LMT_DSC AND GRP_ORG_C = A.GRP_ORG_C) AS KRI_LMT_DSC_NM /*핵심리스크지표한도구분*/ 
			     			   , DECODE(A.KRI_LMT_DSC,'03',B.RYR1_AVL,'04',B.BFYY_AVL,NULL) AS KRI_AVL /*평균값*/  
			     			   , A.SC1_LMT_VAL SC1_MAX_TRH /*1차상한임계치*/  
			     			   , A.SQ2_LMT_VAL SC2_MAX_TRH /*2차상한임계치*/  
			     			   , C.AFLCO_TT_VAL/C.AFLCO_ORGZ_CN AS RYR1_AVL /*전행 최근1년평균값*/ 
			  			  FROM TB_OR_KS_RKI_BR_SMST A 
			     			   , TB_OR_KH_LMT B 
			     			   , TB_OR_KS_RKI_SMST C 
			 			 WHERE A.GRP_ORG_C = B.GRP_ORG_C(+)  
			   			   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID(+)  
			   			   AND A.BAS_YM = B.BAS_YM(+)  
			   			   AND A.BRC = B.BRC(+)  
						   AND A.GRP_ORG_C = C.GRP_ORG_C(+)  
						   AND A.OPRK_RKI_ID = C.OPRK_RKI_ID(+)  
						   AND A.BAS_YM = C.BAS_YM(+)  
						   AND A.GRP_ORG_C = TRIM(#grp_org_c#)  
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#) /*리스크지표ID*/  
						   AND A.BAS_YM = TRIM(#bas_ym#) /*기준년월*/  
						   AND A.BRC = TRIM(#brc#) /*적용사무소*/    
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process> 
	
	<process id="ORKR011003" name="최근1년KRI발생현황(등급)" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<parm id="all_gubun" name="전행구분" parmid="all_gubun" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="최근1년KRI발생현황(등급)" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT /*ORKR0110S2 최근1년KRI발생현황(등급)*/ 
			        		   MAX(KRI_NVL12) KRI_NVL12  
			      			   , MAX(KRI_NVL11) KRI_NVL11  
			      			   , MAX(KRI_NVL10) KRI_NVL10  
						       , MAX(KRI_NVL9) KRI_NVL9  
						       , MAX(KRI_NVL8) KRI_NVL8  
						       , MAX(KRI_NVL7) KRI_NVL7  
						       , MAX(KRI_NVL6) KRI_NVL6  
						       , MAX(KRI_NVL5) KRI_NVL5  
						       , MAX(KRI_NVL4) KRI_NVL4  
						       , MAX(KRI_NVL3) KRI_NVL3  
						       , MAX(KRI_NVL2) KRI_NVL2  
						       , MAX(KRI_NVL1) KRI_NVL1  
						       , MAX(RYR1_AVL) RYR1_AVL /*1년평균값*/ 
			   			  FROM ( SELECT DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-11),'YYYYMM'), KRI_NVL) KRI_NVL12  
				               		    , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-10),'YYYYMM'), KRI_NVL) KRI_NVL11  
				               			, DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-9),'YYYYMM'), KRI_NVL) KRI_NVL10  
						                , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-8),'YYYYMM'), KRI_NVL) KRI_NVL9  
						                , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-7),'YYYYMM'), KRI_NVL) KRI_NVL8  
						                , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-6),'YYYYMM'), KRI_NVL) KRI_NVL7  
						                , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-5),'YYYYMM'), KRI_NVL) KRI_NVL6  
						                , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-4),'YYYYMM'), KRI_NVL) KRI_NVL5  
						                , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-3),'YYYYMM'), KRI_NVL) KRI_NVL4  
						                , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-2),'YYYYMM'), KRI_NVL) KRI_NVL3  
						                , DECODE(BAS_YM, TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-1),'YYYYMM'), KRI_NVL) KRI_NVL2  
						                , DECODE(BAS_YM, TRIM(#bas_ym#), KRI_NVL) KRI_NVL1  
						                , DECODE(BAS_YM, 'AVG', KRI_NVL) RYR1_AVL  
			           			   FROM ( SELECT BAS_YM  
			                      		  		 , ROUND(KRI_NVL,1)||'('||SUBSTR(KRI_GRDNM,1,1)||')' KRI_NVL  
			                   			    FROM TB_OR_KS_RKI_BR_SMST 
			                  		       WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			                    			 AND OPRK_RKI_ID = TRIM(#rki_id#)  
						                     AND BAS_YM &lt;= TRIM(#bas_ym#)  
						                     AND BAS_YM &gt;= TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-11),'YYYYMM')  
						                     AND BRC = TRIM(#brc#)  
			         				   UNION ALL  
			            				  SELECT 'AVG' AS BAS_YM  
			                   					 , TO_CHAR(AVG(KRI_NVL),'99.99') AS RYR1_AVL /*최근1년평균값*/ 
			              				    FROM TB_OR_KS_RKI_BR_SMST 
			                  			   WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
						                     AND OPRK_RKI_ID = TRIM(#rki_id#)  
						                     AND BAS_YM BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(TRIM(#bas_ym#),'YYYYMM'),-11),'YYYYMM') AND TRIM(#bas_ym#) 
						                     AND BRC = TRIM(#brc#)  
						                ORDER BY BAS_YM DESC  
			                			)  
			        			) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011004" name="기간별KRI발생내역조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_y_from" name="조회시작년" parmid="sch_bas_y_from" attr="S" default_value=""/>
		<parm id="sch_bas_m_from" name="조회시작월" parmid="sch_bas_m_from" attr="S" default_value=""/>
		<parm id="sch_bas_y_to" name="조회종료년" parmid="sch_bas_y_to" attr="S" default_value=""/>
		<parm id="sch_bas_m_to" name="조회종료월" parmid="sch_bas_m_to" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<parm id="all_gubun" name="전행구분" parmid="all_gubun" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="기간별KRI발생내역조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT /* 기간별KRI발생내역조회*/ 													  
			       			   BAS_YM /*기준년월*/ 														 
			     			   , ROUND(KRI_NVL,1)||'('||SUBSTR(KRI_GRDNM,1,1)||')' KRI_NVL /*KRI발생건수*/	 
			  			  FROM TB_OR_KS_RKI_BR_SMST 												
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#) 													 
			   			   AND OPRK_RKI_ID = TRIM(#rki_id#) 												 
			   			   <!-- AND BAS_YM &lt;= TRIM(#sch_bas_y_to#)||TRIM(#sch_bas_m_to#) 											 
			   			   AND BAS_YM &gt;= TRIM(#sch_bas_y_from#)||TRIM(#sch_bas_m_from#) --> 											 
			   			   AND BRC = TRIM(#brc#) 														 
			 		  ORDER BY BAS_YM DESC 														
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	
	<process id="ORKR011005" name="기간별KRI발생내역상세조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch2_bas_ym" name="기준년월" parmid="sch2_bas_ym" attr="S" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<parm id="all_gubun" name="전행구분" parmid="all_gubun" attr="S" default_value=""/>
		<parm id="hofc_bizo_dsc" name="영업점본부구분" parmid="hofc_bizo_dsc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="기간별KRI발생내역상세조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT OPRK_RKI_ID
							   , REL_TBLNM
							   , RK_HDNG_NO
							   , CLMN_PHNM
							   , CLMN_LOGLNM
							   , AMN_ORGZ_YN   
				  		  FROM TB_OR_KH_HDNG                                                     	 
				 		 WHERE OPRK_RKI_ID = TRIM(#rki_id#)                                                     
				  		   AND GRP_ORG_C = TRIM(#grp_org_c#)                                                        
				 	  ORDER BY RK_HDNG_NO                                                             
					</data>
				</sql>
				<result id="vList1" name="vList1" attrname="vList1" type="vector_entitybean"/>
				<exitmethod id="exit" name="기간별KRI발생내역상세조회처리" libid="lib1" classname="KriExitProc" method="ORKR0110_01"/>
			</unit>
		</group>
	</process>

	<!-- process id="ORKR011101" name="대응방안 및 실행결과 입력" forward="/kri/ORKR0111" forwardng="/comm/errorPage" resource="kri" grid_process_id=""-->
	<process id="ORKR011401" name="대응방안 및 실행결과 입력" forward="/kri/ORKR0114" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="brc" name="사무소코드" sessionid="brc" object="String"/>
		<group id="grp01" name="grp01" type="S">
		   <!-- 향후 RC(리스크카테고리) 레벨 처리용 수정해야 함.  --> 
			<unit id="unit01" name="평가년월 조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
			    			   -- REGEXP_REPLACE(BAS_YM,'([[:digit:]]{4})([[:digit:]]{2})','\1-\2') BAS_YM
			    			   BAS_YM  
			 			  FROM TB_OR_OM_SCHD 
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			    		   -- AND RKI_PRG_STSC IN ('03','04')  
			    		   AND BAS_YM BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYYMM') AND TO_CHAR(SYSDATE,'YYYYMM')  
			 		  ORDER BY BAS_YM DESC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit02" name="영업본부조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT BRC
							   , BRNM
			  			  FROM TB_OR_OM_ORGZ 
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			   			   AND UP_BRC = ( SELECT UP_BRC 
			   			   				    FROM TB_OR_OM_ORGZ 
			   			   				   WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
			   			   				     AND BRC = TRIM(#brc#)
			   			   				) 
			   			   AND HOFC_BIZO_DSC = '03'  
			   			   AND UYN = 'Y'  
			 		  ORDER BY BRNM 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit05" name="발생사무소조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
							   BRC
							   , BRNM                  		 
						  FROM TB_OR_OM_ORGZ        	
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
				    	   AND UYN = 'Y'                 	 
				    	   AND BR_LKO_YN = 'N'           	 
				    	   AND HOFC_BIZO_DSC = '03'      	 
						   AND ( BRC = TRIM(#brc#) OR UP_BRC = ( SELECT UP_BRC 
						   									       FROM TB_OR_OM_ORGZ 
						   									  	  WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   									    	AND BRC = TRIM(#brc#)
						   									    )
						       )	
					  ORDER BY (CASE BRC WHEN TRIM(#brc#) THEN '0' ELSE '1' END)		
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	<!-- process id="ORKR011102" name="조치계획 현황 목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id=""-->
	<process id="ORKR011402" name="조치계획 현황 목록 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="hd_bas_ym" name="기준년월" parmid="hd_bas_ym" attr="S" default_value=""/>
		<parm id="hd_apl_brc" name="적용사무소코드" parmid="hd_apl_brc" attr="S" default_value=""/>
		<parm id="sch_rkinm" name="리스크지표명" parmid="sch_rkinm" attr="S" default_value=""/>
		<parm id="st_inp_stsc" name="입력상태" parmid="st_inp_stsc" attr="S" default_value=""/>
		<parm id="st_dcz_stsc" name="결재상태" parmid="st_dcz_stsc" attr="S" default_value=""/>
		<parm id="hd_hofc_bizo_dsc" name="본부영업점구분코드" parmid="hd_hofc_bizo_dsc" attr="S" default_value=""/>
		<parm id="hd_hofc_bizo_menu_yn" name="영업본부및하위조직메뉴유무" parmid="hd_hofc_bizo_menu_yn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="조치계획 현황 목록  조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 											
							     A.BRC AS APL_BRC										
				  			   , H.BRNM APL_BRNM								
				  			   , A.OPRK_RKI_ID RKI_ID						
				  			   , D.OPRK_RKINM RKINM							
				  			   , D.RKI_LVL_C									
				  			   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE A.GRP_ORG_C=GRP_ORG_C AND D.RKI_LVL_C=IDVDC_VAL AND INTG_GRP_C='RKI_LVL_C') RKI_LVL_NM								
				  			   , E.KRI_GRDNM 								
				  			   , F.KRI_GRDNM SND_GRDNM						
				  			   , G.KRI_GRDNM THD_GRDNM						
				  			   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE A.GRP_ORG_C=GRP_ORG_C AND D.RKI_UNT_C=IDVDC_VAL AND INTG_GRP_C='RKI_UNT_C') RKI_UNT_NM								
 				  			   , A.CAS_DTL_CNTN								
				  			   , A.CFT_PLAN_CNTN								
							   , A.EXE_RZT_CNTN								
							   , C.RTN_CNTN									
							   , C.DCZ_DT DRUP_DT							
							   , C.ACT_DCZ_STSC								
							   , A.BAS_YM									
							   , I.CFT_PLAN_CNTN SND_PLAN_CNTN		
							   , (SELECT BRNM FROM TB_OR_OM_ORGZ WHERE GRP_ORG_C = J.GRP_ORG_C AND BRC = J.BRC ) AS JRDT_BRNM	
							   , E.KRI_NVL	
							   , TO_CHAR(TO_DATE(A.ACT_ED_DT), 'YYYY-MM-DD') AS ACT_ED_DT
					      FROM   TB_OR_KM_ACT A				
					           , TB_OR_KH_LMT B				
					           , TB_OR_KH_ACT_DCZ C			
					           , TB_OR_KM_RKI D				
					           , TB_OR_KS_RKI_BR_SMST E		
					           , TB_OR_KS_RKI_BR_SMST F		
					           , TB_OR_KS_RKI_BR_SMST G		
					           , TB_OR_OM_ORGZ H				
					           , TB_OR_KM_ACT I		
					           , TB_OR_KH_BRC J		
					     WHERE A.GRP_ORG_C = B.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = B.OPRK_RKI_ID 			
					       AND A.BRC = B.BRC							
					       AND A.BAS_YM = B.BAS_YM					
					       AND A.GRP_ORG_C = C.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = C.OPRK_RKI_ID(+) 		
					       AND A.BRC = C.BRC(+)						
					       AND A.BAS_YM = C.BAS_YM(+)					
					       AND A.DCZ_SQNO = C.DCZ_SQNO(+)				
					       AND A.GRP_ORG_C = D.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = D.OPRK_RKI_ID	 		
					       AND A.GRP_ORG_C = E.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = E.OPRK_RKI_ID	 		
					       AND A.BRC = E.BRC	 						
					       AND A.BAS_YM = E.BAS_YM	 				
					       AND A.GRP_ORG_C = F.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = F.OPRK_RKI_ID(+) 		
					       AND A.BRC = F.BRC(+)						
					       AND TO_CHAR(ADD_MONTHS(TO_DATE(A.BAS_YM,'YYYYMM'), -1),'YYYYMM') = F.BAS_YM(+)				
					       AND A.GRP_ORG_C = G.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = G.OPRK_RKI_ID(+) 		
					       AND A.BRC = G.BRC(+)						
					       AND TO_CHAR(ADD_MONTHS(TO_DATE(A.BAS_YM,'YYYYMM'), -2),'YYYYMM') = G.BAS_YM(+)				
					       AND A.GRP_ORG_C = H.GRP_ORG_C				
					       AND A.BRC = H.BRC	 						
					       AND H.UYN = 'Y'	 							
					       AND H.KRI_ORGZ_YN = 'Y'	 					
					       AND A.GRP_ORG_C = I.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = I.OPRK_RKI_ID(+) 		
					       AND A.BRC = I.BRC(+)						
					       AND TO_CHAR(ADD_MONTHS(TO_DATE(A.BAS_YM,'YYYYMM'), -1),'YYYYMM') = I.BAS_YM(+)				
						   AND A.GRP_ORG_C = TRIM(#grp_org_c#)           
						   AND D.GRP_ORG_C = J.GRP_ORG_C
   						   AND D.OPRK_RKI_ID = J.OPRK_RKI_ID
						   AND A.BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))    
					</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="hd_apl_brc != null" variable="#hd_apl_brc#" comparison="ne" value="" />
					<condition id="cond112" name="hd_hofc_bizo_menu_yn == Y" variable="#hd_hofc_bizo_menu_yn#" comparison="eq" value="Y" />
					<data id="data11" name="">
					   	   AND D.UP_BRC = (SELECT UP_BRC FROM TB_OR_OM_ORGZ WHERE BRC = TRIM(#hd_apl_brc#))
					</data>
				</sql>
				<sql id="sql13" name="SQL13">
					<condition id="cond111" name="hd_apl_brc != null" variable="#hd_apl_brc#" comparison="ne" value="" />
					<condition id="cond112" name="hd_hofc_bizo_menu_yn != Y" variable="#hd_hofc_bizo_menu_yn#" comparison="ne" value="Y" />
					<data id="data11" name="">
					   	   <!-- AND A.BRC = TRIM(#hd_apl_brc#) --> 
					</data>
				</sql>
				<sql id="sql14" name="SQL14">
					<condition id="cond111" name="sch_rkinm != null" variable="#sch_rkinm#" comparison="ne" value="" />
					<data id="data11" name="">
					   	   AND UPPER(D.OPRK_RKINM) LIKE '%' || (TRIM(#sch_rkinm#)) || '%'  
					</data>
				</sql>
				<sql id="sql15" name="SQL15">
					<condition id="cond111" name="st_dcz_stsc == 1" variable="#st_dcz_stsc#" comparison="eq" value="1" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '01' 
					</data>
				</sql>
				<sql id="sql16" name="SQL16">
					<condition id="cond111" name="st_dcz_stsc == 2" variable="#st_dcz_stsc#" comparison="eq" value="2" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '02'
					</data>
				</sql>
				<sql id="sql17" name="SQL17">
					<condition id="cond111" name="st_dcz_stsc == 3" variable="#st_dcz_stsc#" comparison="eq" value="3" />
					<data id="data11" name="">
					   	   AND (C.ACT_DCZ_STSC = '03' OR C.ACT_DCZ_STSC = '04')
					</data>
				</sql>
				<sql id="sql18" name="SQL18">
					<condition id="cond111" name="st_inp_stsc == 1" variable="#st_inp_stsc#" comparison="eq" value="1" />
					<data id="data11" name="">
					   	   AND (TRIM(A.DRUP_DT) = '' OR A.DRUP_DT IS NULL)
					</data>
				</sql>
				<sql id="sql19" name="SQL19">
					<condition id="cond111" name="st_inp_stsc == 2" variable="#st_inp_stsc#" comparison="eq" value="2" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '01'
					</data>
				</sql>
				<sql id="sql20" name="SQL20">
					<condition id="cond111" name="st_inp_stsc == 3" variable="#st_inp_stsc#" comparison="eq" value="3" />
					<data id="data11" name="">
					   	   AND (C.ACT_DCZ_STSC = '02' OR C.ACT_DCZ_STSC = '03' OR C.ACT_DCZ_STSC = '04')
					</data>
				</sql>
				<sql id="sql21" name="SQL21">
					<data id="data11" name="">
			   		  ORDER BY H.BRNM 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<!-- process id="ORKR011103" name="조치계획 일괄 승인/반려" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id=""-->
	<process id="ORKR011403" name="조치계획 일괄 승인/반려" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="status" 			name="상태" 			parmid="status" 	attr="A" deafult_value="" />
		<parm id="rki_id" 		name="리스크지표ID" 	parmid="rki_id" 	attr="A" deafult_value="" />
		<parm id="s_bas_ym" 		name="기준년월" 		parmid="s_bas_ym" 	attr="A" default_value="" />
		<parm id="apl_brc" 			name="적용사무소코드" 	parmid="apl_brc" 	attr="A" default_value="" />
		<parm id="ischeck" 			name="선택" 			parmid="ischeck" 	attr="A" default_value="" />
		<parm id="rtn_cntn" 		name="반려사유" 		parmid="rtn_cntn" 	attr="A" default_value="" />
		<parm id="mode" 			name="모드" 			parmid="mode" 		attr="S" deafult_value="" />
		<parm id="hd_rptg_dcz_stsc" name="반려보고서결재상태코드" parmid="hd_rptg_dcz_stsc" attr="A" default_value="" />
		
		<parm id="dcz_dc" 			name="결재진행코드" 		parmid="dcz_dc" 		attr="A" default_value=""/>
		<parm id="dcz_objr_eno" 	name="결재확인자개인번호" 	parmid="dcz_objr_eno" 	attr="A" default_value=""/>
		<parm id="sch_rtn_cntn" 	name="결재/반려의견" 		parmid="sch_rtn_cntn" 	attr="A" default_value=""/>
		<parm id="dcz_rmk_c" 		name="결재비고코드" 		parmid="dcz_rmk_c" 		attr="A" default_value=""/>
				
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="조치계획 일괄 승인/반려" type="M" mode="update" multiid="rki_id">
				<multivalue id="status" 	name="status" 	multiid="status"/>
				<multivalue id="rki_id" 	name="s_rki_id" multiid="rki_id"/>
				<multivalue id="apl_brc" 	name="apl_brc" 	multiid="apl_brc"/>
				<multivalue id="bas_ym" 	name="s_bas_ym" multiid="bas_ym"/>
				<multivalue id="ischeck" 	name="ischeck" 	multiid="ischeck"/>
				<multivalue id="rtn_cntn" 	name="rtn_cntn" multiid="rtn_cntn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" variable="#status#" comparison="eq" value="U" />
					<condition id="cond112" name="ischeck == 1" variable="#ischeck#" comparison="eq" value="1" />
					<condition id="cond113" name="mode == A" variable="#mode#" comparison="eq" value="A" />
					<data id="data111" name="">
						UPDATE TB_OR_KM_ACT            
						   SET DCZ_SQNO = NVL(DCZ_SQNO,0)+1           
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)     
						   AND OPRK_RKI_ID = TRIM(#rki_id#)      
						   AND BAS_YM = TRIM(#bas_ym#)           
						   AND BRC = TRIM(#apl_brc#)                                                     
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit02" name="조치계획 일괄 승인/반려" type="M" mode="update" multiid="rki_id">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<multivalue id="apl_brc" name="apl_brc" multiid="apl_brc"/>
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="ischeck" name="ischeck" multiid="ischeck"/>
				<multivalue id="rtn_cntn" name="rtn_cntn" multiid="rtn_cntn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" variable="#status#" comparison="eq" value="U" />
					<condition id="cond112" name="ischeck == 1" variable="#ischeck#" comparison="eq" value="1" />
					<condition id="cond113" name="mode == A" variable="#mode#" comparison="eq" value="A" />
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                   
							   GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC
							   , DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC    
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
							   )                                
						SELECT                                                                                   
							   TRIM(#grp_org_c#), TRIM(#bas_ym#),TRIM(#rki_id#), TRIM(#apl_brc#)                         
							   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '03'     
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)                                      
						  FROM TB_OR_KH_ACT_DCZ                                                           
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)                                                       
						   AND OPRK_RKI_ID = TRIM(#rki_id#)                                                      
						   AND BAS_YM = TRIM(#bas_ym#)                                                           
						   AND BRC = TRIM(#apl_brc#)                                                                                                                  
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit03" name="조치계획 일괄 승인/반려" type="M" mode="update" multiid="rki_id">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<multivalue id="apl_brc" name="apl_brc" multiid="apl_brc"/>
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="ischeck" name="ischeck" multiid="ischeck"/>
				<multivalue id="rtn_cntn" name="rtn_cntn" multiid="rtn_cntn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" 	variable="#status#" 	comparison="eq" value="U" />
					<condition id="cond112" name="ischeck == 1" variable="#ischeck#" 	comparison="eq" value="1" />
					<condition id="cond113" name="mode == E" 	variable="#mode#" 		comparison="eq" value="E" />
					<data id="data111" name="">
						UPDATE TB_OR_KM_ACT
						   SET DCZ_SQNO = NVL(DCZ_SQNO,0)+1
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   AND OPRK_RKI_ID = TRIM(#rki_id#)
						   AND BAS_YM = TRIM(#bas_ym#)
						   AND BRC = TRIM(#apl_brc#)
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit04" name="조치계획 일괄 승인/반려" type="M" mode="update" multiid="rki_id">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<multivalue id="apl_brc" name="apl_brc" multiid="apl_brc"/>
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="ischeck" name="ischeck" multiid="ischeck"/>
				<multivalue id="rtn_cntn" name="rtn_cntn" multiid="rtn_cntn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" variable="#status#" comparison="eq" value="U" />
					<condition id="cond112" name="ischeck == 1" variable="#ischeck#" comparison="eq" value="1" />
					<condition id="cond113" name="mode == E" variable="#mode#" comparison="eq" value="E" />
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                               
							   GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC
							   , DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC, RTN_CNTN      
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
							   )                                            
						SELECT                                                                                               
							   TRIM(#grp_org_c#), TRIM(#bas_ym#),TRIM(#rki_id#), TRIM(#apl_brc#)                                     
							   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '04', TRIM(#rtn_cntn#) 
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)                                                  
						  FROM TB_OR_KH_ACT_DCZ                                                                       
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)                                                                   
						   AND OPRK_RKI_ID = TRIM(#rki_id#)                                                                  
						   AND BAS_YM = TRIM(#bas_ym#)                                                                       
						   AND BRC = TRIM(#apl_brc#)                                                                         
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit05" name="조치계획 일괄 승인/반려" type="M" mode="update" multiid="rki_id">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="rki_id" name="s_rki_id" multiid="rki_id"/>
				<multivalue id="apl_brc" name="apl_brc" multiid="apl_brc"/>
				<multivalue id="bas_ym" name="s_bas_ym" multiid="bas_ym"/>
				<multivalue id="ischeck" name="ischeck" multiid="ischeck"/>
				<multivalue id="rtn_cntn" name="rtn_cntn" multiid="rtn_cntn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" variable="#status#" comparison="eq" value="U" />
					<condition id="cond112" name="ischeck == 1" variable="#ischeck#" comparison="eq" value="1" />
					<condition id="cond113" name="mode == R" variable="#mode#" comparison="eq" value="R" />
					<data id="data111" name="">
						UPDATE TB_OR_KM_ACT
						   SET DCZ_SQNO = NVL(DCZ_SQNO,0)+1
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   AND OPRK_RKI_ID = TRIM(#rki_id#)
						   AND BAS_YM = TRIM(#bas_ym#)
						   AND BRC = TRIM(#apl_brc#)
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit06" name="조치계획 일괄 승인/반려" type="M" mode="update" multiid="rki_id">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<multivalue id="apl_brc" name="apl_brc" multiid="apl_brc"/>
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="ischeck" name="ischeck" multiid="ischeck"/>
				<multivalue id="rtn_cntn" name="rtn_cntn" multiid="rtn_cntn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" variable="#status#" comparison="eq" value="U" />
					<condition id="cond112" name="ischeck == 1" variable="#ischeck#" comparison="eq" value="1" />
					<condition id="cond113" name="mode == R" variable="#mode#" comparison="eq" value="R" />
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                               
							   GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC
							   , DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC, RTN_CNTN      
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
							   )                                            
						SELECT                                                                                               
							   TRIM(#grp_org_c#), TRIM(#bas_ym#),TRIM(#rki_id#), TRIM(#apl_brc#)                                     
							   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '01', TRIM(#rtn_cntn#) 
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)                                                  
						  FROM TB_OR_KH_ACT_DCZ                                                                       
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)                                                                   
						   AND OPRK_RKI_ID = TRIM(#rki_id#)                                                                  
						   AND BAS_YM = TRIM(#bas_ym#)                                                                       
						   AND BRC = TRIM(#apl_brc#)                                                                         
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit07" name="조치계획 일괄 승인/반려" type="M" mode="update" multiid="rki_id">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<multivalue id="apl_brc" name="apl_brc" multiid="apl_brc"/>
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="ischeck" name="ischeck" multiid="ischeck"/>
				<multivalue id="rtn_cntn" name="rtn_cntn" multiid="rtn_cntn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" 	variable="#status#" 	comparison="eq" value="U" />
					<condition id="cond112" name="ischeck == 1" variable="#ischeck#" 	comparison="eq" value="1" />
					<condition id="cond113" name="mode == Q" 	variable="#mode#" 		comparison="eq" value="Q" />
					<data id="data111" name="">
						UPDATE TB_OR_KM_ACT
						   SET DCZ_SQNO = NVL(DCZ_SQNO,0)+1
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   AND OPRK_RKI_ID = TRIM(#rki_id#)
						   AND BAS_YM = TRIM(#bas_ym#)
						   AND BRC = TRIM(#apl_brc#)
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="조치계획 일괄 승인/반려" type="M" mode="update" multiid="rki_id">
				<multivalue id="status" name="status" multiid="status"/>
				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<multivalue id="apl_brc" name="apl_brc" multiid="apl_brc"/>
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="ischeck" name="ischeck" multiid="ischeck"/>
				<multivalue id="rtn_cntn" name="rtn_cntn" multiid="rtn_cntn"/>
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="status == U" 	variable="#status#" 	comparison="eq" value="U" />
					<condition id="cond112" name="ischeck == 1" variable="#ischeck#" 	comparison="eq" value="1" />
					<condition id="cond113" name="mode == Q" 	variable="#mode#" 		comparison="eq" value="Q" />
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                               
							   GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC
							   , DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC, RTN_CNTN      
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
							   )                                            
						SELECT                                                                                               
							   TRIM(#grp_org_c#), TRIM(#bas_ym#),TRIM(#rki_id#), TRIM(#apl_brc#)                                     
							   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '02', TRIM(#rtn_cntn#) 
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)                                                  
						  FROM TB_OR_KH_ACT_DCZ                                                                       
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)                                                                   
						   AND OPRK_RKI_ID = TRIM(#rki_id#)                                                                  
						   AND BAS_YM = TRIM(#bas_ym#)                                                                       
						   AND BRC = TRIM(#apl_brc#)                                                                      
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011104" name="조치계획 수정 및 등록" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" 	name="그룹내 기관코드" sessionid="grp_org_c" 	object="String" />
		<session id="userid" 		name="사용자ID" 		sessionid="userid" 		object="String" />
		<parm id="mode" 			name="모드" 			parmid="mode" 			attr="S" deafult_value="" />
		<parm id="sch_rki_id" 		name="리스크지표ID" 	parmid="sch_rki_id" 	attr="S" deafult_value="" />
		<parm id="hd_bas_ym" 		name="기준년월" 		parmid="hd_bas_ym" 		attr="S" default_value="" />
		<parm id="hd_apl_brc" 		name="적용사무소코드" 	parmid="hd_apl_brc" 	attr="S" default_value="" />
		<parm id="cas_dtl_cntn" 	name="원인분석내용" 	parmid="cas_dtl_cntn" 	attr="S" default_value="" />
		<parm id="cft_plan_cntn" 	name="대응방안" 		parmid="cft_plan_cntn" 	attr="S" default_value="" />
		<parm id="act_dcz_stsc" 	name="조치결재상태코드" parmid="act_dcz_stsc" 	attr="S" default_value="" />
		<parm id="exe_rzt_cntn" 	name="조치결과" 		parmid="exe_rzt_cntn" 	attr="S" default_value="" />
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="조치계획 수정 및 등록" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
					<!-- condition id="cond111" name="act_dcz_stsc == null" variable="#act_dcz_stsc#" comparison="eq" value=""/-->
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                              
					           GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC, DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC               
					      	   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
					      	   )                                           
					    VALUES (                                                                                            	
					           TRIM(#grp_org_c#), TRIM(REPLACE(#hd_bas_ym#,'-','')),TRIM(#sch_rki_id#), TRIM(#hd_apl_brc#)         									
					      	   , (SELECT NVL(MAX(DCZ_SQNO),0)+1
						            FROM TB_OR_KH_ACT_DCZ                                                                                          
								   WHERE GRP_ORG_C 	= TRIM(#grp_org_c#)                                                                                              
									 AND OPRK_RKI_ID= TRIM(#sch_rki_id#)                                                                                          
									 AND BAS_YM 	= TRIM(REPLACE(#hd_bas_ym#,'-',''))                                                                               
									 AND BRC 		= TRIM(#hd_apl_brc#))
			   				   , TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '01', SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#))
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>		
			<unit id="unit01" name="조치계획 수정 및 등록" type="S" multiid="">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT ACT_DCZ_STSC, DCZ_SQNO                  
						  FROM TB_OR_KH_ACT_DCZ A                                
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)                              
					       AND OPRK_RKI_ID = TRIM(#sch_rki_id#)                         
					       AND BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))               
					       AND BRC = TRIM(#hd_apl_brc#)                                 
					       AND DCZ_SQNO = (SELECT MAX(DCZ_SQNO)                        
					      					 FROM TB_OR_KH_ACT_DCZ        
					      					WHERE GRP_ORG_C = TRIM(#grp_org_c#)    
					       AND OPRK_RKI_ID = TRIM(#sch_rki_id#)                         
					       AND BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))               
					       AND BRC = TRIM(#hd_apl_brc#))                                
					</data>
				</sql>
				<result id="dcz_sqno" 	  name="dcz_sqno" 	  attrname="dcz_sqno" 	  type="single_string"/>
				<result id="act_dcz_stsc" name="act_dcz_stsc" attrname="act_dcz_stsc" type="single_string"/>
			</unit>
			<unit id="unit02" name="조치계획 수정 및 등록" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="mode == U" variable="#mode#" comparison="eq" value="U" />
					<condition id="cond112" name="act_dcz_stsc == null" variable="#act_dcz_stsc#" comparison="eq" value="" operator="or"/>
					<data id="data111" name="">
					    UPDATE TB_OR_KM_ACT                                  
					       SET CAS_DTL_CNTN 	= TRIM(#cas_dtl_cntn#)                     
					         , CFT_PLAN_CNTN 	= TRIM(#cft_plan_cntn#)                   
							 , EXE_RZT_CNTN 	= TRIM(#exe_rzt_cntn#)                     
					         , LSCHG_DTM 		= SYSDATE                                   
					         , LS_WKR_ENO 		= TRIM(#userid#)                             
							 , DCZ_SQNO 		= TRIM(#dcz_sqno#)                          
					       WHERE GRP_ORG_C 		= TRIM(#grp_org_c#)                         
					         AND OPRK_RKI_ID 	= TRIM(#sch_rki_id#)                      
					         AND BAS_YM 		= TRIM(REPLACE(#hd_bas_ym#,'-',''))            
					         AND BRC 			= TRIM(#hd_apl_brc#)                              																				 
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<!-- unit id="unit99" name="조치계획 수정 및 등록" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="act_dcz_stsc == null" variable="#act_dcz_stsc#" comparison="eq" value=""/>
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                              
					           GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC, DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC               
					      	   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
					      	   )                                           
					    VALUES (                                                                                            	
					           TRIM(#grp_org_c#), TRIM(REPLACE(#hd_bas_ym#,'-','')),TRIM(#sch_rki_id#), TRIM(#hd_apl_brc#)         									
					      	   , 1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '01', SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#))
					</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="act_dcz_stsc != null" variable="#act_dcz_stsc#" comparison="ne" value=""/>
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                                                  
					           GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC, DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC                                   
					      	   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)                                                               
					    SELECT
					           TRIM(#grp_org_c#), TRIM(REPLACE(#hd_bas_ym#,'-','')),TRIM(#sch_rki_id#), TRIM(#hd_apl_brc#)                              									
					      	   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '01' , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)	
					      FROM TB_OR_KH_ACT_DCZ                                                                                          
					     WHERE GRP_ORG_C 	= TRIM(#grp_org_c#)                                                                                              
					       AND OPRK_RKI_ID 	= TRIM(#sch_rki_id#)                                                                                          
					       AND BAS_YM 		= TRIM(REPLACE(#hd_bas_ym#,'-',''))                                                                               
					       AND BRC 			= TRIM(#hd_apl_brc#)                                                                                                  
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit-->
		</group>
	</process>
	
	<process id="ORKR011105" name="조치계획 결재요청 및 승인/반려" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String" />
		<session id="userid" name="사용자ID" sessionid="userid" object="String" />
		<parm id="mode" name="모드" parmid="mode" attr="S" deafult_value="" />
		<parm id="sch_rki_id" name="리스크지표ID" parmid="sch_rki_id" attr="S" deafult_value="" />
		<parm id="hd_bas_ym" name="기준년월" parmid="hd_bas_ym" attr="S" default_value="" />
		<parm id="hd_apl_brc" name="적용사무소코드" parmid="hd_apl_brc" attr="S" default_value="" />
		<parm id="cas_anss_cntn" name="원인분석내용" parmid="cas_anss_cntn" attr="S" default_value="" />
		<parm id="act_cntn" name="조치계획" parmid="act_cntn" attr="S" default_value="" />
		<parm id="act_dcz_stsc" name="조치결재상태코드" parmid="act_dcz_stsc" attr="S" default_value="" />
		<parm id="hd_rptg_dcz_stsc" name="반려보고서결재상태코드" parmid="hd_rptg_dcz_stsc" attr="S" default_value="" />
		<parm id="rtn_cntn" name="반려내용" parmid="dep_rtn_cntn" attr="S" default_value="" />
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="조치계획 결재요청 및 승인/반려" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="mode == Q" variable="#mode#" comparison="eq" value="Q"/>
					<data id="data111" name="">
						INSERT
						  INTO TB_OR_KH_ACT_DCZ (
							   GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC
							   , DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
							   )
						SELECT
							   TRIM(#grp_org_c#), TRIM(REPLACE(#hd_bas_ym#,'-','')),TRIM(#sch_rki_id#), TRIM(#hd_apl_brc#)
							   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '02'
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)
						  FROM TB_OR_KH_ACT_DCZ
					     WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   AND OPRK_RKI_ID = TRIM(#sch_rki_id#)
						   AND BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))
						   AND BRC = TRIM(#hd_apl_brc#)
					</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="mode == R" variable="#mode#" comparison="eq" value="R"/>
					<data id="data111" name="">
						INSERT
						  INTO TB_OR_KH_ACT_DCZ (
							   GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC
							   , DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC, RTN_CNTN
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
							   )
					    SELECT                                                                                                                              
							   TRIM(#grp_org_c#), TRIM(REPLACE(#hd_bas_ym#,'-','')),TRIM(#sch_rki_id#), TRIM(#hd_apl_brc#)                                          
							   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '01', TRIM(#rtn_cntn#)                                
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)                                                                                 
						  FROM TB_OR_KH_ACT_DCZ                                                                                                      
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)                                                                                                  
						   AND OPRK_RKI_ID = TRIM(#sch_rki_id#)                                                                                             
						   AND BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))                                                                                   
						   AND BRC = TRIM(#hd_apl_brc#)                                                                                                     
					</data>
				</sql>
				<sql id="sql13" name="SQL13">
					<condition id="cond111" name="mode == A" variable="#mode#" comparison="eq" value="A"/>
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                                                              
							   GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC
							   , DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC                                               
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
							   )                                                                           
						SELECT                                                                                                                              
							   TRIM(#grp_org_c#), TRIM(REPLACE(#hd_bas_ym#,'-','')),TRIM(#sch_rki_id#), TRIM(#hd_apl_brc#)
							   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '03'
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)
						  FROM TB_OR_KH_ACT_DCZ
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   AND OPRK_RKI_ID = TRIM(#sch_rki_id#)
						   AND BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))
						   AND BRC = TRIM(#hd_apl_brc#)                                                                                                      
					</data>
				</sql>
				<sql id="sql14" name="SQL14">
					<condition id="cond111" name="mode == E" variable="#mode#" comparison="eq" value="E"/>
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_ACT_DCZ (                                                                                              
							   GRP_ORG_C, BAS_YM, OPRK_RKI_ID, BRC
							   , DCZ_SQNO, DCZMN_ENO, DCZ_DT, ACT_DCZ_STSC                                               
							   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
							   )                                                                           
						SELECT                                                                                                                              
							   TRIM(#grp_org_c#), TRIM(REPLACE(#hd_bas_ym#,'-','')),TRIM(#sch_rki_id#), TRIM(#hd_apl_brc#)
							   , NVL(MAX(DCZ_SQNO),0)+1, TRIM(#userid#), TRIM(TO_CHAR(SYSDATE,'YYYYMMDD')), '04'
							   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)
						  FROM TB_OR_KH_ACT_DCZ
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   AND OPRK_RKI_ID = TRIM(#sch_rki_id#)
						   AND BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))
						   AND BRC = TRIM(#hd_apl_brc#)                                                                                                      
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>
	
	<!-- process id="ORKR011701" name="조치계획 작성" forward="/kri/ORKR0117" forwardng="/comm/errorPage" resource="kri" grid_process_id=""-->
	<process id="ORKR011501" name="조치계획 작성" forward="/kri/ORKR0115" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="intg_grp_c" name="통합그룹코드" parmid="intg_grp_c" attr="S" default_value="KRI_LMT_DSC"/>
		<parm id="hd_bas_ym" name="기준년월" parmid="hd_bas_ym" attr="S" default_value=""/>
		<parm id="hd_apl_brc" name="적용사무소코드" parmid="hd_apl_brc" attr="S" default_value=""/>
		<parm id="sch_rki_id" name="리스크지표ID" parmid="sch_rki_id" attr="S" deafult_value="" />
		<group id="grp01" name="grp01" type="S">
		   <!-- 향후 RC(리스크카테고리) 레벨 처리용 수정해야 함.  --> 
			<unit id="unit02" name="조치계획 작성" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 											
							   A.BRC APL_BRC										
				  			   , H.BRNM APL_BRNM										
							   , A.OPRK_RKI_ID RKI_ID						
							   , D.OPRK_RKINM RKINM							
							   , D.RKI_LVL_C KRI_LVL									
							   , ( SELECT INTG_IDVD_CNM 
									 FROM TB_OR_OM_CODE 
									WHERE A.GRP_ORG_C=GRP_ORG_C 
									  AND D.RKI_LVL_C=IDVDC_VAL 
									  AND INTG_GRP_C='RKI_LVL_C'
								 ) KRI_LVLNM								
							   , E.KRI_NVL 									
							   , E.KRI_GRDNM 								
							   , F.KRI_GRDNM  SND_GRDNM						
							   , F.KRI_GRDNM  THD_GRDNM						
							   , ( SELECT INTG_IDVD_CNM 
							   		 FROM TB_OR_OM_CODE 
							   		WHERE A.GRP_ORG_C=GRP_ORG_C 
							   		  AND D.RKI_UNT_C=IDVDC_VAL 
							   		  AND INTG_GRP_C='RKI_UNT_C'
							   	 ) RKI_UNT_NM								
							   , A.CAS_DTL_CNTN								
							   , A.CFT_PLAN_CNTN								
							   , A.EXE_RZT_CNTN								
							   , C.RTN_CNTN									
							   , C.DCZ_DT DRUP_DT									
							   , C.ACT_DCZ_STSC								
							   , A.BAS_YM									
			     		  FROM TB_OR_KM_ACT A				
					           , TB_OR_KH_LMT B				
					           , TB_OR_KH_ACT_DCZ C			
					           , TB_OR_KM_RKI D				
					           , TB_OR_KS_RKI_BR_SMST E		
					           , TB_OR_KS_RKI_BR_SMST F		
					           , TB_OR_KS_RKI_BR_SMST G		
					           , TB_OR_OM_ORGZ H				
			    		 WHERE A.GRP_ORG_C = B.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = B.OPRK_RKI_ID 			
					       AND A.BRC = B.BRC							
					       AND A.BAS_YM = B.BAS_YM					
					       AND A.GRP_ORG_C = C.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = C.OPRK_RKI_ID(+) 		
					       AND A.BRC = C.BRC(+)						
					       AND A.BAS_YM = C.BAS_YM(+)					
					       AND A.DCZ_SQNO = C.DCZ_SQNO(+)				
					       AND A.GRP_ORG_C = D.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = D.OPRK_RKI_ID	 		
					       AND A.GRP_ORG_C = E.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = E.OPRK_RKI_ID	 		
					       AND A.BRC = E.BRC	 						
					       AND A.BAS_YM = E.BAS_YM	 				
					       AND A.GRP_ORG_C = F.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = F.OPRK_RKI_ID(+) 		
					       AND A.BRC = F.BRC(+)						
					       AND TO_CHAR(ADD_MONTHS(TO_DATE(A.BAS_YM,'YYYYMM'), -1),'YYYYMM') = F.BAS_YM(+)				
					       AND A.GRP_ORG_C = G.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = G.OPRK_RKI_ID(+) 		
					       AND A.BRC = G.BRC(+)						
					       AND TO_CHAR(ADD_MONTHS(TO_DATE(A.BAS_YM,'YYYYMM'), -1),'YYYYMM') = G.BAS_YM(+)				
					       AND A.GRP_ORG_C = H.GRP_ORG_C(+)				
					       AND A.BRC = H.BRC(+)	 						
					       AND H.UYN(+) = 'Y'	 							
					       AND H.KRI_ORGZ_YN(+) = 'Y'	 					
						   AND A.GRP_ORG_C = TRIM(#grp_org_c#)                      
						   AND A.BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))   
						   AND A.BRC = TRIM(#hd_apl_brc#)                             
						   AND A.OPRK_RKI_ID = TRIM(#sch_rki_id#)                                                     
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean" />
			</unit>
		</group>
	</process>
	
	<process id="ORKR011201111111" name="조치계획 현황 조회" forward="/kri/ORKR0112" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="brc" name="사무소코드" sessionid="brc" object="String"/>
		<group id="grp01" name="grp01" type="S">
		   <!-- 향후 RC(리스크카테고리) 레벨 처리용 수정해야 함.  --> 
			<unit id="unit01" name="평가년월 조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
			    			   REGEXP_REPLACE(BAS_YM,'([[:digit:]]{4})([[:digit:]]{2})','\1-\2') BAS_YM  
			 			  FROM TB_OR_OM_SCHD 
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			    		   AND RKI_PRG_STSC IN ('03','04')  
			    		   AND BAS_YM BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYYMM') AND TO_CHAR(SYSDATE,'YYYYMM')  
			 		  ORDER BY BAS_YM DESC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit02" name="영업본부조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT BRC
							   , BRNM
			  			  FROM TB_OR_OM_ORGZ 
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			   			   AND UP_BRC = ( SELECT UP_BRC 
			   			   				    FROM TB_OR_OM_ORGZ 
			   			   				   WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
			   			   				     AND BRC = TRIM(#brc#)
			   			   				) 
			   			   AND HOFC_BIZO_DSC = '03'  
			   			   AND UYN = 'Y'  
			 		  ORDER BY BRNM 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit05" name="발생사무소조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
							   BRC
							   , BRNM                  		 
						  FROM TB_OR_OM_ORGZ        	
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
				    	   AND UYN = 'Y'                 	 
				    	   AND BR_LKO_YN = 'N'           	 
				    	   AND HOFC_BIZO_DSC = '03'      	 
						   AND ( BRC = TRIM(#brc#) OR UP_BRC = ( SELECT UP_BRC 
						   									       FROM TB_OR_OM_ORGZ 
						   									  	  WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   									    	AND BRC = TRIM(#brc#)
						   									    )
						       )	
					  ORDER BY (CASE BRC WHEN TRIM(#brc#) THEN '0' ELSE '1' END)		
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<!-- process id="ORKR011301" name="대응방안 및 실행결과 이력관리" forward="/kri/ORKR0113" forwardng="/comm/errorPage" resource="kri" grid_process_id=""-->
	<process id="ORKR011901" name="대응방안 및 실행결과 이력관리" forward="/kri/ORKR0119" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="brc" name="사무소코드" sessionid="brc" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="평가년월 조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
			    			   REGEXP_REPLACE(BAS_YM,'([[:digit:]]{4})([[:digit:]]{2})','\1-\2') BAS_YM  
			 			  FROM TB_OR_OM_SCHD 
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			    		   AND RKI_PRG_STSC IN ('03','04')  
			    		   AND BAS_YM BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYYMM') AND TO_CHAR(SYSDATE,'YYYYMM')  
			 		  ORDER BY BAS_YM DESC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit02" name="영업본부조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT BRC
							   , BRNM
			  			  FROM TB_OR_OM_ORGZ 
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			   			   AND UP_BRC = ( SELECT UP_BRC 
			   			   				    FROM TB_OR_OM_ORGZ 
			   			   				   WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
			   			   				     AND BRC = TRIM(#brc#)
			   			   				) 
			   			   AND HOFC_BIZO_DSC = '03'  
			   			   AND UYN = 'Y'  
			 		  ORDER BY BRNM 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit05" name="발생사무소조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
							   BRC
							   , BRNM                  		 
						  FROM TB_OR_OM_ORGZ        	
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
				    	   AND UYN = 'Y'                 	 
				    	   AND BR_LKO_YN = 'N'           	 
				    	   AND HOFC_BIZO_DSC = '03'      	 
						   AND ( BRC = TRIM(#brc#) OR UP_BRC = ( SELECT UP_BRC 
						   									       FROM TB_OR_OM_ORGZ 
						   									  	  WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   									    	AND BRC = TRIM(#brc#)
						   									    )
						       )	
					  ORDER BY (CASE BRC WHEN TRIM(#brc#) THEN '0' ELSE '1' END)		
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<!-- process id="ORKR011401" name="KRI 월별 보고서" forward="/kri/ORKR0114" forwardng="/comm/errorPage" resource="kri" grid_process_id=""-->
	<process id="ORKR011601" name="KRI 월별 보고서" forward="/kri/ORKR0116" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="brc" name="사무소코드" sessionid="brc" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="평가년월 조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
			    			   REGEXP_REPLACE(BAS_YM,'([[:digit:]]{4})([[:digit:]]{2})','\1-\2') BAS_YM  
			 			  FROM TB_OR_OM_SCHD 
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			    		   AND RKI_PRG_STSC IN ('03','04')  
			    		   AND BAS_YM BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-12),'YYYYMM') AND TO_CHAR(SYSDATE,'YYYYMM')  
			 		  ORDER BY BAS_YM DESC 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit02" name="영업본부조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT BRC
							   , BRNM
			  			  FROM TB_OR_OM_ORGZ 
			 			 WHERE GRP_ORG_C = TRIM(#grp_org_c#)  
			   			   AND UP_BRC = ( SELECT UP_BRC 
			   			   				    FROM TB_OR_OM_ORGZ 
			   			   				   WHERE GRP_ORG_C = TRIM(#grp_org_c#) 
			   			   				     AND BRC = TRIM(#brc#)
			   			   				) 
			   			   AND HOFC_BIZO_DSC = '03'  
			   			   AND UYN = 'Y'  
			 		  ORDER BY BRNM 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit05" name="발생사무소조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
							   BRC
							   , BRNM                  		 
						  FROM TB_OR_OM_ORGZ        	
						 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
				    	   AND UYN = 'Y'                 	 
				    	   AND BR_LKO_YN = 'N'           	 
				    	   AND HOFC_BIZO_DSC = '03'      	 
						   AND ( BRC = TRIM(#brc#) OR UP_BRC = ( SELECT UP_BRC 
						   									       FROM TB_OR_OM_ORGZ 
						   									  	  WHERE GRP_ORG_C = TRIM(#grp_org_c#)
						   									    	AND BRC = TRIM(#brc#)
						   									    )
						       )	
					  ORDER BY (CASE BRC WHEN TRIM(#brc#) THEN '0' ELSE '1' END)		
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011602" name="KRI 월별 보고서 그리드" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="hd_bas_ym" name="기준년월" parmid="hd_bas_ym" attr="S" default_value=""/>
		<parm id="hd_apl_brc" name="적용사무소코드" parmid="hd_apl_brc" attr="S" default_value=""/>
		<parm id="sch_rkinm" name="리스크지표명" parmid="sch_rkinm" attr="S" default_value=""/>
		<parm id="st_inp_stsc" name="입력상태" parmid="st_inp_stsc" attr="S" default_value=""/>
		<parm id="st_dcz_stsc" name="결재상태" parmid="st_dcz_stsc" attr="S" default_value=""/>
		<parm id="hd_hofc_bizo_dsc" name="본부영업점구분코드" parmid="hd_hofc_bizo_dsc" attr="S" default_value=""/>
		<parm id="hd_hofc_bizo_menu_yn" name="영업본부및하위조직메뉴유무" parmid="hd_hofc_bizo_menu_yn" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="조치계획 현황 목록  조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 											
							   B.BRC AS APL_BRC										
				  			   , H.BRNM APL_BRNM								
				  			   , B.OPRK_RKI_ID RKI_ID						
				  			   , D.OPRK_RKINM RKINM							
				  			   , D.RKI_LVL_C									
				  			   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE A.GRP_ORG_C=GRP_ORG_C AND D.RKI_LVL_C=IDVDC_VAL AND INTG_GRP_C='RKI_LVL_C') RKI_LVL_NM								
				  			   , E.KRI_GRDNM 								
				  			   , F.KRI_GRDNM SND_GRDNM						
				  			   , G.KRI_GRDNM THD_GRDNM						
				  			   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE A.GRP_ORG_C=GRP_ORG_C AND D.RKI_UNT_C=IDVDC_VAL AND INTG_GRP_C='RKI_UNT_C') RKI_UNT_NM								
 				  			   , A.CAS_DTL_CNTN								
				  			   , A.CFT_PLAN_CNTN								
							   , A.EXE_RZT_CNTN								
							   , C.RTN_CNTN									
							   , C.DCZ_DT DRUP_DT							
							   , C.ACT_DCZ_STSC								
							   , B.BAS_YM									
							   , I.CFT_PLAN_CNTN SND_PLAN_CNTN				
					      FROM   				
					           TB_OR_KH_LMT B
					           LEFT OUTER JOIN TB_OR_KM_ACT A
					           ON A.GRP_ORG_C = B.GRP_ORG_C
					           AND A.OPRK_RKI_ID = B.OPRK_RKI_ID
					           AND A.BRC = B.BRC
					           AND A.BAS_YM = B.BAS_YM
					           LEFT OUTER JOIN TB_OR_KH_ACT_DCZ C 			
					           ON A.GRP_ORG_C = C.GRP_ORG_C
					           AND A.OPRK_RKI_ID = C.OPRK_RKI_ID
					           AND A.BRC = C.BRC
					           AND A.BAS_YM = C.BAS_YM					
                               AND A.DCZ_SQNO = C.DCZ_SQNO
                               LEFT OUTER JOIN TB_OR_KS_RKI_BR_SMST F
                               ON B.GRP_ORG_C = F.GRP_ORG_C
                               AND B.OPRK_RKI_ID = F.OPRK_RKI_ID 		
                               AND B.BRC = F.BRC						
                               AND TO_CHAR(ADD_MONTHS(TO_DATE(B.BAS_YM,'YYYYMM'), -1),'YYYYMM') = F.BAS_YM
                               LEFT OUTER JOIN TB_OR_KS_RKI_BR_SMST G
                               ON B.GRP_ORG_C = G.GRP_ORG_C			
					           AND B.OPRK_RKI_ID = G.OPRK_RKI_ID 		
					           AND B.BRC = G.BRC		
					           AND TO_CHAR(ADD_MONTHS(TO_DATE(B.BAS_YM,'YYYYMM'), -2),'YYYYMM') = G.BAS_YM
					           LEFT OUTER JOIN TB_OR_KM_ACT I
					           ON B.GRP_ORG_C = I.GRP_ORG_C			
                               AND B.OPRK_RKI_ID = I.OPRK_RKI_ID 		
					           AND B.BRC = I.BRC						
					           AND TO_CHAR(ADD_MONTHS(TO_DATE(B.BAS_YM,'YYYYMM'), -1),'YYYYMM') = I.BAS_YM
					           , TB_OR_KM_RKI D				
					           , TB_OR_KS_RKI_BR_SMST E					           		
					           , TB_OR_OM_ORGZ H				
					     WHERE 1=1 				 			
					       AND B.GRP_ORG_C = D.GRP_ORG_C				
					       AND B.OPRK_RKI_ID = D.OPRK_RKI_ID	 		
					       AND B.GRP_ORG_C = E.GRP_ORG_C				
					       AND B.OPRK_RKI_ID = E.OPRK_RKI_ID	 		
					       AND B.BRC = E.BRC	 						
					       AND B.BAS_YM = E.BAS_YM	 				
					       AND B.GRP_ORG_C = H.GRP_ORG_C				
					       AND B.BRC = H.BRC	 						
					       AND H.UYN = 'Y'	 							
					       AND H.KRI_ORGZ_YN = 'Y'
						   AND B.GRP_ORG_C = TRIM(#grp_org_c#)                      
						   AND B.BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-',''))   
					</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="hd_apl_brc != null" variable="#hd_apl_brc#" comparison="ne" value="" />
					<condition id="cond112" name="hd_hofc_bizo_menu_yn == Y" variable="#hd_hofc_bizo_menu_yn#" comparison="eq" value="Y" />
					<data id="data11" name="">
					   	   AND D.UP_BRC = (SELECT UP_BRC FROM TB_OR_OM_ORGZ WHERE BRC = TRIM(#hd_apl_brc#))
					</data>
				</sql>
				<sql id="sql13" name="SQL13">
					<condition id="cond111" name="hd_apl_brc != null" variable="#hd_apl_brc#" comparison="ne" value="" />
					<condition id="cond112" name="hd_hofc_bizo_menu_yn != Y" variable="#hd_hofc_bizo_menu_yn#" comparison="ne" value="Y" />
					<data id="data11" name="">
					   	   AND A.BRC = TRIM(#hd_apl_brc#) 
					</data>
				</sql>
				<sql id="sql14" name="SQL14">
					<condition id="cond111" name="sch_rkinm != null" variable="#sch_rkinm#" comparison="ne" value="" />
					<data id="data11" name="">
					   	   AND UPPER(D.OPRK_RKINM) LIKE '%' || (TRIM(#sch_rkinm#)) || '%'  
					</data>
				</sql>
				<sql id="sql15" name="SQL15">
					<condition id="cond111" name="st_dcz_stsc == 1" variable="#st_dcz_stsc#" comparison="eq" value="1" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '01' 
					</data>
				</sql>
				<sql id="sql16" name="SQL16">
					<condition id="cond111" name="st_dcz_stsc == 2" variable="#st_dcz_stsc#" comparison="eq" value="2" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '02'
					</data>
				</sql>
				<sql id="sql17" name="SQL17">
					<condition id="cond111" name="st_dcz_stsc == 3" variable="#st_dcz_stsc#" comparison="eq" value="3" />
					<data id="data11" name="">
					   	   AND (C.ACT_DCZ_STSC = '03' OR C.ACT_DCZ_STSC = '04')
					</data>
				</sql>
				<sql id="sql18" name="SQL18">
					<condition id="cond111" name="st_inp_stsc == 1" variable="#st_inp_stsc#" comparison="eq" value="1" />
					<data id="data11" name="">
					   	   AND (TRIM(A.DRUP_DT) = '' OR A.DRUP_DT IS NULL)
					</data>
				</sql>
				<sql id="sql19" name="SQL19">
					<condition id="cond111" name="st_inp_stsc == 2" variable="#st_inp_stsc#" comparison="eq" value="2" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '01'
					</data>
				</sql>
				<sql id="sql20" name="SQL20">
					<condition id="cond111" name="st_inp_stsc == 3" variable="#st_inp_stsc#" comparison="eq" value="3" />
					<data id="data11" name="">
					   	   AND (C.ACT_DCZ_STSC = '02' OR C.ACT_DCZ_STSC = '03' OR C.ACT_DCZ_STSC = '04')
					</data>
				</sql>
				<sql id="sql21" name="SQL21">
					<data id="data11" name="">
			   		  ORDER BY H.BRNM 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011801" name="KRI 전산 데이터 관리" forward="/kri/ORKR0118" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="rki_prg_stsc" name="리스크진행상태코드" sessionid="rki_prg_stsc" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="KRI평가일정조회 공통" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT /*KRI평가일정조회*/ 
			       			   A.BAS_YM /*기준년월*/  
			     			   , A.RKI_ST_DT AS EFCT_ST_DT /*모니터링시작일자*/ 
			     			   , A.RKI_ED_DT AS EFCT_ED_DT /*모니터링종료일자*/ 
			     			   , A.RKI_PRG_STSC /*리스크진행상태코드*/  
						       , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') AS FIR_INP_DTM /*전월마감일자*/  
						       , DECODE(A.BAS_YM,(SELECT MAX(BAS_YM) FROM TB_OR_OM_SCHD WHERE GRP_ORG_C=A.GRP_ORG_C),'Y','N') AS PRE_YN /*현재진행여부*/ 
			  			  FROM TB_OR_OM_SCHD A /*KRI평가일정관리기본*/ 
			 			 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)  
					</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="rki_prg_stsc == 3" variable="#rki_prg_stsc#" comparison="eq" value="3"/>
					<data id="data111" name="">
				   		   AND A.RKI_PRG_STSC IN ('03','04')  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011802" name="KRI 전산 데이터 관리 좌측 그리드 목록 조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_y" name="기준년" parmid="sch_bas_y" attr="S" default_value=""/>
		<parm id="sch_bas_m" name="기준월" parmid="sch_bas_m" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI 전산 데이터 관리 좌측 그리드 목록 조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
			    			   A.BAS_YM 
			  				   , A.BRC 
			  				   , MAX(A.BRNM) BRNM 
			  				   , SUM(CNT) CNT 
			  				   , CASE WHEN MIN(INPDT) = '00000000' THEN 'N' ELSE 'Y' END INPDT_YN 
			  			  FROM ( 
			    			     SELECT 
			        				    A.GRP_ORG_C 
			      					    , A.OPRK_RKI_ID 
								        , A.BAS_YM 
								        , A.BRC 
								        , A.BRNM 
								        , NVL(B.INPDT,'00000000') INPDT 
								        , 1 AS CNT 
			      				   FROM ( 
			        					  SELECT  
			            				         A.GRP_ORG_C 
			          							 , A.OPRK_RKI_ID 
			          							 , A.BAS_YM 
										         , C.BRC 
										         , D.BRNM 
			          					    FROM TB_OR_KH_RKISLT A 
									             , TB_OR_KM_RKI B 
									             , TB_OR_KH_BRC C 
									             , TB_OR_OM_ORGZ D 
								           WHERE A.GRP_ORG_C = B.GRP_ORG_C 
								             AND A.OPRK_RKI_ID = B.OPRK_RKI_ID 
								             AND B.GRP_ORG_C = C.GRP_ORG_C 
								             AND B.OPRK_RKI_ID = C.OPRK_RKI_ID 
								             AND C.GRP_ORG_C = D.GRP_ORG_C 
								             AND C.BRC = D.BRC 
								             AND A.GRP_ORG_C = TRIM(#grp_org_c#) 
								             AND A.BAS_YM = TRIM(#sch_bas_y#)||TRIM(#sch_bas_m#) 
								             AND B.COM_COL_PSB_YN = 'Y' 
			    						) A
			    						, TB_OR_KH_NVL B 
							      WHERE A.GRP_ORG_C = B.GRP_ORG_C(+) 
							        AND A.OPRK_RKI_ID = B.OPRK_RKI_ID(+) 
							        AND A.BAS_YM = B.BAS_YM(+) 
							        AND A.BRC = B.BRC(+) 
								) A 
			 		   GROUP BY A.GRP_ORG_C, A.BAS_YM, A.BRC 
			 		   ORDER BY MAX(A.BRNM) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011803" name="KRI 전산 데이터 관리 우측 그리드 목록 조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_bas_y" name="기준년" parmid="sch_bas_y" attr="S" default_value=""/>
		<parm id="sch_bas_m" name="기준월" parmid="sch_bas_m" attr="S" default_value=""/>
		<parm id="sch_brc" name="사무소코드" parmid="sch_brc" attr="S" default_value=""/>
		<parm id="jrdt_brc" name="소관부서코드" parmid="jrdt_brc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI 전산 데이터 관리 우측 그리드 목록 조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 
						       A.GRP_ORG_C 
						  	   , A.OPRK_RKI_ID RKI_ID 
							   , A.BAS_YM 
							   , A.BRC 
							   , A.BRNM 
							   , NVL(B.INPDT,'') INPDT 
							   , A.OPRK_RKINM RKINM 
							   , A.RKI_OBV_CNTN 
							   , A.RKI_DEF_CNTN 
							   , CASE WHEN B.INPDT IS NULL THEN 'N' ELSE 'Y' END INPDT_YN 
							   , B.KRI_NVL 
			  			  FROM ( 
							     SELECT  
								        A.GRP_ORG_C 
								        , A.OPRK_RKI_ID 
								        , A.BAS_YM 
								        , C.BRC 
								        , D.BRNM 
								        , B.OPRK_RKINM 
								        , B.RKI_OBV_CNTN 
								        , B.RKI_DEF_CNTN 
							       FROM TB_OR_KH_RKISLT A 
							            , TB_OR_KM_RKI B 
							            , TB_OR_KH_BRC C 
							            , TB_OR_OM_ORGZ D 
							      WHERE A.GRP_ORG_C = B.GRP_ORG_C 
							        AND A.OPRK_RKI_ID = B.OPRK_RKI_ID 
							        AND B.GRP_ORG_C = C.GRP_ORG_C 
							        AND B.OPRK_RKI_ID = C.OPRK_RKI_ID 
							        AND C.GRP_ORG_C = D.GRP_ORG_C 
							        AND C.BRC = D.BRC 
							        AND A.GRP_ORG_C = TRIM(#grp_org_c#) 
							        AND A.BAS_YM = TRIM(#sch_bas_y#)||TRIM(#sch_bas_m#) 
							        AND B.COM_COL_PSB_YN = 'Y' 
							        AND C.BRC = TRIM(#jrdt_brc#) 
							   ) A
							   , TB_OR_KH_NVL B 
			 			 WHERE A.GRP_ORG_C = B.GRP_ORG_C(+) 
						   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID(+) 
						   AND A.BAS_YM = B.BAS_YM(+) 
						   AND A.BRC = B.BRC(+) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011804" name="리스크지표값입력수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="개인번호" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="A" default_value=""/>
		<parm id="rki_id" name="리스크지표ID" parmid="rki_id" attr="A" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="A" default_value=""/>
		<parm id="kri_nvl" name="핵심리스크지표수치" parmid="kri_nvl" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="리스크지표값입력수정" type="M" mode="update" multiid="bas_ym">
				<multivalue id="bas_ym" name="bas_ym" multiid="bas_ym"/>
				<multivalue id="rki_id" name="rki_id" multiid="rki_id"/>
				<multivalue id="brc" name="brc" multiid="brc"/>
				<multivalue id="kri_nvl" name="kri_nvl" multiid="kri_nvl"/>
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						INSERT 
						  INTO TB_OR_KH_NVL_CHG (		
						  	   GRP_ORG_C							
							   , BAS_YM				            	
							   , OPRK_RKI_ID				        	
							   , BRC				                	
							   , SQNO				            	
							   , INPMN_ENO				        	
							   , CHG_DTM				            	
							   , CHG_CNTN				        	
							   , KRI_NVL				            	
							   , FST_VAL				            	
							   , FIR_INP_DTM				        	
							   , FIR_INPMN_ENO				    	
							   , LSCHG_DTM				        	
							   , LS_WKR_ENO				        	
							   )
					    SELECT                        			
							   A.GRP_ORG_C    						
						       , A.BAS_YM       						
						  	   , A.OPRK_RKI_ID  						
							   , A.BRC          						
							   , NVL(B.SQNO,0) + 1 SQNO				
							   , TRIM(#userid#)           						
							   , TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') 
							   , ''           						
							   , TRIM(#kri_nvl#)           						
							   , A.KRI_NVL      						
							   , SYSDATE           					
							   , 'SYSTEM'           					
							   , SYSDATE           					
							   , 'SYSTEM'           					
				  		  FROM TB_OR_KH_NVL A				
						       , TB_OR_KH_NVL_CHG B				
				 		 WHERE A.GRP_ORG_C = B.GRP_ORG_C(+)		
						   AND A.BAS_YM = B.BAS_YM(+)			
						   AND A.BRC = B.BRC(+)					
						   AND A.OPRK_RKI_ID = B.OPRK_RKI_ID(+)	
						   AND A.GRP_ORG_C = TRIM(#grp_org_c#)					
						   AND A.BAS_YM = TRIM(#bas_ym#)						
						   AND A.BRC = TRIM(#brc#)							
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)					
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>	
	
	<!-- process id="ORKR011901" name="KRI 전산 데이터 조회" forward="/kri/ORKR0119" forwardng="/comm/errorPage" resource="kri" grid_process_id=""-->
	<process id="ORKR911901" name="KRI 전산 데이터 조회" forward="/kri/ORKR0119" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="rki_id" name="KRI지표ID" parmid="rki_id" attr="S" default_value=""/> 
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/> 
		<parm id="hd_rki_prg_stsc" name="평가진행상태코드" parmid="hd_rki_prg_stsc" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit10" name="RI상세 조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 			   SELECT 
				  	  A.OPRK_RKI_ID RKI_ID, A.OPRK_RKINM RKINM,  A.RKI_ATTR_C, E1.INTG_IDVD_CNM RKI_ATTR_NM                                                                                       	
				   	  , A.RKI_LVL_C, E2.INTG_IDVD_CNM RKI_LVL_NM, A.RKI_OBV_CNTN, A.RKI_DEF_CNTN, A.IDX_FML_CNTN RKI_FML_CNTN                   	
				      , A.RKI_UNT_C, E3.INTG_IDVD_CNM RKI_UNT, A.COL_FQ, E4.INTG_IDVD_CNM COL_FQ_NM                                                         	
				      , A.KRI_LMT_DSC, E6.INTG_IDVD_CNM KRI_LMT_NM, A.COM_COL_PSB_YN, A.KRI_YN, A.GU_DRTN_RER_DSC, E7.INTG_IDVD_CNM GU_DRTN_RER_NM, A.ACT_PLN_GRDC     	
				      , G.REL_TBLNM, G.TBL_EXPL, G.XTR_CND_SQLS              
 					</data>
 				</sql>
 				<sql id="sql12" name="SQL12">
 					<condition id="cond111" name="평가진행상태코드" variable="#hd_rki_prg_stsc#" comparison="eq" value="03" />
 					<data id="data111" name="">
		         FROM TB_OR_KN_RKIMM A                             
 					</data>
 				</sql>
 				<sql id="sql13" name="SQL13">
 					<condition id="cond111" name="평가진행상태코드" variable="#hd_rki_prg_stsc#" comparison="ne" value="03" />
 					<data id="data111" name="">
		         FROM TB_OR_KM_RKI A                             
 					</data>
 				</sql>
 				<sql id="sql14" name="SQL14">
 					<data id="data111" name="">
				 LEFT JOIN TB_OR_OM_CODE E1                        
				   ON A.GRP_ORG_C = E1.GRP_ORG_C                           
				  AND A.RKI_ATTR_C = E1.IDVDC_VAL                          
				  AND E1.INTG_GRP_C = 'RKI_ATTR_C'                         
				  AND E1.C_UYN = 'Y'                                       
				 LEFT JOIN TB_OR_OM_CODE E2                        
				   ON A.GRP_ORG_C = E2.GRP_ORG_C                           
				  AND A.RKI_LVL_C = E2.IDVDC_VAL                           
				  AND E2.INTG_GRP_C = 'RKI_LVL_C'                          
				  AND E2.C_UYN = 'Y'                                       
				 LEFT JOIN TB_OR_OM_CODE E3                        
				   ON A.GRP_ORG_C = E3.GRP_ORG_C                           
				  AND A.RKI_UNT_C = E3.IDVDC_VAL                           
				  AND E3.INTG_GRP_C = 'RKI_UNT_C'                          
				  AND E3.C_UYN = 'Y'                                       
				 LEFT JOIN TB_OR_OM_CODE E4                        
				   ON A.GRP_ORG_C = E4.GRP_ORG_C                           
				  AND A.COL_FQ = E4.IDVDC_VAL                              
				  AND E4.INTG_GRP_C = 'COL_FQ'                             
				  AND E4.C_UYN = 'Y'                                       
				 LEFT JOIN TB_OR_OM_CODE E5                        
				   ON A.GRP_ORG_C = E5.GRP_ORG_C                           
				  AND A.RPT_FQ_DSC = E5.IDVDC_VAL                          
				  AND E5.INTG_GRP_C = 'RPT_FQ_DSC'                         
				  AND E5.C_UYN = 'Y'                                       
				 LEFT JOIN TB_OR_OM_CODE E6                        
				   ON A.GRP_ORG_C = E6.GRP_ORG_C                           
				  AND A.KRI_LMT_DSC = E6.IDVDC_VAL                         
				  AND E6.INTG_GRP_C = 'KRI_LMT_DSC'                        
				  AND E6.C_UYN = 'Y'                                       
				 LEFT JOIN TB_OR_OM_CODE E7                        
				   ON A.GRP_ORG_C = E7.GRP_ORG_C                           
				  AND A.GU_DRTN_RER_DSC = E7.IDVDC_VAL                     
				  AND E7.INTG_GRP_C = 'GU_DRTN_RER_DSC'                    
				  AND E7.C_UYN = 'Y'                                       
				 LEFT JOIN (SELECT GRP_ORG_C, OPRK_RKI_ID,                 
				                    MAX(REL_TBLNM) REL_TBLNM,              
				                    MAX(TBL_EXPL) TBL_EXPL,                 
				                    MAX(XTR_CND_SQLS) XTR_CND_SQLS         
				            FROM TB_OR_KH_INF                      
				            GROUP BY GRP_ORG_C, OPRK_RKI_ID) G             
				   ON A.GRP_ORG_C = G.GRP_ORG_C                            
				  AND A.OPRK_RKI_ID = G.OPRK_RKI_ID                        
			    WHERE A.GRP_ORG_C = #grp_org_c# 								    	
			      AND A.OPRK_RKI_ID = #rki_id#
			  		</data>
 				</sql> 		
 				<sql id="sql15" name="SQL15">
 					<condition id="cond111" name="평가진행상태코드" variable="#hd_rki_prg_stsc#" comparison="eq" value="03" />
 					<data id="data111" name="">						    	
			      AND A.BAS_YM = #bas_ym# 								    	   
					</data>
 				</sql>
 				<sql id="sql16" name="SQL16">
 					<data id="data111" name="">
			      AND A.VLD_YN = 'Y'
			  		</data>
 				</sql> 	
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit15" name="관련 Risk Profile" type="S">
 				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
				SELECT 
			    	   A.BRC, B.BRNM 
			      FROM TB_OR_KH_BRC A 
			           , TB_OR_OM_ORGZ B 
			     WHERE A.GRP_ORG_C = #grp_org_c# 
			       AND A.OPRK_RKI_ID = #rki_id# 
			       AND A.GRP_ORG_C = B.GRP_ORG_C 
			       AND A.BRC = B.BRC 
			       AND B.UYN = 'Y' 
			       AND B.BR_LKO_YN = 'N'
			   		</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
	
	<process id="ORKR012001" name="KRI 전산 데이터 변경 이력 조회_화면호출" forward="/kri/ORKR0120" forwardng="/comm/errorPage" resource="kri" grid_process_id="" />
	
	<process id="ORKR012002" name="KRI 전산 데이터 변경 이력 조회_조회" forward="/comm/jsonLst" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<parm id="brc" name="사무소코드" parmid="brc" attr="S" default_value=""/>
		<parm id="rki_id" name="KRI지표ID" parmid="rki_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="KRI 전산 데이터 변경 이력 조회_조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT
							   A.BAS_YM
							   , A.OPRK_RKI_ID
							   , A.SQNO
							   , B.CHRG_EMPNM||'('||A.INPMN_ENO||')' EMPNM
							   , TO_CHAR(TO_DATE(A.CHG_DTM,'YYYYMMDDHH24MISS'),'YYYY.MM.DD HH24:MI:SS') CHG_DTM
							   , A.CHG_CNTN
							   , A.FST_VAL
			  			  FROM TB_OR_KH_NVL_CHG A
			  			       , TB_OR_OM_EMP B
			 			 WHERE A.GRP_ORG_C = B.GRP_ORG_C
						   AND A.INPMN_ENO = B.ENO
						   AND A.GRP_ORG_C = TRIM(#grp_org_c#)
						   AND A.BAS_YM = TRIM(#bas_ym#)
						   AND A.BRC = TRIM(#brc#)
						   AND A.OPRK_RKI_ID = TRIM(#rki_id#)
						 ORDER BY A.SQNO DESC
			   		</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
	<process id="ORKR020101" name="공통RI_화면조회" forward="/kri/ORKR0201" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
	</process>

	<process id="ORKR020102" name="공통리스크지표조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_comn_rki_id" name="리스크지표ID" parmid="sch_comn_rki_id" attr="S" default_value=""/>
		<parm id="sch_kri_yn" name="KRI여부" parmid="sch_kri_yn" attr="S" default_value=""/>
		<parm id="sch_rki_attr_c" name="리스크지표속성코드" parmid="sch_rki_attr_c" attr="S" default_value=""/>
		<parm id="sch_comn_rkinm" name="리스크지표명" parmid="sch_comn_rkinm" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="공통리스크지표조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT
							   A.COMN_RKI_ID
							   , A.COMN_RKINM
							   , A.RKI_OBV_CNTN
							   , A.RKI_DEF_CNTN
							   , A.IDX_FML_CNTN
							   , A.RKI_UNT_C
	  						   , (
							       SELECT C1.INTG_IDVD_CNM
							         FROM TB_OR_OM_CODE_CO C1
							        WHERE C1.INTG_GRP_C = 'RKI_UNT_C'
							          AND A.RKI_UNT_C = C1.IDVDC_VAL
							     ) RKI_UNT_NM
	  						   , A.COL_FQ
	  						   , (
							       SELECT C2.INTG_IDVD_CNM
							         FROM TB_OR_OM_CODE_CO C2
							        WHERE C2.INTG_GRP_C = 'COL_FQ'
							          AND A.COL_FQ = C2.IDVDC_VAL
							     ) COL_FQ_NM
							   , A.RPT_FQ_DSC
							   , (
							       SELECT C3.INTG_IDVD_CNM
							         FROM TB_OR_OM_CODE_CO C3
							        WHERE C3.INTG_GRP_C = 'RPT_FQ_DSC'
							          AND A.RPT_FQ_DSC = C3.IDVDC_VAL
							     ) RPT_FQ_DSNM
							   , A.KRI_YN
							   , A.RKI_ATTR_C
							   , (
							       SELECT C4.INTG_IDVD_CNM
							         FROM TB_OR_OM_CODE_CO C4
							        WHERE C4.INTG_GRP_C = 'RKI_ATTR_C'
							          AND A.RKI_ATTR_C = C4.IDVDC_VAL
							     ) RKI_ATTR_NM
	  					  FROM TB_OR_KM_RKI_CO A
	 				     WHERE VLD_YN = 'Y'
 					</data>
 				</sql>
 				<sql id="sql12" name="SQL12">
 					<condition id="cond111" name="sch_comn_rki_id != null" variable="#sch_comn_rki_id#" comparison="ne" value="" />
 					<data id="data111" name="">						    	
			      		   AND UPPER(A.COMN_RKI_ID) LIKE '%'||UPPER(TRIM(#sch_comn_rki_id#))||'%' 								    	   
					</data>
 				</sql>
 				<sql id="sql13" name="SQL13">
 					<condition id="cond111" name="sch_kri_yn != null" variable="#sch_comn_rki_id#" comparison="ne" value="" />
 					<data id="data111" name="">						    	
			      		   AND A.KRI_YN = TRIM(#sch_kri_yn#) 								    	   
					</data>
 				</sql>
 				<sql id="sql14" name="SQL14">
 					<condition id="cond111" name="sch_rki_attr_c != null" variable="#sch_rki_attr_c#" comparison="ne" value="" />
 					<data id="data111" name="">						    	
			      		   AND A.RKI_ATTR_C = TRIM(#sch_rki_attr_c#) 								    	   
					</data>
 				</sql>
 				<sql id="sql15" name="SQL15">
 					<condition id="cond111" name="sch_comn_rkinm != null" variable="#sch_comn_rkinm#" comparison="ne" value="" />
 					<data id="data111" name="">						    	
			      		   AND UPPER(A.COMN_RKINM) LIKE '%'||UPPER(TRIM(#sch_comn_rkinm#))||'%' 								    	   
					</data>
 				</sql>
 				<sql id="sql16" name="SQL16">
 					<data id="data111" name="">						    	
			      		   ORDER BY A.COMN_RKI_ID 								    	   
					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	

	<process id="ORKR020103" name="공통리스크지표삭제" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="comn_rki_id" name="공통리스크지표ID" parmid="comn_rki_id" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="공통리스크지표삭제" type="M" mode="update" multiid="comn_rki_id">
				<multivalue id="comn_rki_id" name="공통리스크지표ID" multiid="comn_rki_id"/>
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						UPDATE TB_OR_KM_RKI_CO
		   				   SET VLD_YN = 'N'
			 				   , VLD_ED_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
			 				   , LS_WKR_ENO = TRIM(#userid#)
			 				   , LSCHG_DTM = SYSDATE
		 				 WHERE COMN_RKI_ID = TRIM(#comn_rki_id#)
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit02" name="공통리스크지표삭제" type="M" mode="update" multiid="comn_rki_id">
				<multivalue id="comn_rki_id" name="공통리스크지표ID" multiid="comn_rki_id"/>
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						UPDATE TB_OR_KM_RKI
		   				   SET RKI_ATTR_C = '99'
		 				 WHERE (GRP_ORG_C, OPRK_RKI_ID) IN (
														     SELECT GRP_ORG_C, OPRK_RKI_ID
														       FROM TB_OR_KH_AFLCO_MPP
														      WHERE COMN_RKI_ID = TRIM(#comn_rki_id#)
														   )
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="공통리스크지표삭제" type="M" mode="update" multiid="comn_rki_id">
				<multivalue id="comn_rki_id" name="공통리스크지표ID" multiid="comn_rki_id"/>
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						DELETE 
						  FROM TB_OR_KH_AFLCO_MPP
		 				 WHERE COMN_RKI_ID = TRIM(#comn_rki_id#)
 					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
		
	</process>
	
	<process id="ORKR020201" name="리스크지표 신규등록화면" forward="/kri/ORKR0202" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit06" name="공통리스크지표ID MAX값" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT
							   'RI'||LPAD(TO_CHAR(TO_NUMBER(SUBSTR(NVL(MAX(COMN_RKI_ID),'RI000'),3,3))+1),3,'0') MAX_COMN_RKI_ID
						  FROM TB_OR_KM_RKI_CO
 					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR020202" name="계열사리스크지표조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="sch_grp_org_c" name="계열사코드" parmid="sch_grp_org_c" attr="S" default_value=""/>
		<parm id="sch_oprk_rki_id" name="리스크지표ID" parmid="sch_oprk_rki_id" attr="S" default_value=""/>
		<parm id="sch_oprk_rkinm" name="리스크지표명" parmid="sch_oprk_rkinm" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="계열사리스크지표조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT
					   		   A.GRP_ORG_C	                                                        
					   		   , B.GRP_ORGNM	                                                        
					   		   , A.OPRK_RKI_ID                                                          
					   		   , A.OPRK_RKINM                                                           
					   		   , A.RKI_OBV_CNTN                                                         
					   		   , A.RKI_DEF_CNTN                                                         
					   		   , A.IDX_FML_CNTN                                                         
					   		   , A.RKI_UNT_C                                                            
					   		   , (                                                                      
					       		   SELECT C1.INTG_IDVD_CNM 
					         		 FROM TB_OR_OM_CODE C1           	
					        		WHERE A.GRP_ORG_C = C1.GRP_ORG_C	                                
					          		  AND C1.INTG_GRP_C = 'RKI_UNT_C'                                  	
					          		  AND A.RKI_UNT_C = C1.IDVDC_VAL                                     
					     		 ) RKI_UNT_NM                                                           
					  		   , A.COL_FQ                                                               
					  		   , (                                                                      
					      		   SELECT C2.INTG_IDVD_CNM 
					      		     FROM TB_OR_OM_CODE C2           	
					        		WHERE A.GRP_ORG_C = C2.GRP_ORG_C	                                
					        		  AND C2.INTG_GRP_C = 'COL_FQ'                                     	
					        		  AND A.COL_FQ = C2.IDVDC_VAL                                        
					    		 ) COL_FQ_NM                                                            
					  		   , A.RPT_FQ_DSC                                                           
					  		   , (                                                                      
					        	   SELECT C3.INTG_IDVD_CNM 
					        	     FROM TB_OR_OM_CODE C3           	
					        		WHERE A.GRP_ORG_C = C3.GRP_ORG_C	                                
					        		  AND C3.INTG_GRP_C = 'RPT_FQ_DSC'                                 	
					        		  AND A.RPT_FQ_DSC = C3.IDVDC_VAL                                    
					    		 ) RPT_FQ_DSNM                                                          
					  		   , A.KRI_YN                                                               
					  		   , A.RKI_ATTR_C                                                           
					  		   , (                                                                      
					        	   SELECT C4.INTG_IDVD_CNM 
					        	     FROM TB_OR_OM_CODE C4           	
					        	    WHERE A.GRP_ORG_C = C4.GRP_ORG_C	                                
					        		  AND C4.INTG_GRP_C = 'RKI_ATTR_C'                                 	
					        		  AND A.RKI_ATTR_C = C4.IDVDC_VAL                                    
					    		 ) RKI_ATTR_NM                                                          
					  	  FROM TB_OR_KM_RKI A                                           	
					INNER JOIN TB_OR_OM_GRPORG B                                  	
					  	    ON A.GRP_ORG_C = B.GRP_ORG_C                                  			
					     WHERE A.VLD_YN = 'Y'                                                      
 					</data>
 				</sql>
 				<sql id="sql12" name="SQL12">
 					<condition id="cond111" name="sch_grp_org_c != null" variable="#sch_grp_org_c#" comparison="ne" value="" />
 					<data id="data111" name="">						    	
			      		   AND A.GRP_ORG_C = TRIM(#sch_grp_org_c#) 								    	   
					</data>
 				</sql>
 				<sql id="sql13" name="SQL13">
 					<condition id="cond111" name="sch_oprk_rki_id != null" variable="#sch_oprk_rki_id#" comparison="ne" value="" />
 					<data id="data111" name="">						    	
			      		   AND UPPER(A.OPRK_RKI_ID) LIKE '%'||UPPER(TRIM(#sch_oprk_rki_id#))||'%' 								    	   
					</data>
 				</sql>
 				<sql id="sql14" name="SQL14">
 					<condition id="cond111" name="sch_oprk_rkinm != null" variable="#sch_oprk_rkinm#" comparison="ne" value="" />
 					<data id="data111" name="">						    	
			      		   AND UPPER(A.OPRK_RKINM) LIKE '%'||UPPER(TRIM(#"sch_oprk_rkinm != null"#))||'%' 								    	   
					</data>
 				</sql>
				<sql id="sql16" name="SQL16">
 					<data id="data111" name="">						    	
			      		   ORDER BY B.PRTO_SQ, A.OPRK_RKI_ID 								    	   
					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	

	<process id="ORKR020203" name="공통RI등록/수정" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="mode" name="실행모드" parmid="mode" attr="S" default_value=""/>
		<parm id="comn_rki_id" name="공통리스크지표ID" parmid="comn_rki_id" attr="S" default_value=""/>
		<parm id="comn_rkinm" name="공통리스크지표명" parmid="comn_rkinm" attr="S" default_value=""/>
		<parm id="rki_attr_c" name="KRI속성" parmid="rki_attr_c" attr="S" default_value=""/>
		<parm id="col_fq" name="수집주기" parmid="col_fq" attr="S" default_value=""/>
		<parm id="rki_unt_c" name="단위" parmid="rki_unt_c" attr="S" default_value=""/>
		<parm id="kri_yn" name="KRI여부" parmid="kri_yn" attr="S" default_value=""/>
		<parm id="rki_lvl_c" name="지표수준" parmid="rki_lvl_c" attr="S" default_value=""/>
		<parm id="rki_obv_cntn" name="지표목적" parmid="rki_obv_cntn" attr="S" default_value=""/>
		<parm id="rki_def_cntn" name="지표정의" parmid="rki_def_cntn" attr="S" default_value=""/>
		<parm id="idx_fml_cntn" name="지표산식" parmid="idx_fml_cntn" attr="S" default_value=""/>
		<parm id="grp_org_c" name="그룹기관코드" parmid="grp_org_c" attr="A" default_value=""/>
		<parm id="oprk_rki_id" name="리스크지표ID" parmid="oprk_rki_id" attr="A" default_value=""/>
		<parm id="oprk_rkinm" name="리스크지표명" parmid="oprk_rkinm" attr="A" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="공통RI등록/수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
 					<condition id="cond111" name="mode == U" variable="#mode#" comparison="eq" value="U" />
 					<data id="data111" name="">						    	
						UPDATE TB_OR_KM_RKI_CO
			   			   SET COMN_RKINM = TRIM(#comn_rkinm#)
			     			   , RKI_ATTR_C = TRIM(#rki_attr_c#)
			     			   , COL_FQ = TRIM(#col_fq#)
			     			   , RKI_UNT_C = TRIM(#rki_unt_c#)
			     			   , KRI_YN = TRIM(#kri_yn#)
			     			   , RKI_LVL_C = TRIM(#rki_lvl_c#)
			     			   , RKI_OBV_CNTN = TRIM(#rki_obv_cntn#)
			     			   , RKI_DEF_CNTN = TRIM(#rki_def_cntn#)
			     			   , IDX_FML_CNTN = TRIM(#idx_fml_cntn#)
			     			   , LSCHG_DTM = SYSDATE
			     			   , LS_WKR_ENO = TRIM(#userid#)
			 			 WHERE COMN_RKI_ID = TRIM(#comn_rki_id#)
					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit02" name="공통RI등록/수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
					<condition id="cond111" name="mode != U" variable="#mode#" comparison="ne" value="U" />
 					<data id="data111" name="">						    	
						SELECT 'RI'||LPAD(TO_CHAR(TO_NUMBER(SUBSTR(NVL(MAX(COMN_RKI_ID),'RI000'),3,3))+1),3,'0') MAX_COMN_RKI_ID
						  FROM TB_OR_KM_RKI_CO
					</data>
 				</sql>
 				<result id="max_comn_rki_id" name="max_comn_rki_id" attrname="max_comn_rki_id" type="single_string"/>
			</unit>
			<unit id="unit03" name="공통RI등록/수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
 					<condition id="cond111" name="mode != U" variable="#mode#" comparison="ne" value="U" />
 					<data id="data111" name="">						    	
						INSERT 
						  INTO TB_OR_KM_RKI_CO (
				   			   COMN_RKI_ID, COMN_RKINM, RKI_ATTR_C, COL_FQ, RKI_UNT_C, GU_DRTN_RER_DSC
				 			   , KRI_YN, RKI_LVL_C, RKI_OBV_CNTN, RKI_DEF_CNTN, IDX_FML_CNTN
				 			   , VLD_ST_DT, VLD_ED_DT, VLD_YN, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
				 			   )
						VALUES ( 
			       			   TRIM(#comn_rki_id#), TRIM(#comn_rkinm#), TRIM(#rki_attr_c#), TRIM(#col_fq#), TRIM(#rki_unt_c#), '1'
				 			   , TRIM(#kri_yn#), TRIM(#rki_lvl_c#), TRIM(#rki_obv_cntn#), TRIM(#rki_def_cntn#), TRIM(#idx_fml_cntn#)
			     			   , TO_CHAR(SYSDATE,'YYYYMMDD'), '99991231', 'Y', SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)
			     			   )
					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit04" name="공통RI등록/수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">						    	
						INSERT 
						  INTO TB_OR_KH_RKI_HST_CO (
			   				   COMN_RKI_ID, HST_SQNO, COMN_RKINM, RKI_ATTR_C, COL_FQ, RKI_UNT_C, GU_DRTN_RER_DSC
			 				   , KRI_YN, RKI_LVL_C, RKI_OBV_CNTN, RKI_DEF_CNTN, IDX_FML_CNTN, RPT_FQ_DSC, TRMS_YN
			 				   , VLD_ST_DT, VLD_ED_DT, VLD_YN, FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO)
						SELECT
			   				   A.COMN_RKI_ID, B.HST_SQNO, A.COMN_RKINM, A.RKI_ATTR_C, A.COL_FQ, A.RKI_UNT_C, A.GU_DRTN_RER_DSC
			 			       , A.KRI_YN, A.RKI_LVL_C, A.RKI_OBV_CNTN, A.RKI_DEF_CNTN, A.IDX_FML_CNTN, A.RPT_FQ_DSC, A.TRMS_YN
			 				   , A.VLD_ST_DT, A.VLD_ED_DT, A.VLD_YN, SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)
		  			      FROM TB_OR_KM_RKI_CO A
		     				   , ( SELECT NVL(MAX(HST_SQNO),0)+1 HST_SQNO 
		     				         FROM TB_OR_KH_RKI_HST_CO
		     	 				    WHERE COMN_RKI_ID = TRIM(#comn_rki_id#)
		     	 				 ) B
		 			     WHERE A.COMN_RKI_ID = TRIM(#comn_rki_id#)
					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit05" name="공통RI등록/수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">						    	
						UPDATE TB_OR_KM_RKI
		   				   SET RKI_ATTR_C = '99'
		 				 WHERE (GRP_ORG_C, OPRK_RKI_ID) IN (
															 SELECT GRP_ORG_C, OPRK_RKI_ID
															   FROM FGOR.TB_OR_KH_AFLCO_MPP
															  WHERE COMN_RKI_ID = TRIM(#comn_rki_id#)
															)
					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit05" name="공통RI등록/수정" type="S" mode="update" multiid="">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">						    	
						DELETE 
						  FROM TB_OR_KH_AFLCO_MPP
		 				 WHERE COMN_RKI_ID = TRIM(#comn_rki_id#)
					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit06" name="공통RI등록/수정" type="M" mode="update" multiid="grp_org_c">
				<multivalue id="grp_org_c" name="그룹기관코드" multiid="grp_org_c"/>
				<multivalue id="oprk_rki_id" name="리스크지표ID" multiid="oprk_rki_id"/>
				<multivalue id="oprk_rkinm" name="리스크지표명" multiid="oprk_rkinm"/>
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">						    	
						INSERT 
						  INTO TB_OR_KH_AFLCO_MPP (
							   GRP_ORG_C, COMN_RKI_ID, OPRK_RKI_ID, OPRK_RKINM
		  					   , FIR_INP_DTM, FIR_INPMN_ENO, LSCHG_DTM, LS_WKR_ENO
		  					   )
						VALUES (
							   TRIM(#grp_org_c#), TRIM(#comn_rki_id#), TRIM(#oprk_rki_id#), TRIM(#oprk_rkinm#)
		  					   , SYSDATE, TRIM(#userid#), SYSDATE, TRIM(#userid#)
							   )
					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<unit id="unit99" name="공통RI등록/수정" type="M" mode="update" multiid="grp_org_c">
				<multivalue id="grp_org_c" name="그룹기관코드" multiid="grp_org_c"/>
				<multivalue id="oprk_rki_id" name="리스크지표ID" multiid="oprk_rki_id"/>
				<multivalue id="oprk_rkinm" name="리스크지표명" multiid="oprk_rkinm"/>
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">						    	
						UPDATE TB_OR_KM_RKI
		   				   SET RKI_ATTR_C = TRIM(#rki_attr_c#)
		     				   , LSCHG_DTM = SYSDATE
			 				   , LS_WKR_ENO = TRIM(#userid#)
		 				 WHERE GRP_ORG_C = TRIM(#grp_org_c#)
		   				   AND OPRK_RKI_ID = TRIM(#oprk_rki_id#)
					</data>
 				</sql>
 				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
		</group>
	</process>

	<process id="ORKR020301" name="리스크지표 수정화면" forward="/kri/ORKR0203" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="comn_rki_id" name="공통리스크지표ID" parmid="c_comn_rki_id" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit06" name="공통리스크지표상세조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">						    	
						SELECT
							   A.COMN_RKI_ID                                                          		
							   , A.COMN_RKINM                                                           		
							   , A.RKI_OBV_CNTN                                                         		
							   , A.RKI_DEF_CNTN                                                         		
							   , A.IDX_FML_CNTN                                                         		
							   , A.RKI_UNT_C                                                            		
							   , (                                                                      		
							       SELECT C1.INTG_IDVD_CNM FROM FGOR.TB_OR_OM_CODE_CO C1           		
							       WHERE C1.INTG_GRP_C = 'RKI_UNT_C'                                  		
							       AND A.RKI_UNT_C = C1.IDVDC_VAL                                     		
							     ) RKI_UNT_NM                                                           		
							   , A.COL_FQ                                                               		
							   , (                                                                      		
							       SELECT C2.INTG_IDVD_CNM FROM FGOR.TB_OR_OM_CODE_CO C2           		
							       WHERE C2.INTG_GRP_C = 'COL_FQ'                                     		
							       AND A.COL_FQ = C2.IDVDC_VAL                                        		
							     ) COL_FQ_NM                                                            		
							   , A.KRI_YN                                                               		
							   , A.RKI_ATTR_C                                                           		
							   , (                                                                      		
							       SELECT C4.INTG_IDVD_CNM FROM FGOR.TB_OR_OM_CODE_CO C4           		
							       WHERE C4.INTG_GRP_C = 'RKI_ATTR_C'                                 		
							       AND A.RKI_ATTR_C = C4.IDVDC_VAL                                    		
							     ) RKI_ATTR_NM                                                          		
							   , A.RKI_LVL_C                                                           			
							   , (                                                                      		
							        SELECT C5.INTG_IDVD_CNM FROM FGOR.TB_OR_OM_CODE_CO C5           		
							        WHERE C5.INTG_GRP_C = 'RKI_LVL_C'                                 			
							        AND A.RKI_LVL_C = C5.IDVDC_VAL                                    			
							     ) RKI_LVL_NM                                                          			
						  FROM TB_OR_KM_RKI_CO A                                           		
					     WHERE A.COMN_RKI_ID = TRIM(#comn_rki_id#)
					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
			<unit id="unit07" name="계열사공통리스크지표매핑조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">						    	
						SELECT
							   A.COMN_RKI_ID                                                     	
							   , A.OPRK_RKI_ID                                                    	
							   , A.OPRK_RKINM                                                      	
							   , A.GRP_ORG_C                                                       	
							   , C.GRP_ORGNM                                                       	
							   , B.RKI_ATTR_C                                                		
							   , (                                                                 	
							       SELECT CODE.INTG_IDVD_CNM FROM FGOR.TB_OR_OM_CODE_CO CODE	
							       WHERE CODE.INTG_GRP_C = 'RKI_ATTR_C'                          	
							       AND B.RKI_ATTR_C = CODE.IDVDC_VAL                            	
							     ) RKI_ATTR_NM                                                     	
						  FROM TB_OR_KH_AFLCO_MPP A                                  	
					INNER JOIN TB_OR_KM_RKI_CO B                                	
							ON A.COMN_RKI_ID = B.COMN_RKI_ID                                  	
					INNER JOIN FGOR.TB_OR_OM_GRPORG C                                	
							ON A.GRP_ORG_C = C.GRP_ORG_C                                     	
					     WHERE A.COMN_RKI_ID = TRIM(#comn_rki_id#)
					  ORDER BY C.PRTO_SQ                                                 	
					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
	
	<process id="ORKR020601" name="KRI월별보고서(지주)" forward="/kri/ORKR0206" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="평가년월조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
						SELECT NVL(MAX(BAS_YM),TO_CHAR(SYSDATE,'YYYYMM')) BAS_YM 
						  FROM TB_OR_OM_SCHD
			   		     UNION                                                                                                                          	            	       
			   			SELECT TO_CHAR(ADD_MONTHS(TO_DATE((SELECT NVL(MAX(BAS_YM),TO_CHAR(SYSDATE,'YYYYMM')) FROM TB_OR_OM_SCHD),'YYYYMM'), -LEVEL),'YYYYMM') AS BAS_YM                                                                                                                       	            	   
			   			  FROM DUAL                                                                                                                       	            	   
			        CONNECT BY LEVEL &lt;= MONTHS_BETWEEN(                                                                                                             	   
														   TO_DATE((SELECT NVL(MAX(BAS_YM),TO_CHAR(SYSDATE,'YYYYMM')) FROM FGOR.TB_OR_OM_SCHD),'YYYYMM')                               	            	   
														   ,TO_DATE((SELECT NVL(MIN(BAS_YM),'202101') FROM FGOR.TB_OR_OM_SCHD),'YYYYMM')                                                	            	   
			   											 )                                                                                                                              	            	       
			   	      ORDER BY BAS_YM DESC                                                                                                             	            	   
 					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
	
	<process id="ORKR020602" name="KRI월별보고서(지주)_계열사별 KRI 허용한도 초과 현황" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="평가년월" parmid="bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="계열사리스크지표조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						SELECT
	      					   '**' GRP_ORG_C                                                       
	     					   , '합계' GRP_ORGNM                                                        
	     					   , NVL(SUM(A.GREEN_CNT),0) GREEN_CNT /* GEEEN 건수 */                                     
	     					   , NVL(SUM(A.YELLOW_CNT),0) YELLOW_CNT /* YELLOW 건수 */                                    
	     					   , NVL(SUM(A.RED_CNT),0) RED_CNT /* RED 건수 */                                       
	     					   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'   
	           						  THEN '0%'                                                                             
	           						  WHEN (NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'                           
	           						  THEN '100%'                                                                           
	      						 ELSE TO_CHAR (                                                                                     
								           	    (                                                                                 
								                  NVL(SUM(A.GREEN_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
								                ) * 100                                                                          
								                , 'FM990.09'                                                                       
								           	  )||'%'                                                                                
							      END GREEN_RATIO                                                                            
							   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'   
							          THEN '0%'                                                                             
							          WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'                            
							          THEN '100%'                                                                           
							     ELSE TO_CHAR (                                                                                     
							               		(                                                                                 
							                 	  NVL(SUM(A.YELLOW_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
							                    ) * 100                                                                          
							                    , 'FM990.09'                                                                       
							           		  )||'%'                                                                                
							      END YELLOW_RATIO                                                                           
	     					   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'   
	           						  THEN '0%'                                                                             
	           						  WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)) = '0'                         
	           						  THEN '100%'                                                                           
	      						 ELSE TO_CHAR (                                                                                     
	               								(                                                                                 
	                 							  NVL(SUM(A.RED_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
	                							) * 100                                                                          
	               							    ,'FM990.09'                                                                       
	           								  )||'%'                                                                                
	      						  END RED_RATIO                                                                              
	      					   , NVL(SUM(A.CFT_PLAN_CNT),0) CFT_PLAN_CNT /*대응방안 입력대상 건수*/                                  
	     				  FROM                                                                                        
	     					   (                                                                                           
	     						 SELECT                                                                                      
							            CASE WHEN KRI_GRDNM = 'GREEN' THEN 1 ELSE 0 END GREEN_CNT                               
							            , CASE WHEN KRI_GRDNM = 'YELLOW' THEN 1 ELSE 0 END YELLOW_CNT                             
							            , CASE WHEN KRI_GRDNM = 'RED' THEN 1 ELSE 0 END RED_CNT                                   
							            , CASE WHEN CFT_PLAN_YN = 'Y' THEN 1 ELSE 0 END CFT_PLAN_CNT                              
	       						   FROM TB_OR_KS_RKI_SMST                                                            
	      						  WHERE BAS_YM = TRIM(#bas_ym#)
	     					   ) A                                                                                         
	 					 UNION                                                                                           
	 					SELECT                                                                                          
	      					   B.GRP_ORG_C GRP_ORG_C                                                       
	     					   , B.GRP_ORGNM GRP_ORGNM                                                       
	     				       , NVL(SUM(A.GREEN_CNT),0) GREEN_CNT /* GEEEN 건수 */                                     
	     					   , NVL(SUM(A.YELLOW_CNT),0) YELLOW_CNT /* YELLOW 건수 */                                    
	     					   , NVL(SUM(A.RED_CNT),0) RED_CNT /* RED 건수 */                                       
	     					   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'   
	           						  THEN '0%'                                                                             
	           						  WHEN (NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'                           
	           						  THEN '100%'                                                                           
	      						 ELSE TO_CHAR (                                                                                     
	               								(                                                                                 
	                 							  NVL(SUM(A.GREEN_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
	                						    ) * 100                                                                          
	               								,'FM990.09'                                                                       
	           								  )||'%'                                                                                
	      						  END GREEN_RATIO                                                                            
	     					   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'   
	           						  THEN '0%'                                                                             
	           						  WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'                            
	           						  THEN '100%'                                                                           
	      			    		 ELSE TO_CHAR (                                                                                     
	               								(                                                                                 
	                 							  NVL(SUM(A.YELLOW_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
	                							) * 100                                                                          
	               								,'FM990.09'                                                                       
	           								  )||'%'                                                                                
	      						  END YELLOW_RATIO                                                                           
	     					   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'   
	           						  THEN '0%'                                                                             
	           						  WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)) = '0'                         
	           						  THEN '100%'                                                                           
	      						 ELSE TO_CHAR (                                                                                     
	               								(                                                                                 
	                 							  NVL(SUM(A.RED_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
	                							) * 100                                                                          
	               								,'FM990.09'                                                                       
	           								  )||'%'                                                                                
	      						  END RED_RATIO                                                                              
	     					   , NVL(SUM(A.CFT_PLAN_CNT),0) CFT_PLAN_CNT /*대응방안 입력대상 건수*/                                   
	 					  FROM                                                                                            
	     					   (                                                                                           
	     						 SELECT                                                                                      
	         						    GRP_ORG_C                                                                               
	        							, CASE WHEN KRI_GRDNM = 'GREEN' THEN 1 ELSE 0 END GREEN_CNT                               
	        							, CASE WHEN KRI_GRDNM = 'YELLOW' THEN 1 ELSE 0 END YELLOW_CNT                             
	        							, CASE WHEN KRI_GRDNM = 'RED' THEN 1 ELSE 0 END RED_CNT                                   
	        							, CASE WHEN CFT_PLAN_YN = 'Y' THEN 1 ELSE 0 END CFT_PLAN_CNT                              
	       						   FROM TB_OR_KS_RKI_SMST                                                            
	      						  WHERE BAS_YM = TRIM(#bas_ym#)
	     					   ) A                                                                                         
	    					   , TB_OR_OM_GRPORG B                                                                   
						 WHERE A.GRP_ORG_C(+) = B.GRP_ORG_C                                                              
						   AND B.MAJ_AFLCO_YN = 'Y'                                                                      
						 GROUP BY B.GRP_ORG_C,B.GRP_ORGNM                                                                
						 ORDER BY GRP_ORG_C                                                                              
 					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR020603" name="KRI월별보고서(지주)_계열사별 KRI 허용한도 초과 현황" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="평가년월" parmid="bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="계열사리스크지표조회" type="S">
				<sql id="sql11" name="SQL11">
 					<data id="data111" name="">
 						SELECT
	     					   B.IDVDC_VAL                                                                                 
	    					   , B.KRI_ATTRIBUTE                                                                             
	    					   , NVL(SUM(A.GREEN_CNT),0) GREEN_CNT                                                           
	    					   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'    
	           						  THEN '0%'                                                                             
	           						  WHEN (NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'                           
	           						  THEN '100%'                                                                           
	      						 ELSE TO_CHAR (                                                                                     
	               								(                                                                                 
	                 							  NVL(SUM(A.GREEN_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
	                							) * 100                                                                          
	               								,'FM990.09'                                                                       
	           								  )||'%'                                                                                
	      						  END GREEN_RATIO                                                                            
	    					   , NVL(SUM(A.YELLOW_CNT),0) YELLOW_CNT                                                         
	    					   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'    
	           						  THEN '0%'                                                                             
	           						  WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'                            
	           						  THEN '100%'                                                                           
	      						 ELSE TO_CHAR (                                                                                     
	               								(                                                                                 
	                 							  NVL(SUM(A.YELLOW_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
	                							) * 100                                                                          
	               							    ,'FM990.09'                                                                       
	           								  )||'%'                                                                                
	      						  END YELLOW_RATIO                                                                           
	    					   , NVL(SUM(A.RED_CNT),0) RED_CNT                                                               
	    					   , CASE WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0)) = '0'    
	           						  THEN '0%'                                                                             
	           						  WHEN (NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)) = '0'                         
	           						  THEN '100%'                                                                           
	      						 ELSE TO_CHAR (                                                                                     
	               								(                                                                                 
	                 							  NVL(SUM(A.RED_CNT),0)/(NVL(SUM(A.GREEN_CNT),0)+NVL(SUM(A.YELLOW_CNT),0)+NVL(SUM(A.RED_CNT),0))        
	                							) * 100                                                                          
	               								,'FM990.09'                                                                       
	           								  )||'%'                                                                                
	      					      END RED_RATIO                                                                              
	   					  FROM                                                                                          
	    					   (                                                                                            
	     						 SELECT                                                                                      
	         						    RKI_ATTR_C                                                                              
	        							, CASE WHEN KRI_GRDNM = 'GREEN' THEN 1 ELSE 0 END GREEN_CNT                               
	        						    , CASE WHEN KRI_GRDNM = 'YELLOW' THEN 1 ELSE 0 END YELLOW_CNT                             
	        							, CASE WHEN KRI_GRDNM = 'RED' THEN 1 ELSE 0 END RED_CNT                                   
	       						   FROM TB_OR_KS_RKI_SMST                                                            
	      						  WHERE BAS_YM = TRIM(#bas_ym#)
	     					   ) A                                                                                         
	    					   , (                                                                                           
	     						   SELECT IDVDC_VAL,INTG_IDVD_CNM||' KRI' KRI_ATTRIBUTE                                        
	       							 FROM TB_OR_OM_CODE                                                                
	      							WHERE INTG_GRP_C = 'RKI_ATTR_C'                                                            
	        						  AND IDVDC_VAL &lt;&gt; '99' /* '99'는 계열사 고유로 지주 월별보고서에는 포함 x */                    			  
	     						 GROUP BY IDVDC_VAL,INTG_IDVD_CNM                                                            
	     						 ORDER BY IDVDC_VAL                                                                          
	     					   ) B                                                                                         
	 					 WHERE A.RKI_ATTR_C(+) = B.IDVDC_VAL                                                             
	 				  GROUP BY B.IDVDC_VAL , B.KRI_ATTRIBUTE                                                          
	 				  ORDER BY B.IDVDC_VAL                                                                            
 					</data>
 				</sql>
 				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011001" name="전행 KRI 결과 모니터링 요약" forward="/kri/ORKR0110" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<session id="rki_prg_stsc" name="리스크진행상태코드" sessionid="rki_prg_stsc" object="String" default_value=""/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="KRI평가일정조회 공통" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT /*KRI평가일정조회*/ 
			       			   A.BAS_YM /*기준년월*/  
			     			   , A.RKI_ST_DT AS EFCT_ST_DT /*모니터링시작일자*/ 
			     			   , A.RKI_ED_DT AS EFCT_ED_DT /*모니터링종료일자*/ 
			     			   , A.RKI_PRG_STSC /*리스크진행상태코드*/  
			     			   , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') AS FIR_INP_DTM /*전월마감일자*/  
			     			   , DECODE(A.BAS_YM,(SELECT MAX(BAS_YM) FROM TB_OR_OM_SCHD WHERE GRP_ORG_C=A.GRP_ORG_C),'Y','N') AS PRE_YN /*현재진행여부*/ 
			  			  FROM TB_OR_OM_SCHD A /*KRI평가일정관리기본*/ 
			 			 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
			 		</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="rki_prg_stsc == 3" variable="#rki_prg_stsc#" comparison="eq" value="3" />
					<data id="data111" name="">
				   		   AND A.RKI_PRG_STSC IN ('03','04')  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011009" name="본부부서  KRI 평가결과" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="본부부서 KRI 평가결과" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT COUNT(DISTINCT A.BRC) AS H_TARGET_CNT
						     , COUNT(*) 			 AS H_KRI_CNT
						     , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) AS H_RED_CNT
						     , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) - NVL(MAX(D.B_BEF_RED_CNT),0)
						                             AS H_RED_CHG_CNT
						     , COUNT(C.BRC) 		 AS H_PLAN_CNT
						     , COUNT(C.BRC) - NVL(MAX(D.B_BEF_PLAN_CNT),0)		 AS H_PLAN_CHG_CNT
						     , NVL(MAX(D.B_BEF_RED_CNT),0)  AS H_BEF_RED_CNT
						     , NVL(MAX(D.B_BEF_PLAN_CNT),0) AS H_BEF_PLAN_CNT
						  FROM TB_OR_KS_RKI_BR_SMST A, 
						          ( SELECT GRP_ORG_C, BRC
						                         FROM TB_OR_OM_ORGZ 
						                        WHERE UP_BRC IN ( 
						                                           SELECT BRC
						                                             FROM TB_OR_OM_ORGZ 
						                                            WHERE UP_BRC = 'SHHQ'
						                                          )
						          ) B, TB_OR_KM_ACT C
						     , ( SELECT NVL(SUM(CASE WHEN X.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) AS B_BEF_RED_CNT
						              , COUNT(Z.BRC) AS B_BEF_PLAN_CNT
						           FROM TB_OR_KS_RKI_BR_SMST X,  
						                ( SELECT GRP_ORG_C, BRC
						                    FROM TB_OR_OM_ORGZ 
						                   WHERE UP_BRC IN ( 
						                                   SELECT BRC
						                                     FROM TB_OR_OM_ORGZ 
						                                    WHERE UP_BRC = 'SHHQ'
						                                  )
						                ) Y, TB_OR_KM_ACT Z
						          WHERE X.GRP_ORG_C  = Y.GRP_ORG_C
						            AND X.BRC        = Y.BRC
						            AND X.BAS_YM     = TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -1), 'YYYYMM')
						            AND X.GRP_ORG_C  = Z.GRP_ORG_C(+)
						            AND X.BRC        = Z.BRC(+)
						            AND X.OPRK_RKI_ID= Z.OPRK_RKI_ID(+)
						            AND X.BAS_YM     = Z.BAS_YM(+)  
						        ) D
						 WHERE A.GRP_ORG_C  = B.GRP_ORG_C
						   AND A.BRC        = B.BRC
						   AND A.BAS_YM     = TRIM(#sch_bas_ym#)
						   AND A.GRP_ORG_C  = C.GRP_ORG_C(+)
						   AND A.BRC        = C.BRC(+)
						   AND A.OPRK_RKI_ID= C.OPRK_RKI_ID(+)
						   AND A.BAS_YM     = C.BAS_YM(+) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
	
	<process id="ORKR011010" name="영업점 KRI 평가결과" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="영업점 KRI 평가결과" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT COUNT(DISTINCT A.BRC) AS B_TARGET_CNT
						     , COUNT(*) 			 AS B_KRI_CNT
						     , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) AS B_RED_CNT
						     , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) - NVL(MAX(D.B_BEF_RED_CNT),0)
						                             AS B_RED_CHG_CNT
						     , COUNT(C.BRC) 		 AS B_PLAN_CNT
						     , COUNT(C.BRC) - NVL(MAX(D.B_BEF_PLAN_CNT),0)		 AS B_PLAN_CHG_CNT
						     , MAX(D.B_BEF_RED_CNT)  AS B_BEF_RED_CNT
						     , MAX(D.B_BEF_PLAN_CNT) AS B_BEF_PLAN_CNT
						  FROM TB_OR_KS_RKI_BR_SMST A, TB_OR_OM_ORGZ B, TB_OR_KM_ACT C
						     , ( SELECT NVL(SUM(CASE WHEN X.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) AS B_BEF_RED_CNT
						              , COUNT(Z.BRC) AS B_BEF_PLAN_CNT
						           FROM TB_OR_KS_RKI_BR_SMST X, TB_OR_OM_ORGZ Y, TB_OR_KM_ACT Z
						          WHERE X.GRP_ORG_C  = Y.GRP_ORG_C
						            AND X.BRC        = Y.BRC
						            AND X.BAS_YM     = TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -1), 'YYYYMM')
						            AND '03'         = Y.HOFC_BIZO_DSC
						            AND X.GRP_ORG_C  = Z.GRP_ORG_C(+)
						            AND X.BRC        = Z.BRC(+)
						            AND X.OPRK_RKI_ID= Z.OPRK_RKI_ID(+)
						            AND X.BAS_YM     = Z.BAS_YM(+)  
						        ) D
						 WHERE A.GRP_ORG_C  = B.GRP_ORG_C
						   AND A.BRC        = B.BRC
						   AND A.BAS_YM     = TRIM(#sch_bas_ym#)
						   AND '03'         = B.HOFC_BIZO_DSC
						   AND A.GRP_ORG_C  = C.GRP_ORG_C(+)
						   AND A.BRC        = C.BRC(+)
						   AND A.OPRK_RKI_ID= C.OPRK_RKI_ID(+)
						   AND A.BAS_YM     = C.BAS_YM(+) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>
	
	<process id="ORKR011011" name="본부부서 주요 KRI 발생내역" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="본부부서 주요 KRI 발생내역" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT A.*  
							 , ROWNUM AS NUM
						     , C.KRI_NVL || DECODE(C.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_01
						     , D.KRI_NVL || DECODE(D.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_02
						     , E.KRI_NVL || DECODE(E.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_03
						     , F.KRI_NVL || DECODE(F.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_04
						     , G.KRI_NVL || DECODE(G.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_05
						     , H.KRI_NVL || DECODE(H.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_06
						     , I.BRC
						     , J.BRNM						     
						  FROM TB_OR_KS_RKI_BR_SMST A, TB_OR_KM_ACT B
						      ,TB_OR_KS_RKI_BR_SMST C 
						      ,TB_OR_KS_RKI_BR_SMST D 
						      ,TB_OR_KS_RKI_BR_SMST E 
						      ,TB_OR_KS_RKI_BR_SMST F 
						      ,TB_OR_KS_RKI_BR_SMST G 
						      ,TB_OR_KS_RKI_BR_SMST H 
						      ,TB_OR_KH_BRC         I
						      ,( SELECT GRP_ORG_C, BRC, BRNM
						                    FROM TB_OR_OM_ORGZ 
						                   WHERE UP_BRC IN ( 
						                                   SELECT BRC
						                                     FROM TB_OR_OM_ORGZ 
						                                    WHERE UP_BRC = 'SHHQ'
						                                  )
						                )        J						      
						 WHERE A.GRP_ORG_C  = B.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= B.OPRK_RKI_ID(+)
						   AND A.BAS_YM     = TRIM(TRIM(#sch_bas_ym#))
						   AND A.GRP_ORG_C  = C.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= C.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -1), 'YYYYMM') = C.BAS_YM(+)
						   AND A.BRC = C.BRC(+)
						
						   AND A.GRP_ORG_C  = D.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= D.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -2), 'YYYYMM') = D.BAS_YM(+)
						   AND A.BRC = D.BRC(+)
						   
						   AND A.GRP_ORG_C  = E.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= E.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -3), 'YYYYMM') = E.BAS_YM(+)
						   AND A.BRC = E.BRC(+)
						
						   AND A.GRP_ORG_C  = F.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= F.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -4), 'YYYYMM') = F.BAS_YM(+)
						   AND A.BRC = F.BRC(+)
						
						   AND A.GRP_ORG_C  = G.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= G.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -5), 'YYYYMM') = G.BAS_YM(+)
						   AND A.BRC = G.BRC(+)
						   
						   AND A.GRP_ORG_C  = H.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= H.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -6), 'YYYYMM') = H.BAS_YM(+)
						   AND A.BRC = H.BRC(+)
						   
						   AND A.GRP_ORG_C  = I.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= I.OPRK_RKI_ID(+)
						   
						   AND I.GRP_ORG_C  = J.GRP_ORG_C
						   AND I.BRC        = J.BRC						   
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>		
	
	<process id="ORKR011012" name="영업점 RED 최대발생지점 ( TOP 10 )" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="영업점 RED 최대발생지점 ( TOP 10 )" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT X.BRC, X.CNT, X.B_RANK, Y.BRNM
						  FROM (
						        SELECT A.GRP_ORG_C, A.BRC, COUNT(*) CNT
						             , RANK() OVER ( ORDER BY COUNT(*)  DESC ) AS B_RANK
						          FROM TB_OR_KS_RKI_BR_SMST A, TB_OR_OM_ORGZ B
						         WHERE A.GRP_ORG_C 	= TRIM(#grp_org_c#)
						           AND A.BAS_YM 	= TRIM(#sch_bas_ym#)
						           AND A.GRP_ORG_C  = B.GRP_ORG_C
						           AND A.BRC        = B.BRC
						           AND '03'         = B.HOFC_BIZO_DSC
						           AND A.KRI_GRDNM  = 'RED'
						         GROUP BY A.GRP_ORG_C, A.BRC  
						       ) X , TB_OR_OM_ORGZ Y 
						 WHERE X.B_RANK &lt; 11
						   AND X.GRP_ORG_C = Y.GRP_ORG_C
						   AND X.BRC       = Y.BRC  				   
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>		
	
	<process id="ORKR011013" name="영업점 RED 최대발생 KRI ( TOP 10 )" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" name="기준년월" parmid="bas_ym" attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="영업점 RED 최대발생 KRI ( TOP 10 )" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						 SELECT X.GRP_ORG_C, X.OPRK_RKI_ID, X.CNT, X.OPRK_RKINM, X.B_RANK
						   FROM (
						         SELECT A.GRP_ORG_C, A.OPRK_RKI_ID, COUNT(*) CNT, MAX(A.OPRK_RKINM) AS OPRK_RKINM
						              , RANK() OVER ( ORDER BY COUNT(*)  DESC ) AS B_RANK
						           FROM TB_OR_KS_RKI_BR_SMST A, TB_OR_OM_ORGZ B
						          WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
						            AND A.BAS_YM 	= TRIM(#sch_bas_ym#)
						            AND A.KRI_GRDNM	= 'RED'
						            AND A.GRP_ORG_C = B.GRP_ORG_C
            						AND A.BRC       = B.BRC
            						AND '03'        = B.HOFC_BIZO_DSC
						          GROUP BY A.GRP_ORG_C, A.OPRK_RKI_ID
						         ) X
						 WHERE X.B_RANK &lt; 11			   
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>		
	
	<process id="ORKR011014" name="전행 KRI 결과 모니터링 요약 결재" forward="/comm/saveOk" forwardng="/comm/saveNg" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="brc" 			name="사무소코드" 		parmid="brc" 			attr="A" default_value=""/>
		<parm id="oprk_rki_id" 		name="리스크ID" 			parmid="oprk_rki_id" 		attr="A" default_value=""/>
		<parm id="kri_nvl" 		name="kri값" 			parmid="kri_nvl" 		attr="A" default_value=""/>
		<parm id="dcz_dc" 		name="결재진행코드" 		parmid="dcz_dc" 		attr="A" default_value=""/>
		<parm id="dcz_objr_eno" name="결재확인자개인번호" 	parmid="dcz_objr_eno" 	attr="A" default_value=""/>
		<parm id="sch_rtn_cntn" name="결재/반려의견" 		parmid="sch_rtn_cntn" 	attr="A" default_value=""/>
		<parm id="dcz_rmk_c" 	name="결재비고코드" 		parmid="dcz_rmk_c" 		attr="A" default_value=""/>
		
		<group id="grp01" name="grp01" type="M" multiid="oprk_rki_id">
			<multivalue id="brc" 			name="brc" 			multiid="brc"/>
			<multivalue id="oprk_rki_id" 		name="oprk_rki_id" 		multiid="oprk_rki_id"/>
			<multivalue id="dcz_dc" 		name="dcz_dc" 		multiid="dcz_dc"/>
			<multivalue id="dcz_objr_eno" 	name="dcz_objr_eno" multiid="dcz_objr_eno"/>
			<multivalue id="sch_rtn_cntn" 	name="sch_rtn_cntn" multiid="sch_rtn_cntn"/>
			<multivalue id="dcz_rmk_c" 		name="dcz_rmk_c" 	multiid="dcz_rmk_c"/>
			
			<multivalue id="kri_nvl" name="kri_nvl" multiid="kri_nvl"/>
			
			<unit id="unit01" name="MAX결재일련번호 채번" type="S" mode="select" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 SELECT  NVL(MAX(DCZ_SQNO)+1, 1) DCZ_SQNO
						 FROM    TB_OR_KH_ACT_DCZ   
						 WHERE   GRP_ORG_C   = #grp_org_c#  
						 AND     BRC         = TRIM(#brc#)        
						 AND     OPRK_RKI_ID = #oprk_rki_id#
						 AND     BAS_YM   	 = #bas_ym#                 
					</data>
				</sql>
				<result id="result" name="dcz_sqno" attrname="dcz_sqno" type="single_string"/>
			</unit>
			<unit id="unit02" name="결재 테이블 INSERT" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 INSERT  INTO TB_OR_KH_ACT_DCZ 
						     (   GRP_ORG_C
						     ,	 BAS_YM                        
						     ,   OPRK_RKI_ID                     
						     ,   BRC                          
						     ,   DCZ_SQNO                      
						     ,   DCZ_DT                        
						     ,   DCZMN_ENO                       
						     ,   ACT_DCZ_STSC  
						     ,	 RTN_CNTN
						    -- ,   DCZ_OBJR_ENO 
						    -- ,   DCZ_RMK_C            
						     ,   FIR_INP_DTM                   
						     ,   FIR_INPMN_ENO                 
						     ,   LSCHG_DTM                     
						     ,   LS_WKR_ENO                    
						     )                                 
						        VALUES (                       
						         TRIM(#grp_org_c#)       
						     ,   TRIM(#bas_ym#)        
						     ,   TRIM(#oprk_rki_id#)    
						     ,   TRIM(#brc#)      
						     ,   #dcz_sqno#                     
						     ,   TO_CHAR(SYSDATE,'YYYYMMDD')   
						     ,   TRIM(#userid#)       
						     ,   #dcz_dc#
						     ,	 #sch_rtn_cntn#
						     --,   #dcz_objr_eno#  
						     --,   #dcz_rmk_c#                        
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						     ,   SYSDATE                       
						     ,   TRIM(#userid#)       
						        )                              
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit>
			<!--unit id="unit99" name="DCZ_SQNO업데이트" type="S" mode="update" >
				<sql id="sql1" name = "SQL1">
					<data id="data1" name = "">
						 UPDATE  TB_OR_KH_NVL                         
						 SET     DCZ_SQNO       = #dcz_sqno# 
						        ,KRI_NVL		= TRIM(#kri_nvl#)                                     
						 WHERE   GRP_ORG_C       = #grp_org_c#                     
						 AND     BRC             = TRIM(#brc#)                          
						 AND     OPRK_RKI_ID     = #oprk_rki_id#                   
						 AND     BAS_YM       = #bas_ym#                               
					</data>
				</sql>
				<result id="result" name="실행결과 확인값" attrname="count" type="count"/>
			</unit-->
		</group>
	</process>	
	
	
	
	<process id="ORKR011301" name="KRI 평가 결과 조회" forward="/kri/ORKR0113" forwardng="/comm/errorPage" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<group id="grp01" name="grp01" type="S">
			<unit id="unit01" name="KRI평가일정조회 공통" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT /*KRI평가일정조회*/ 
			       			   A.BAS_YM /*기준년월*/  
			     			   , A.RKI_ST_DT AS EFCT_ST_DT /*모니터링시작일자*/ 
			     			   , A.RKI_ED_DT AS EFCT_ED_DT /*모니터링종료일자*/ 
			     			   , A.RKI_PRG_STSC /*리스크진행상태코드*/  
			     			   , TO_CHAR(A.FIR_INP_DTM,'YYYYMMDD') AS FIR_INP_DTM /*전월마감일자*/  
			     			   , DECODE(A.BAS_YM,(SELECT MAX(BAS_YM) FROM TB_OR_OM_SCHD WHERE GRP_ORG_C=A.GRP_ORG_C),'Y','N') AS PRE_YN /*현재진행여부*/ 
			  			  FROM TB_OR_OM_SCHD A /*KRI평가일정관리기본*/ 
			 			 WHERE A.GRP_ORG_C = TRIM(#grp_org_c#)
			 		</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="rki_prg_stsc == 3" variable="#rki_prg_stsc#" comparison="eq" value="3" />
					<data id="data111" name="">
				   		   AND A.RKI_PRG_STSC IN ('03','04')  
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
	
	<process id="ORKR011302" name="핵심리스크지표 허용한도 초과현황" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" 		name="기준년월" 	parmid="bas_ym" attr="S" default_value=""/>
		<parm id="sch_brc" 		name="사무소코드" parmid="" 		attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="핵심리스크지표 허용한도 초과현황" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT COUNT(DISTINCT A.BRC) AS H_TARGET_CNT                                    -- 대상부서
						     , COUNT(*) 			 AS H_KRI_CNT                                       -- KRI 개수
						     
						     , NVL(MAX(D.B_BEF_RED_CNT),0)  AS H_BEF_RED_CNT                            -- 전월 RED 개수
						     , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) AS H_RED_CNT-- RED 개수
						     , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) 
						       - NVL(MAX(D.B_BEF_RED_CNT),0) AS H_RED_CHG_CNT                           -- RED 증감
						     , CASE WHEN NVL(MAX(D.B_BEF_RED_CNT),0) = 0 THEN 0 
						          ELSE ROUND(((NVL(SUM(CASE WHEN A.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) - NVL(MAX(D.B_BEF_RED_CNT),0)) /  NVL(MAX(D.B_BEF_RED_CNT),0)) * 100, 1) 
						        END AS H_RED_CHG_PNT  													-- RED 증감율 
        						       
						     , NVL(MAX(D.B_BEF_YELLOW_CNT),0)  AS H_BEF_YELLOW_CNT                            	-- 전월 YELLOW 개수
						     , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'YELLOW' THEN 1 ELSE 0 END ),0) AS H_YELLOW_CNT	-- YELLOW 발생건수
						     , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'YELLOW' THEN 1 ELSE 0 END ),0) 
						       - NVL(MAX(D.B_BEF_YELLOW_CNT),0) AS H_YELLOW_CHG_CNT                           	-- YELLOW 증감
						     , CASE WHEN NVL(MAX(D.B_BEF_YELLOW_CNT),0) = 0 THEN 0 
						          ELSE ROUND(((NVL(SUM(CASE WHEN A.KRI_GRDNM = 'YELLOW' THEN 1 ELSE 0 END ),0) - NVL(MAX(D.B_BEF_YELLOW_CNT),0)) /  NVL(MAX(D.B_BEF_YELLOW_CNT),0)) * 100, 1)  
						        END AS H_YELLOW_CHG_PNT  														-- YELLOW 증감율						       
						       
						     , NVL(MAX(D.B_BEF_PLAN_CNT),0) AS H_BEF_PLAN_CNT                           -- 전월 대응방안 개수
						     , COUNT(C.BRC) 		 AS H_PLAN_CNT                                      -- 대응방안 갯수
						     , COUNT(C.BRC) - NVL(MAX(D.B_BEF_PLAN_CNT),0)		 AS H_PLAN_CHG_CNT      -- 대응방안 증감
						     , CASE WHEN NVL(MAX(D.B_BEF_PLAN_CNT),0) = 0 THEN 0 
						          ELSE ROUND(((COUNT(C.BRC) - NVL(MAX(D.B_BEF_PLAN_CNT),0)) /  NVL(MAX(D.B_BEF_PLAN_CNT),0)) * 100, 1)  
						        END AS H_PLAN_CHG_PNT  
						  FROM TB_OR_KS_RKI_BR_SMST A, 
						       TB_OR_KM_ACT C
						     , ( SELECT NVL(SUM(CASE WHEN X.KRI_GRDNM = 'RED' THEN 1 ELSE 0 END ),0) AS B_BEF_RED_CNT
						              , NVL(SUM(CASE WHEN X.KRI_GRDNM = 'YELLOW' THEN 1 ELSE 0 END ),0) AS B_BEF_YELLOW_CNT
						              , COUNT(Z.BRC) AS B_BEF_PLAN_CNT
						           FROM TB_OR_KS_RKI_BR_SMST X,  
						                TB_OR_KM_ACT Z
						          WHERE 1 = 1
						            AND X.GRP_ORG_C  = TRIM(#grp_org_c#)
						            AND X.BRC 		 = TRIM(#sch_brc#)
						            AND X.BAS_YM     = TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -1), 'YYYYMM')
						            AND X.GRP_ORG_C  = Z.GRP_ORG_C(+)
						            AND X.BRC        = Z.BRC(+)
						            AND X.OPRK_RKI_ID= Z.OPRK_RKI_ID(+)
						            AND X.BAS_YM     = Z.BAS_YM(+)  
						        ) D
						 WHERE 1 = 1
						   AND A.GRP_ORG_C  = TRIM(#grp_org_c#)
						   AND A.BRC        = TRIM(#sch_brc#)
						   AND A.BAS_YM     = TRIM(#sch_bas_ym#)
						   AND A.GRP_ORG_C  = C.GRP_ORG_C(+)
						   AND A.BRC        = C.BRC(+)
						   AND A.OPRK_RKI_ID= C.OPRK_RKI_ID(+)
						   AND A.BAS_YM     = C.BAS_YM(+) 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>		
	
	<process id="ORKR011303" name="KRI 등급 현황" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" object="String"/>
		<session id="userid" name="사용자ID" sessionid="userid" object="String"/>
		<parm id="bas_ym" 		name="기준년월" 	parmid="bas_ym" attr="S" default_value=""/>
		<parm id="sch_brc" 		name="사무소코드" parmid="" 		attr="S" default_value=""/>
		<group id="grp01" name="grp01" type="S">
		    <unit id="unit99" name="KRI 등급 현황" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT H_KRI_CNT                                  -- KRI 개수
						     , H_RED_G_CNT                                -- RED 개수
						     , H_YELLOW_G_CNT                             -- YELLOW 개수
						     , H_PLAN_G_CNT                               -- 대응방안 개수
						     , CASE WHEN H_KRI_CNT = 0 THEN 0
						            ELSE ROUND(( H_RED_G_CNT / H_KRI_CNT ) * 100, 1) 
						            END AS H_RED_CNT_PNT                -- RED 비율 
						     , CASE WHEN H_KRI_CNT = 0 THEN 0
						            ELSE ROUND(( H_YELLOW_G_CNT / H_KRI_CNT ) * 100, 1)  
						            END AS H_YELLOW_CNT_PNT             -- YELLO 비율 
						     , CASE WHEN H_KRI_CNT = 0 THEN 0
						            ELSE ROUND(( H_PLAN_G_CNT / H_KRI_CNT ) * 100, 1)  
						            END AS H_PLAN_CNT_PNT               -- 대응방안 비율 
						  FROM (
						        SELECT COUNT(*) 			 AS H_KRI_CNT                     -- KRI 개수
						             , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'RED' 
						                            THEN 1 ELSE 0 END ),0) AS H_RED_G_CNT     -- RED 개수
						             , NVL(SUM(CASE WHEN A.KRI_GRDNM = 'YELLOW' 
						                            THEN 1 ELSE 0 END ),0) AS H_YELLOW_G_CNT  -- YELLOW 개수
						             , COUNT(C.BRC) 		 AS H_PLAN_G_CNT                  -- 대응방안 개수                               
						                
						          FROM TB_OR_KS_RKI_BR_SMST A, 
						               TB_OR_KM_ACT C
						         WHERE 1 = 1
						           AND A.GRP_ORG_C  = TRIM(#grp_org_c#)
						           AND A.BRC        = TRIM(#sch_brc#)
						           AND A.BAS_YM     = TRIM(#sch_bas_ym#)
						           AND A.GRP_ORG_C  = C.GRP_ORG_C(+)
						           AND A.BRC        = C.BRC(+)
						           AND A.OPRK_RKI_ID= C.OPRK_RKI_ID(+)
						           AND A.BAS_YM     = C.BAS_YM(+) 
       )
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
		
	<process id="ORKR011304" 	name="KRI 평가결과 추이" 	forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" 	sessionid="grp_org_c" 	object="String"/>
		<session id="userid" 	name="사용자ID" 			sessionid="userid" 		object="String"/>
		<parm id="bas_ym" 		name="기준년월" 			parmid="bas_ym" 		attr="S" 	default_value=""/>
		<parm id="sch_brc" 		name="사무소코드" 		parmid="" 				attr="S" 	default_value=""/>
		<group id="grp01" 		name="grp01" 			type="S">
		    <unit id="unit99" 	name="KRI 평가결과 추이" 	type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT A.GRP_ORG_C,	A.OPRK_RKI_ID, A.OPRK_RKINM, O.BRC, P.BRNM, A.KRI_NVL, A.KRI_LMT_DSC, A.KRI_GRDNM
						     , ROWNUM AS NUM
						     , CASE WHEN C.KRI_NVL = 0 THEN 0 
						            ELSE ROUND(((A.KRI_NVL - C.KRI_NVL)/ C.KRI_NVL) * 100, 1)  END || ' %' AS KRI_CHG_PNT
						     , C.KRI_NVL || DECODE(C.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_01
						     , D.KRI_NVL || DECODE(D.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_02
						     , E.KRI_NVL || DECODE(E.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_03
						     , F.KRI_NVL || DECODE(F.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_04
						     , G.KRI_NVL || DECODE(G.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_05
						     , H.KRI_NVL || DECODE(H.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_06
						     
						     , I.KRI_NVL || DECODE(I.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_07
						     , J.KRI_NVL || DECODE(J.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_08
						     , K.KRI_NVL || DECODE(K.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_09
						     , L.KRI_NVL || DECODE(L.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_10
						     , M.KRI_NVL || DECODE(M.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_11
						     , N.KRI_NVL || DECODE(N.KRI_GRDNM, 'RED', '(R)', 'YELLOW', '(Y)', 'GREEN', '(G)') AS KRI_GRDNM_12
						     
						     , O.BRC
						     , P.BRNM	
						   --  , NVL(((A.KRI_NVL - C.KRI_NVL) / C.KRI_NVL) * 100,0) AS KRI_CHG_PNT
						  FROM  TB_OR_KS_RKI_BR_SMST A, TB_OR_KM_ACT B
						      , TB_OR_KS_RKI_BR_SMST C 
						      , TB_OR_KS_RKI_BR_SMST D 
						      , TB_OR_KS_RKI_BR_SMST E 
						      , TB_OR_KS_RKI_BR_SMST F 
						      , TB_OR_KS_RKI_BR_SMST G 
						      , TB_OR_KS_RKI_BR_SMST H
						
						      , TB_OR_KS_RKI_BR_SMST I 
						      , TB_OR_KS_RKI_BR_SMST J 
						      , TB_OR_KS_RKI_BR_SMST K 
						      , TB_OR_KS_RKI_BR_SMST L 
						      , TB_OR_KS_RKI_BR_SMST M 
						      , TB_OR_KS_RKI_BR_SMST N
						
						      , TB_OR_KH_BRC         O
						      , TB_OR_OM_ORGZ        P
										      
						 WHERE A.GRP_ORG_C  = TRIM(#grp_org_c#)
						   AND A.BRC        = TRIM(#sch_brc#)
						   AND A.GRP_ORG_C  = B.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= B.OPRK_RKI_ID(+)
						   AND A.BAS_YM     = TRIM(TRIM(#sch_bas_ym#))
						   AND A.GRP_ORG_C  = C.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= C.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -1), 'YYYYMM') = C.BAS_YM(+)
						   AND A.BRC = C.BRC(+)
						
						   AND A.GRP_ORG_C  = D.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= D.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -2), 'YYYYMM') = D.BAS_YM(+)
						   AND A.BRC = D.BRC(+)
						   
						   AND A.GRP_ORG_C  = E.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= E.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -3), 'YYYYMM') = E.BAS_YM(+)
						   AND A.BRC = E.BRC(+)
						
						   AND A.GRP_ORG_C  = F.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= F.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -4), 'YYYYMM') = F.BAS_YM(+)
						   AND A.BRC = F.BRC(+)
						
						   AND A.GRP_ORG_C  = G.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= G.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -5), 'YYYYMM') = G.BAS_YM(+)
						   AND A.BRC = G.BRC(+)
						   
						   AND A.GRP_ORG_C  = H.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= H.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -6), 'YYYYMM') = H.BAS_YM(+)
						   AND A.BRC = H.BRC(+)
						   
						   AND A.GRP_ORG_C  = I.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= I.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -7), 'YYYYMM') = I.BAS_YM(+)
						   AND A.BRC = I.BRC(+)
						   
						   AND A.GRP_ORG_C  = J.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= J.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -8), 'YYYYMM') = J.BAS_YM(+)
						   AND A.BRC = J.BRC(+)
						
						   AND A.GRP_ORG_C  = K.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= K.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -9), 'YYYYMM') = K.BAS_YM(+)
						   AND A.BRC = K.BRC(+)
						
						   AND A.GRP_ORG_C  = L.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= L.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -10), 'YYYYMM') = L.BAS_YM(+)
						   AND A.BRC = L.BRC(+)
						   
						   AND A.GRP_ORG_C  = M.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= M.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -11), 'YYYYMM') = M.BAS_YM(+)
						   AND A.BRC = M.BRC(+)  
						   
						   AND A.GRP_ORG_C  = N.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= N.OPRK_RKI_ID(+)
						   AND TO_CHAR(ADD_MONTHS(TRIM(#sch_bas_ym#)||'01', -12), 'YYYYMM') = N.BAS_YM(+)
						   AND A.BRC = N.BRC(+)   
						   
						   AND A.GRP_ORG_C  = O.GRP_ORG_C(+)
						   AND A.OPRK_RKI_ID= O.OPRK_RKI_ID(+)
						   
						   AND O.GRP_ORG_C  = P.GRP_ORG_C(+)
						   AND O.BRC        = P.BRC(+)
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>	
	
	<process id="ORKR011902" name="대응방안 및 실행결과 이력 조회" forward="/comm/jsonLst" forwardng="/comm/jsonErr" resource="kri" grid_process_id="">
		<session id="grp_org_c" name="그룹내 기관코드" sessionid="grp_org_c" 	object="String"/>
		<session id="userid" 	name="사용자ID" 		sessionid="userid" 		object="String"/>
		
		<parm id="hd_bas_ym" 			name="기준년월" 					parmid="hd_bas_ym" 				attr="S" default_value=""/>
		<parm id="hd_apl_brc" 			name="적용사무소코드" 				parmid="hd_apl_brc" 			attr="S" default_value=""/>
		<parm id="sch_rkinm" 			name="리스크지표명" 				parmid="sch_rkinm" 				attr="S" default_value=""/>
		<parm id="st_inp_stsc" 			name="입력상태" 					parmid="st_inp_stsc" 			attr="S" default_value=""/>
		<parm id="st_dcz_stsc" 			name="결재상태" 					parmid="st_dcz_stsc" 			attr="S" default_value=""/>
		<parm id="hd_hofc_bizo_dsc" 	name="본부영업점구분코드" 			parmid="hd_hofc_bizo_dsc" 		attr="S" default_value=""/>
		<parm id="hd_hofc_bizo_menu_yn" name="영업본부및하위조직메뉴유무" 	parmid="hd_hofc_bizo_menu_yn" 	attr="S" default_value=""/>
		
		<group id="grp01" name="grp01" type="S">
			<unit id="unit99" name="조치계획 현황 목록  조회" type="S">
				<sql id="sql11" name="SQL11">
					<data id="data111" name="">
						SELECT 											
							   A.BRC AS APL_BRC										
				  			   , H.BRNM APL_BRNM								
				  			   , A.OPRK_RKI_ID RKI_ID						
				  			   , D.OPRK_RKINM RKINM							
				  			   , D.RKI_LVL_C									
				  			   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE A.GRP_ORG_C=GRP_ORG_C AND D.RKI_LVL_C=IDVDC_VAL AND INTG_GRP_C='RKI_LVL_C') RKI_LVL_NM								
				  			   , E.KRI_GRDNM 								
				  			   , F.KRI_GRDNM SND_GRDNM						
				  			   , G.KRI_GRDNM THD_GRDNM						
				  			   , (SELECT INTG_IDVD_CNM FROM TB_OR_OM_CODE WHERE A.GRP_ORG_C=GRP_ORG_C AND D.RKI_UNT_C=IDVDC_VAL AND INTG_GRP_C='RKI_UNT_C') RKI_UNT_NM								
 				  			   , A.CAS_DTL_CNTN								
				  			   , A.CFT_PLAN_CNTN								
							   , A.EXE_RZT_CNTN								
							   , C.RTN_CNTN									
							   , C.DCZ_DT DRUP_DT							
							   , C.ACT_DCZ_STSC								
							   , A.BAS_YM									
							   , I.CFT_PLAN_CNTN SND_PLAN_CNTN	
						       , TO_CHAR(TO_DATE(A.ACT_CPL_DT), 'YYYY-MM-DD') AS ACT_CPL_DT /* 이행완료일 */
						       , (SELECT BRNM FROM TB_OR_OM_ORGZ WHERE GRP_ORG_C = A.GRP_ORG_C AND BRC = J.BRC) AS BRNM	
						       , E.KRI_NVL						   			
					      FROM   TB_OR_KM_ACT A				
					           , TB_OR_KH_LMT B				
					           , TB_OR_KH_ACT_DCZ C			
					           , TB_OR_KM_RKI D				
					           , TB_OR_KS_RKI_BR_SMST E	/* 당월 */			
					           , TB_OR_KS_RKI_BR_SMST F	/* 전월 */		
					           , TB_OR_KS_RKI_BR_SMST G	/* 전전월 */	
					           , TB_OR_OM_ORGZ H				
					           , TB_OR_KM_ACT I		
					           , TB_OR_KH_BRC J
					     WHERE A.GRP_ORG_C = B.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = B.OPRK_RKI_ID 			
					       AND A.BRC = B.BRC							
					       AND A.BAS_YM = B.BAS_YM					
					       AND A.GRP_ORG_C = C.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = C.OPRK_RKI_ID(+) 		
					       AND A.BRC = C.BRC(+)						
					       AND A.BAS_YM = C.BAS_YM(+)					
					       AND A.DCZ_SQNO = C.DCZ_SQNO(+)				
					       AND A.GRP_ORG_C = D.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = D.OPRK_RKI_ID	 		
					       AND A.GRP_ORG_C = E.GRP_ORG_C				
					       AND A.OPRK_RKI_ID = E.OPRK_RKI_ID	 		
					       AND A.BRC = E.BRC	 						
					       AND A.BAS_YM = E.BAS_YM	 				
					       AND A.GRP_ORG_C = F.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = F.OPRK_RKI_ID(+) 		
					       AND A.BRC = F.BRC(+)						
					       AND TO_CHAR(ADD_MONTHS(TO_DATE(A.BAS_YM,'YYYYMM'), -1),'YYYYMM') = F.BAS_YM(+)				
					       AND A.GRP_ORG_C = G.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = G.OPRK_RKI_ID(+) 		
					       AND A.BRC = G.BRC(+)						
					       AND TO_CHAR(ADD_MONTHS(TO_DATE(A.BAS_YM,'YYYYMM'), -2),'YYYYMM') = G.BAS_YM(+)				
					       AND A.GRP_ORG_C = H.GRP_ORG_C				
					       AND A.BRC = H.BRC	 						
					       AND H.UYN = 'Y'	 							
					       AND H.KRI_ORGZ_YN = 'Y'	 					
					       AND A.GRP_ORG_C = I.GRP_ORG_C(+)			
					       AND A.OPRK_RKI_ID = I.OPRK_RKI_ID(+) 		
					       AND A.BRC = I.BRC(+)						
					       AND TO_CHAR(ADD_MONTHS(TO_DATE(A.BAS_YM,'YYYYMM'), -1),'YYYYMM') = I.BAS_YM(+)				
						   AND A.GRP_ORG_C = TRIM(#grp_org_c#)       
						   AND A.BAS_YM BETWEEN TRIM(REPLACE(#from_bas_ym#,'-','')) AND TRIM(REPLACE(#to_bas_ym#,'-',''))        
						   AND A.GRP_ORG_C = J.GRP_ORG_C				
   						   AND A.OPRK_RKI_ID = J.OPRK_RKI_ID       
						   <!-- AND A.BAS_YM = TRIM(REPLACE(#hd_bas_ym#,'-','')) -->   
					</data>
				</sql>
				<sql id="sql12" name="SQL12">
					<condition id="cond111" name="hd_apl_brc != null" variable="#hd_apl_brc#" comparison="ne" value="" />
					<condition id="cond112" name="hd_hofc_bizo_menu_yn == Y" variable="#hd_hofc_bizo_menu_yn#" comparison="eq" value="Y" />
					<data id="data11" name="">
					   	   AND D.UP_BRC = (SELECT UP_BRC FROM TB_OR_OM_ORGZ WHERE BRC = TRIM(#hd_apl_brc#))
					</data>
				</sql>
				<sql id="sql13" name="SQL13">
					<condition id="cond111" name="hd_apl_brc != null" variable="#hd_apl_brc#" comparison="ne" value="" />
					<condition id="cond112" name="hd_hofc_bizo_menu_yn != Y" variable="#hd_hofc_bizo_menu_yn#" comparison="ne" value="Y" />
					<data id="data11" name="">
					   	   <!-- AND A.BRC = TRIM(#hd_apl_brc#) --> 
					</data>
				</sql>
				<sql id="sql14" name="SQL14">
					<condition id="cond111" name="sch_rkinm != null" variable="#sch_rkinm#" comparison="ne" value="" />
					<data id="data11" name="">
					   	   AND UPPER(D.OPRK_RKINM) LIKE '%' || (TRIM(#sch_rkinm#)) || '%'  
					</data>
				</sql>
				<sql id="sql15" name="SQL15">
					<condition id="cond111" name="st_dcz_stsc == 1" variable="#st_dcz_stsc#" comparison="eq" value="1" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '01' 
					</data>
				</sql>
				<sql id="sql16" name="SQL16">
					<condition id="cond111" name="st_dcz_stsc == 2" variable="#st_dcz_stsc#" comparison="eq" value="2" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '02'
					</data>
				</sql>
				<sql id="sql17" name="SQL17">
					<condition id="cond111" name="st_dcz_stsc == 3" variable="#st_dcz_stsc#" comparison="eq" value="3" />
					<data id="data11" name="">
					   	   AND (C.ACT_DCZ_STSC = '03' OR C.ACT_DCZ_STSC = '04')
					</data>
				</sql>
				<sql id="sql18" name="SQL18">
					<condition id="cond111" name="st_inp_stsc == 1" variable="#st_inp_stsc#" comparison="eq" value="1" />
					<data id="data11" name="">
					   	   AND (TRIM(A.DRUP_DT) = '' OR A.DRUP_DT IS NULL)
					</data>
				</sql>
				<sql id="sql19" name="SQL19">
					<condition id="cond111" name="st_inp_stsc == 2" variable="#st_inp_stsc#" comparison="eq" value="2" />
					<data id="data11" name="">
					   	   AND C.ACT_DCZ_STSC = '01'
					</data>
				</sql>
				<sql id="sql20" name="SQL20">
					<condition id="cond111" name="st_inp_stsc == 3" variable="#st_inp_stsc#" comparison="eq" value="3" />
					<data id="data11" name="">
					   	   AND (C.ACT_DCZ_STSC = '02' OR C.ACT_DCZ_STSC = '03' OR C.ACT_DCZ_STSC = '04')
					</data>
				</sql>
				<sql id="sql21" name="SQL21">
					<data id="data11" name="">
			   		  ORDER BY H.BRNM 
					</data>
				</sql>
				<result id="vList" name="vList" attrname="vList" type="vector_entitybean"/>
			</unit>
		</group>
	</process>		
	
</com_servlet>